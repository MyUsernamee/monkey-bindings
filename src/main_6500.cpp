// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/TransformSyncer
#include "UnityEngine/Animations/Rigging/RigSyncSceneToStreamJob.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Animations.AnimationStream
#include "UnityEngine/Animations/AnimationStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Animations.TransformSceneHandle> sceneHandles
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::TransformSceneHandle>& UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer::dyn_sceneHandles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer::dyn_sceneHandles");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneHandles"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::TransformSceneHandle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Animations.TransformStreamHandle> streamHandles
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::TransformStreamHandle>& UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer::dyn_streamHandles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer::dyn_streamHandles");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "streamHandles"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::TransformStreamHandle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/TransformSyncer.Create
::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer::Create(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "RigSyncSceneToStreamJob/TransformSyncer", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/TransformSyncer.Dispose
void UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/TransformSyncer.BindAt
void UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer::BindAt(int index, ::UnityEngine::Animator* animator, ::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer::BindAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "BindAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(transform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, animator, transform);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/TransformSyncer.Sync
void UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer::Sync(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::TransformSyncer::Sync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Sync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/PropertySyncer
#include "UnityEngine/Animations/Rigging/RigSyncSceneToStreamJob.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: UnityEngine.Animations.AnimationStream
#include "UnityEngine/Animations/AnimationStream.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Animations.PropertySceneHandle> sceneHandles
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertySceneHandle>& UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::dyn_sceneHandles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::dyn_sceneHandles");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneHandles"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertySceneHandle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Animations.PropertyStreamHandle> streamHandles
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle>& UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::dyn_streamHandles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::dyn_streamHandles");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "streamHandles"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<System.Single> buffer
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<float>& UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::dyn_buffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/PropertySyncer.Create
::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::Create(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::Create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "RigSyncSceneToStreamJob/PropertySyncer", "Create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/PropertySyncer.Dispose
void UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/PropertySyncer.BindAt
void UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::BindAt(int index, ::UnityEngine::Animator* animator, ::UnityEngine::Component* component, ::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::BindAt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "BindAt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(property)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, animator, component, property);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/PropertySyncer.Sync
void UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::Sync(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::Sync");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Sync", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(stream));
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigSyncSceneToStreamJob/PropertySyncer.StreamValues
::Unity::Collections::NativeArray_1<float> UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::StreamValues(ByRef<::UnityEngine::Animations::AnimationStream> stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigSyncSceneToStreamJob::PropertySyncer::StreamValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "StreamValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::Unity::Collections::NativeArray_1<float>, false>(this, ___internal__method, byref(stream));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.IRigSyncSceneToStreamData
#include "UnityEngine/Animations/Rigging/IRigSyncSceneToStreamData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.IRigSyncSceneToStreamData.get_syncableTransforms
::ArrayW<::UnityEngine::Transform*> UnityEngine::Animations::Rigging::IRigSyncSceneToStreamData::get_syncableTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigSyncSceneToStreamData::get_syncableTransforms");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigSyncSceneToStreamData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Transform*>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IRigSyncSceneToStreamData.get_syncableProperties
::ArrayW<::UnityEngine::Animations::Rigging::SyncableProperties> UnityEngine::Animations::Rigging::IRigSyncSceneToStreamData::get_syncableProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigSyncSceneToStreamData::get_syncableProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigSyncSceneToStreamData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Animations::Rigging::SyncableProperties>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IRigSyncSceneToStreamData.get_rigStates
::ArrayW<bool> UnityEngine::Animations::Rigging::IRigSyncSceneToStreamData::get_rigStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigSyncSceneToStreamData::get_rigStates");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigSyncSceneToStreamData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<bool>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.ReadWriteTransformHandle
#include "UnityEngine/Animations/Rigging/ReadWriteTransformHandle.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Animations.AnimationStream
#include "UnityEngine/Animations/AnimationStream.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.TransformStreamHandle m_Handle
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::TransformStreamHandle& UnityEngine::Animations::Rigging::ReadWriteTransformHandle::dyn_m_Handle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::dyn_m_Handle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Handle"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::TransformStreamHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.GetLocalPosition
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::ReadWriteTransformHandle::GetLocalPosition(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::GetLocalPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.GetLocalRotation
::UnityEngine::Quaternion UnityEngine::Animations::Rigging::ReadWriteTransformHandle::GetLocalRotation(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::GetLocalRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.GetLocalScale
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::ReadWriteTransformHandle::GetLocalScale(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::GetLocalScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.GetLocalTRS
void UnityEngine::Animations::Rigging::ReadWriteTransformHandle::GetLocalTRS(::UnityEngine::Animations::AnimationStream stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, ByRef<::UnityEngine::Vector3> scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::GetLocalTRS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalTRS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, byref(position), byref(rotation), byref(scale));
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.SetLocalPosition
void UnityEngine::Animations::Rigging::ReadWriteTransformHandle::SetLocalPosition(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::SetLocalPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLocalPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, position);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.SetLocalRotation
void UnityEngine::Animations::Rigging::ReadWriteTransformHandle::SetLocalRotation(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::SetLocalRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLocalRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, rotation);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.SetLocalScale
void UnityEngine::Animations::Rigging::ReadWriteTransformHandle::SetLocalScale(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Vector3 scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::SetLocalScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLocalScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(scale)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, scale);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.SetLocalTRS
void UnityEngine::Animations::Rigging::ReadWriteTransformHandle::SetLocalTRS(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, ::UnityEngine::Vector3 scale, bool useMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::SetLocalTRS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetLocalTRS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(scale), ::il2cpp_utils::ExtractType(useMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, position, rotation, scale, useMask);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.GetPosition
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::ReadWriteTransformHandle::GetPosition(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::GetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.GetRotation
::UnityEngine::Quaternion UnityEngine::Animations::Rigging::ReadWriteTransformHandle::GetRotation(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::GetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.GetGlobalTR
void UnityEngine::Animations::Rigging::ReadWriteTransformHandle::GetGlobalTR(::UnityEngine::Animations::AnimationStream stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::GetGlobalTR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetGlobalTR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, byref(position), byref(rotation));
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.SetPosition
void UnityEngine::Animations::Rigging::ReadWriteTransformHandle::SetPosition(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Vector3 position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::SetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(position)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, position);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.SetRotation
void UnityEngine::Animations::Rigging::ReadWriteTransformHandle::SetRotation(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Quaternion rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::SetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(rotation)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, rotation);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.SetGlobalTR
void UnityEngine::Animations::Rigging::ReadWriteTransformHandle::SetGlobalTR(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Vector3 position, ::UnityEngine::Quaternion rotation, bool useMask) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::SetGlobalTR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetGlobalTR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(position), ::il2cpp_utils::ExtractType(rotation), ::il2cpp_utils::ExtractType(useMask)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, position, rotation, useMask);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.IsResolved
bool UnityEngine::Animations::Rigging::ReadWriteTransformHandle::IsResolved(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::IsResolved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsResolved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.IsValid
bool UnityEngine::Animations::Rigging::ReadWriteTransformHandle::IsValid(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.Resolve
void UnityEngine::Animations::Rigging::ReadWriteTransformHandle::Resolve(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::Resolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Resolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadWriteTransformHandle.Bind
::UnityEngine::Animations::Rigging::ReadWriteTransformHandle UnityEngine::Animations::Rigging::ReadWriteTransformHandle::Bind(::UnityEngine::Animator* animator, ::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadWriteTransformHandle::Bind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "ReadWriteTransformHandle", "Bind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, transform);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.ReadOnlyTransformHandle
#include "UnityEngine/Animations/Rigging/ReadOnlyTransformHandle.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: UnityEngine.Animations.AnimationStream
#include "UnityEngine/Animations/AnimationStream.hpp"
// Including type: UnityEngine.Quaternion
#include "UnityEngine/Quaternion.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.TransformStreamHandle m_StreamHandle
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::TransformStreamHandle& UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::dyn_m_StreamHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::dyn_m_StreamHandle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_StreamHandle"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::TransformStreamHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.TransformSceneHandle m_SceneHandle
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::TransformSceneHandle& UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::dyn_m_SceneHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::dyn_m_SceneHandle");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SceneHandle"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::TransformSceneHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte m_InStream
[[deprecated("Use field access instead!")]] uint8_t& UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::dyn_m_InStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::dyn_m_InStream");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_InStream"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadOnlyTransformHandle.GetLocalPosition
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::GetLocalPosition(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::GetLocalPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadOnlyTransformHandle.GetLocalRotation
::UnityEngine::Quaternion UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::GetLocalRotation(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::GetLocalRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadOnlyTransformHandle.GetLocalScale
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::GetLocalScale(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::GetLocalScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadOnlyTransformHandle.GetLocalTRS
void UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::GetLocalTRS(::UnityEngine::Animations::AnimationStream stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation, ByRef<::UnityEngine::Vector3> scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::GetLocalTRS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetLocalTRS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, byref(position), byref(rotation), byref(scale));
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadOnlyTransformHandle.GetPosition
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::GetPosition(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::GetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadOnlyTransformHandle.GetRotation
::UnityEngine::Quaternion UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::GetRotation(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::GetRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadOnlyTransformHandle.GetGlobalTR
void UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::GetGlobalTR(::UnityEngine::Animations::AnimationStream stream, ByRef<::UnityEngine::Vector3> position, ByRef<::UnityEngine::Quaternion> rotation) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::GetGlobalTR");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetGlobalTR", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Quaternion&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, byref(position), byref(rotation));
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadOnlyTransformHandle.IsResolved
bool UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::IsResolved(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::IsResolved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsResolved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadOnlyTransformHandle.IsValid
bool UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::IsValid(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadOnlyTransformHandle.Resolve
void UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::Resolve(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::Resolve");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Resolve", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ReadOnlyTransformHandle.Bind
::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::Bind(::UnityEngine::Animator* animator, ::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle::Bind");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "ReadOnlyTransformHandle", "Bind", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, transform);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.TwistCorrectionJob
#include "UnityEngine/Animations/Rigging/TwistCorrectionJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadOnlyTransformHandle source
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle& UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_source");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "source"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion sourceInverseBindRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_sourceInverseBindRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_sourceInverseBindRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceInverseBindRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 axisMask
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_axisMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_axisMask");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "axisMask"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Animations.Rigging.ReadWriteTransformHandle> twistTransforms
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle>& UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_twistTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_twistTransforms");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "twistTransforms"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Animations.PropertyStreamHandle> twistWeights
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle>& UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_twistWeights() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_twistWeights");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "twistWeights"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<UnityEngine.Quaternion> twistBindRotations
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<::UnityEngine::Quaternion>& UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_twistBindRotations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_twistBindRotations");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "twistBindRotations"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Unity.Collections.NativeArray`1<System.Single> weightBuffer
[[deprecated("Use field access instead!")]] ::Unity::Collections::NativeArray_1<float>& UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_weightBuffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_weightBuffer");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weightBuffer"))->offset;
  return *reinterpret_cast<::Unity::Collections::NativeArray_1<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.FloatProperty <jobWeight>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_$jobWeight$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionJob::dyn_$jobWeight$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<jobWeight>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionJob.get_jobWeight
::UnityEngine::Animations::Rigging::FloatProperty UnityEngine::Animations::Rigging::TwistCorrectionJob::get_jobWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionJob::get_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistCorrectionJob), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::FloatProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionJob.set_jobWeight
void UnityEngine::Animations::Rigging::TwistCorrectionJob::set_jobWeight(::UnityEngine::Animations::Rigging::FloatProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionJob::set_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistCorrectionJob), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionJob.ProcessRootMotion
void UnityEngine::Animations::Rigging::TwistCorrectionJob::ProcessRootMotion(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionJob::ProcessRootMotion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistCorrectionJob), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionJob.ProcessAnimation
void UnityEngine::Animations::Rigging::TwistCorrectionJob::ProcessAnimation(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionJob::ProcessAnimation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistCorrectionJob), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionJob.TwistRotation
::UnityEngine::Quaternion UnityEngine::Animations::Rigging::TwistCorrectionJob::TwistRotation(::UnityEngine::Vector3 axis, ::UnityEngine::Quaternion rot) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionJob::TwistRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "TwistCorrectionJob", "TwistRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis), ::il2cpp_utils::ExtractType(rot)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, axis, rot);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.ITwistCorrectionData
#include "UnityEngine/Animations/Rigging/ITwistCorrectionData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Animations.Rigging.WeightedTransformArray
#include "UnityEngine/Animations/Rigging/WeightedTransformArray.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.ITwistCorrectionData.get_source
::UnityEngine::Transform* UnityEngine::Animations::Rigging::ITwistCorrectionData::get_source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwistCorrectionData::get_source");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwistCorrectionData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ITwistCorrectionData.get_twistNodes
::UnityEngine::Animations::Rigging::WeightedTransformArray UnityEngine::Animations::Rigging::ITwistCorrectionData::get_twistNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwistCorrectionData::get_twistNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwistCorrectionData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::WeightedTransformArray, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ITwistCorrectionData.get_twistAxis
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::ITwistCorrectionData::get_twistAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwistCorrectionData::get_twistAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwistCorrectionData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ITwistCorrectionData.get_twistNodesProperty
::StringW UnityEngine::Animations::Rigging::ITwistCorrectionData::get_twistNodesProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwistCorrectionData::get_twistNodesProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwistCorrectionData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.TwoBoneIKConstraintJob
#include "UnityEngine/Animations/Rigging/TwoBoneIKConstraintJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadWriteTransformHandle root
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadWriteTransformHandle& UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_root");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "root"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadWriteTransformHandle mid
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadWriteTransformHandle& UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_mid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_mid");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mid"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadWriteTransformHandle tip
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadWriteTransformHandle& UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_tip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_tip");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tip"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadOnlyTransformHandle hint
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle& UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_hint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_hint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hint"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.ReadOnlyTransformHandle target
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle& UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_target");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "target"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.AffineTransform targetOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::AffineTransform& UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_targetOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_targetOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::AffineTransform*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector2 linkLengths
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector2& UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_linkLengths() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_linkLengths");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linkLengths"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector2*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.FloatProperty targetPositionWeight
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_targetPositionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_targetPositionWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetPositionWeight"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.FloatProperty targetRotationWeight
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_targetRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_targetRotationWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "targetRotationWeight"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.FloatProperty hintWeight
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_hintWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_hintWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hintWeight"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.FloatProperty <jobWeight>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::FloatProperty& UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_$jobWeight$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::dyn_$jobWeight$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<jobWeight>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::FloatProperty*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintJob.get_jobWeight
::UnityEngine::Animations::Rigging::FloatProperty UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::get_jobWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::get_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::FloatProperty, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintJob.set_jobWeight
void UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::set_jobWeight(::UnityEngine::Animations::Rigging::FloatProperty value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::set_jobWeight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintJob.ProcessRootMotion
void UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::ProcessRootMotion(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::ProcessRootMotion");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintJob.ProcessAnimation
void UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::ProcessAnimation(::UnityEngine::Animations::AnimationStream stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob::ProcessAnimation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintJob), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData
#include "UnityEngine/Animations/Rigging/ITwoBoneIKConstraintData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_root
::UnityEngine::Transform* UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_root");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_mid
::UnityEngine::Transform* UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_mid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_mid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_tip
::UnityEngine::Transform* UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_tip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_tip");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_target
::UnityEngine::Transform* UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_target");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_hint
::UnityEngine::Transform* UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_hint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_hint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_maintainTargetPositionOffset
bool UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_maintainTargetPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_maintainTargetPositionOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_maintainTargetRotationOffset
bool UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_maintainTargetRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_maintainTargetRotationOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_targetPositionWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_targetPositionWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_targetPositionWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_targetRotationWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_targetRotationWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_targetRotationWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_hintWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_hintWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData::get_hintWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITwoBoneIKConstraintData*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.WeightedTransformArrayBinder
#include "UnityEngine/Animations/Rigging/WeightedTransformArrayBinder.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
// Including type: UnityEngine.Animations.Rigging.WeightedTransformArray
#include "UnityEngine/Animations/Rigging/WeightedTransformArray.hpp"
// Including type: Unity.Collections.NativeArray`1
#include "Unity/Collections/NativeArray_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArrayBinder.BindReadOnlyTransforms
void UnityEngine::Animations::Rigging::WeightedTransformArrayBinder::BindReadOnlyTransforms(::UnityEngine::Animator* animator, ::UnityEngine::Component* component, ::UnityEngine::Animations::Rigging::WeightedTransformArray weightedTransformArray, ByRef<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle>> transforms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArrayBinder::BindReadOnlyTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "WeightedTransformArrayBinder", "BindReadOnlyTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(weightedTransformArray), ::il2cpp_utils::ExtractIndependentType<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle>&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, component, weightedTransformArray, byref(transforms));
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArrayBinder.BindReadWriteTransforms
void UnityEngine::Animations::Rigging::WeightedTransformArrayBinder::BindReadWriteTransforms(::UnityEngine::Animator* animator, ::UnityEngine::Component* component, ::UnityEngine::Animations::Rigging::WeightedTransformArray weightedTransformArray, ByRef<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle>> transforms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArrayBinder::BindReadWriteTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "WeightedTransformArrayBinder", "BindReadWriteTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(weightedTransformArray), ::il2cpp_utils::ExtractIndependentType<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::Rigging::ReadWriteTransformHandle>&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, component, weightedTransformArray, byref(transforms));
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArrayBinder.BindWeights
void UnityEngine::Animations::Rigging::WeightedTransformArrayBinder::BindWeights(::UnityEngine::Animator* animator, ::UnityEngine::Component* component, ::UnityEngine::Animations::Rigging::WeightedTransformArray weightedTransformArray, ::StringW name, ByRef<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle>> weights) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArrayBinder::BindWeights");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "WeightedTransformArrayBinder", "BindWeights", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(weightedTransformArray), ::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractIndependentType<::Unity::Collections::NativeArray_1<::UnityEngine::Animations::PropertyStreamHandle>&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, component, weightedTransformArray, name, byref(weights));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.BlendConstraintData
#include "UnityEngine/Animations/Rigging/BlendConstraintData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_ConstrainedObject
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_ConstrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_ConstrainedObject");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstrainedObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_SourceA
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_SourceA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_SourceA");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SourceA"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_SourceB
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_SourceB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_SourceB");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SourceB"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_BlendPosition
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_BlendPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_BlendPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BlendPosition"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_BlendRotation
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_BlendRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_BlendRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BlendRotation"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_PositionWeight
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_PositionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_PositionWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PositionWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_RotationWeight
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_RotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_RotationWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_MaintainPositionOffsets
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_MaintainPositionOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_MaintainPositionOffsets");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaintainPositionOffsets"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_MaintainRotationOffsets
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_MaintainRotationOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::dyn_m_MaintainRotationOffsets");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaintainRotationOffsets"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.get_constrainedObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::BlendConstraintData::get_constrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::get_constrainedObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::BlendConstraintData), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.set_constrainedObject
void UnityEngine::Animations::Rigging::BlendConstraintData::set_constrainedObject(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::set_constrainedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.get_sourceObjectA
::UnityEngine::Transform* UnityEngine::Animations::Rigging::BlendConstraintData::get_sourceObjectA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::get_sourceObjectA");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::BlendConstraintData), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.set_sourceObjectA
void UnityEngine::Animations::Rigging::BlendConstraintData::set_sourceObjectA(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::set_sourceObjectA");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_sourceObjectA", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.get_sourceObjectB
::UnityEngine::Transform* UnityEngine::Animations::Rigging::BlendConstraintData::get_sourceObjectB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::get_sourceObjectB");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::BlendConstraintData), 8));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.set_sourceObjectB
void UnityEngine::Animations::Rigging::BlendConstraintData::set_sourceObjectB(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::set_sourceObjectB");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_sourceObjectB", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.get_blendPosition
bool UnityEngine::Animations::Rigging::BlendConstraintData::get_blendPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::get_blendPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_blendPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.set_blendPosition
void UnityEngine::Animations::Rigging::BlendConstraintData::set_blendPosition(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::set_blendPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_blendPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.get_blendRotation
bool UnityEngine::Animations::Rigging::BlendConstraintData::get_blendRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::get_blendRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_blendRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.set_blendRotation
void UnityEngine::Animations::Rigging::BlendConstraintData::set_blendRotation(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::set_blendRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_blendRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.get_positionWeight
float UnityEngine::Animations::Rigging::BlendConstraintData::get_positionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::get_positionWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_positionWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.set_positionWeight
void UnityEngine::Animations::Rigging::BlendConstraintData::set_positionWeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::set_positionWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_positionWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.get_rotationWeight
float UnityEngine::Animations::Rigging::BlendConstraintData::get_rotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::get_rotationWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_rotationWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.set_rotationWeight
void UnityEngine::Animations::Rigging::BlendConstraintData::set_rotationWeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::set_rotationWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_rotationWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.get_maintainPositionOffsets
bool UnityEngine::Animations::Rigging::BlendConstraintData::get_maintainPositionOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::get_maintainPositionOffsets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::BlendConstraintData), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.set_maintainPositionOffsets
void UnityEngine::Animations::Rigging::BlendConstraintData::set_maintainPositionOffsets(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::set_maintainPositionOffsets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maintainPositionOffsets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.get_maintainRotationOffsets
bool UnityEngine::Animations::Rigging::BlendConstraintData::get_maintainRotationOffsets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::get_maintainRotationOffsets");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::BlendConstraintData), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.set_maintainRotationOffsets
void UnityEngine::Animations::Rigging::BlendConstraintData::set_maintainRotationOffsets(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::set_maintainRotationOffsets");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maintainRotationOffsets", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.UnityEngine.Animations.Rigging.IBlendConstraintData.get_blendPositionBoolProperty
::StringW UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine_Animations_Rigging_IBlendConstraintData_get_blendPositionBoolProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine.Animations.Rigging.IBlendConstraintData.get_blendPositionBoolProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::BlendConstraintData), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.UnityEngine.Animations.Rigging.IBlendConstraintData.get_blendRotationBoolProperty
::StringW UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine_Animations_Rigging_IBlendConstraintData_get_blendRotationBoolProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine.Animations.Rigging.IBlendConstraintData.get_blendRotationBoolProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::BlendConstraintData), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.UnityEngine.Animations.Rigging.IBlendConstraintData.get_positionWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine_Animations_Rigging_IBlendConstraintData_get_positionWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine.Animations.Rigging.IBlendConstraintData.get_positionWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::BlendConstraintData), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.UnityEngine.Animations.Rigging.IBlendConstraintData.get_rotationWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine_Animations_Rigging_IBlendConstraintData_get_rotationWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine.Animations.Rigging.IBlendConstraintData.get_rotationWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::BlendConstraintData), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
bool UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::BlendConstraintData), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.BlendConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
void UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::BlendConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::BlendConstraintData), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.BlendConstraint
#include "UnityEngine/Animations/Rigging/BlendConstraint.hpp"
// Including type: UnityEngine.Animations.Rigging.BlendConstraintJobBinder`1
#include "UnityEngine/Animations/Rigging/BlendConstraintJobBinder_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.ChainIKConstraintData
#include "UnityEngine/Animations/Rigging/ChainIKConstraintData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_Root
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_Root");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Root"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_Tip
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_Tip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_Tip");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Tip"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_Target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_Target");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_ChainRotationWeight
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_ChainRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_ChainRotationWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ChainRotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TipRotationWeight
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_TipRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_TipRotationWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TipRotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_MaxIterations
[[deprecated("Use field access instead!")]] int& UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_MaxIterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_MaxIterations");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaxIterations"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_Tolerance
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_Tolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_Tolerance");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Tolerance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_MaintainTargetPositionOffset
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_MaintainTargetPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_MaintainTargetPositionOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaintainTargetPositionOffset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_MaintainTargetRotationOffset
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_MaintainTargetRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::dyn_m_MaintainTargetRotationOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaintainTargetRotationOffset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.get_root
::UnityEngine::Transform* UnityEngine::Animations::Rigging::ChainIKConstraintData::get_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::get_root");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::ChainIKConstraintData), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.set_root
void UnityEngine::Animations::Rigging::ChainIKConstraintData::set_root(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::set_root");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_root", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.get_tip
::UnityEngine::Transform* UnityEngine::Animations::Rigging::ChainIKConstraintData::get_tip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::get_tip");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::ChainIKConstraintData), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.set_tip
void UnityEngine::Animations::Rigging::ChainIKConstraintData::set_tip(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::set_tip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_tip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.get_target
::UnityEngine::Transform* UnityEngine::Animations::Rigging::ChainIKConstraintData::get_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::get_target");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::ChainIKConstraintData), 8));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.set_target
void UnityEngine::Animations::Rigging::ChainIKConstraintData::set_target(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::set_target");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_target", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.get_chainRotationWeight
float UnityEngine::Animations::Rigging::ChainIKConstraintData::get_chainRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::get_chainRotationWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_chainRotationWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.set_chainRotationWeight
void UnityEngine::Animations::Rigging::ChainIKConstraintData::set_chainRotationWeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::set_chainRotationWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_chainRotationWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.get_tipRotationWeight
float UnityEngine::Animations::Rigging::ChainIKConstraintData::get_tipRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::get_tipRotationWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_tipRotationWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.set_tipRotationWeight
void UnityEngine::Animations::Rigging::ChainIKConstraintData::set_tipRotationWeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::set_tipRotationWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_tipRotationWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.get_maxIterations
int UnityEngine::Animations::Rigging::ChainIKConstraintData::get_maxIterations() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::get_maxIterations");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::ChainIKConstraintData), 9));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.set_maxIterations
void UnityEngine::Animations::Rigging::ChainIKConstraintData::set_maxIterations(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::set_maxIterations");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maxIterations", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.get_tolerance
float UnityEngine::Animations::Rigging::ChainIKConstraintData::get_tolerance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::get_tolerance");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::ChainIKConstraintData), 10));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.set_tolerance
void UnityEngine::Animations::Rigging::ChainIKConstraintData::set_tolerance(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::set_tolerance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_tolerance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.get_maintainTargetPositionOffset
bool UnityEngine::Animations::Rigging::ChainIKConstraintData::get_maintainTargetPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::get_maintainTargetPositionOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::ChainIKConstraintData), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.set_maintainTargetPositionOffset
void UnityEngine::Animations::Rigging::ChainIKConstraintData::set_maintainTargetPositionOffset(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::set_maintainTargetPositionOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maintainTargetPositionOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.get_maintainTargetRotationOffset
bool UnityEngine::Animations::Rigging::ChainIKConstraintData::get_maintainTargetRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::get_maintainTargetRotationOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::ChainIKConstraintData), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.set_maintainTargetRotationOffset
void UnityEngine::Animations::Rigging::ChainIKConstraintData::set_maintainTargetRotationOffset(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::set_maintainTargetRotationOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maintainTargetRotationOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.UnityEngine.Animations.Rigging.IChainIKConstraintData.get_chainRotationWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::ChainIKConstraintData::UnityEngine_Animations_Rigging_IChainIKConstraintData_get_chainRotationWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::UnityEngine.Animations.Rigging.IChainIKConstraintData.get_chainRotationWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::ChainIKConstraintData), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.UnityEngine.Animations.Rigging.IChainIKConstraintData.get_tipRotationWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::ChainIKConstraintData::UnityEngine_Animations_Rigging_IChainIKConstraintData_get_tipRotationWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::UnityEngine.Animations.Rigging.IChainIKConstraintData.get_tipRotationWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::ChainIKConstraintData), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
bool UnityEngine::Animations::Rigging::ChainIKConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::ChainIKConstraintData), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ChainIKConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
void UnityEngine::Animations::Rigging::ChainIKConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ChainIKConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::ChainIKConstraintData), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.ChainIKConstraint
#include "UnityEngine/Animations/Rigging/ChainIKConstraint.hpp"
// Including type: UnityEngine.Animations.Rigging.ChainIKConstraintJobBinder`1
#include "UnityEngine/Animations/Rigging/ChainIKConstraintJobBinder_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.DampedTransformData
#include "UnityEngine/Animations/Rigging/DampedTransformData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_ConstrainedObject
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::DampedTransformData::dyn_m_ConstrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::dyn_m_ConstrainedObject");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstrainedObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_Source
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::DampedTransformData::dyn_m_Source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::dyn_m_Source");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Source"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_DampPosition
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::DampedTransformData::dyn_m_DampPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::dyn_m_DampPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DampPosition"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_DampRotation
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::DampedTransformData::dyn_m_DampRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::dyn_m_DampRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DampRotation"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_MaintainAim
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::DampedTransformData::dyn_m_MaintainAim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::dyn_m_MaintainAim");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaintainAim"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformData.get_constrainedObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::DampedTransformData::get_constrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::get_constrainedObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::DampedTransformData), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformData.set_constrainedObject
void UnityEngine::Animations::Rigging::DampedTransformData::set_constrainedObject(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::set_constrainedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformData.get_sourceObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::DampedTransformData::get_sourceObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::get_sourceObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::DampedTransformData), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformData.set_sourceObject
void UnityEngine::Animations::Rigging::DampedTransformData::set_sourceObject(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::set_sourceObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_sourceObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformData.get_dampPosition
float UnityEngine::Animations::Rigging::DampedTransformData::get_dampPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::get_dampPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_dampPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformData.set_dampPosition
void UnityEngine::Animations::Rigging::DampedTransformData::set_dampPosition(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::set_dampPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_dampPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformData.get_dampRotation
float UnityEngine::Animations::Rigging::DampedTransformData::get_dampRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::get_dampRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_dampRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformData.set_dampRotation
void UnityEngine::Animations::Rigging::DampedTransformData::set_dampRotation(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::set_dampRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_dampRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformData.get_maintainAim
bool UnityEngine::Animations::Rigging::DampedTransformData::get_maintainAim() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::get_maintainAim");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::DampedTransformData), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformData.set_maintainAim
void UnityEngine::Animations::Rigging::DampedTransformData::set_maintainAim(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::set_maintainAim");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maintainAim", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformData.UnityEngine.Animations.Rigging.IDampedTransformData.get_dampPositionFloatProperty
::StringW UnityEngine::Animations::Rigging::DampedTransformData::UnityEngine_Animations_Rigging_IDampedTransformData_get_dampPositionFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::UnityEngine.Animations.Rigging.IDampedTransformData.get_dampPositionFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::DampedTransformData), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformData.UnityEngine.Animations.Rigging.IDampedTransformData.get_dampRotationFloatProperty
::StringW UnityEngine::Animations::Rigging::DampedTransformData::UnityEngine_Animations_Rigging_IDampedTransformData_get_dampRotationFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::UnityEngine.Animations.Rigging.IDampedTransformData.get_dampRotationFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::DampedTransformData), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformData.UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
bool UnityEngine::Animations::Rigging::DampedTransformData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::UnityEngine.Animations.Rigging.IAnimationJobData.IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::DampedTransformData), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.DampedTransformData.UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
void UnityEngine::Animations::Rigging::DampedTransformData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::DampedTransformData::UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::DampedTransformData), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.DampedTransform
#include "UnityEngine/Animations/Rigging/DampedTransform.hpp"
// Including type: UnityEngine.Animations.Rigging.DampedTransformJobBinder`1
#include "UnityEngine/Animations/Rigging/DampedTransformJobBinder_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.MultiAimConstraintData
#include "UnityEngine/Animations/Rigging/MultiAimConstraintData.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_ConstrainedObject
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_ConstrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_ConstrainedObject");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstrainedObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.WeightedTransformArray m_SourceObjects
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::WeightedTransformArray& UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_SourceObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_SourceObjects");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SourceObjects"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::WeightedTransformArray*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_Offset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_MinLimit
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_MinLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_MinLimit");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MinLimit"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_MaxLimit
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_MaxLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_MaxLimit");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaxLimit"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis m_AimAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis& UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_AimAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_AimAxis");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AimAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_MaintainOffset
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_MaintainOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_MaintainOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaintainOffset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.Vector3Bool m_ConstrainedAxes
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::Vector3Bool& UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_ConstrainedAxes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::dyn_m_ConstrainedAxes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstrainedAxes"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::Vector3Bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.get_constrainedObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::MultiAimConstraintData::get_constrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::get_constrainedObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.set_constrainedObject
void UnityEngine::Animations::Rigging::MultiAimConstraintData::set_constrainedObject(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::set_constrainedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.get_sourceObjects
::UnityEngine::Animations::Rigging::WeightedTransformArray UnityEngine::Animations::Rigging::MultiAimConstraintData::get_sourceObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::get_sourceObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::WeightedTransformArray, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.set_sourceObjects
void UnityEngine::Animations::Rigging::MultiAimConstraintData::set_sourceObjects(::UnityEngine::Animations::Rigging::WeightedTransformArray value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::set_sourceObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_sourceObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.get_maintainOffset
bool UnityEngine::Animations::Rigging::MultiAimConstraintData::get_maintainOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::get_maintainOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.set_maintainOffset
void UnityEngine::Animations::Rigging::MultiAimConstraintData::set_maintainOffset(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::set_maintainOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maintainOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.get_offset
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::MultiAimConstraintData::get_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::get_offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.set_offset
void UnityEngine::Animations::Rigging::MultiAimConstraintData::set_offset(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::set_offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.get_limits
::UnityEngine::Vector2 UnityEngine::Animations::Rigging::MultiAimConstraintData::get_limits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::get_limits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_limits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector2, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.set_limits
void UnityEngine::Animations::Rigging::MultiAimConstraintData::set_limits(::UnityEngine::Vector2 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::set_limits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_limits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.get_aimAxis
::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis UnityEngine::Animations::Rigging::MultiAimConstraintData::get_aimAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::get_aimAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_aimAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.set_aimAxis
void UnityEngine::Animations::Rigging::MultiAimConstraintData::set_aimAxis(::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::set_aimAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_aimAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.get_constrainedXAxis
bool UnityEngine::Animations::Rigging::MultiAimConstraintData::get_constrainedXAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::get_constrainedXAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.set_constrainedXAxis
void UnityEngine::Animations::Rigging::MultiAimConstraintData::set_constrainedXAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::set_constrainedXAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedXAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.get_constrainedYAxis
bool UnityEngine::Animations::Rigging::MultiAimConstraintData::get_constrainedYAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::get_constrainedYAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.set_constrainedYAxis
void UnityEngine::Animations::Rigging::MultiAimConstraintData::set_constrainedYAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::set_constrainedYAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedYAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.get_constrainedZAxis
bool UnityEngine::Animations::Rigging::MultiAimConstraintData::get_constrainedZAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::get_constrainedZAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.set_constrainedZAxis
void UnityEngine::Animations::Rigging::MultiAimConstraintData::set_constrainedZAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::set_constrainedZAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedZAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_aimAxis
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine_Animations_Rigging_IMultiAimConstraintData_get_aimAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_aimAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 9));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_offsetVector3Property
::StringW UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine_Animations_Rigging_IMultiAimConstraintData_get_offsetVector3Property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_offsetVector3Property");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_minLimitFloatProperty
::StringW UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine_Animations_Rigging_IMultiAimConstraintData_get_minLimitFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_minLimitFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_maxLimitFloatProperty
::StringW UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine_Animations_Rigging_IMultiAimConstraintData_get_maxLimitFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_maxLimitFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 15));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_sourceObjectsProperty
::StringW UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine_Animations_Rigging_IMultiAimConstraintData_get_sourceObjectsProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine.Animations.Rigging.IMultiAimConstraintData.get_sourceObjectsProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
bool UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
void UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiAimConstraintData), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiAimConstraintData.Convert
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::MultiAimConstraintData::Convert(::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::Convert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "MultiAimConstraintData", "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, axis);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis
#include "UnityEngine/Animations/Rigging/MultiAimConstraintData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis X
::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis>("UnityEngine.Animations.Rigging", "MultiAimConstraintData/Axis", "X"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis X
void UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_set_X(::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "MultiAimConstraintData/Axis", "X", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis X_NEG
::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_get_X_NEG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_get_X_NEG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis>("UnityEngine.Animations.Rigging", "MultiAimConstraintData/Axis", "X_NEG"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis X_NEG
void UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_set_X_NEG(::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_set_X_NEG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "MultiAimConstraintData/Axis", "X_NEG", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis Y
::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis>("UnityEngine.Animations.Rigging", "MultiAimConstraintData/Axis", "Y"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis Y
void UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_set_Y(::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "MultiAimConstraintData/Axis", "Y", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis Y_NEG
::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_get_Y_NEG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_get_Y_NEG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis>("UnityEngine.Animations.Rigging", "MultiAimConstraintData/Axis", "Y_NEG"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis Y_NEG
void UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_set_Y_NEG(::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_set_Y_NEG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "MultiAimConstraintData/Axis", "Y_NEG", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis Z
::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_get_Z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_get_Z");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis>("UnityEngine.Animations.Rigging", "MultiAimConstraintData/Axis", "Z"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis Z
void UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_set_Z(::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_set_Z");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "MultiAimConstraintData/Axis", "Z", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis Z_NEG
::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_get_Z_NEG() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_get_Z_NEG");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis>("UnityEngine.Animations.Rigging", "MultiAimConstraintData/Axis", "Z_NEG"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.MultiAimConstraintData/Axis Z_NEG
void UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_set_Z_NEG(::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::_set_Z_NEG");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "MultiAimConstraintData/Axis", "Z_NEG", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiAimConstraintData::Axis::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.MultiAimConstraint
#include "UnityEngine/Animations/Rigging/MultiAimConstraint.hpp"
// Including type: UnityEngine.Animations.Rigging.MultiAimConstraintJobBinder`1
#include "UnityEngine/Animations/Rigging/MultiAimConstraintJobBinder_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.MultiParentConstraintData
#include "UnityEngine/Animations/Rigging/MultiParentConstraintData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_ConstrainedObject
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::MultiParentConstraintData::dyn_m_ConstrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::dyn_m_ConstrainedObject");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstrainedObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.WeightedTransformArray m_SourceObjects
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::WeightedTransformArray& UnityEngine::Animations::Rigging::MultiParentConstraintData::dyn_m_SourceObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::dyn_m_SourceObjects");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SourceObjects"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::WeightedTransformArray*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.Vector3Bool m_ConstrainedPositionAxes
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::Vector3Bool& UnityEngine::Animations::Rigging::MultiParentConstraintData::dyn_m_ConstrainedPositionAxes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::dyn_m_ConstrainedPositionAxes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstrainedPositionAxes"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::Vector3Bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.Vector3Bool m_ConstrainedRotationAxes
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::Vector3Bool& UnityEngine::Animations::Rigging::MultiParentConstraintData::dyn_m_ConstrainedRotationAxes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::dyn_m_ConstrainedRotationAxes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstrainedRotationAxes"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::Vector3Bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_MaintainPositionOffset
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::MultiParentConstraintData::dyn_m_MaintainPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::dyn_m_MaintainPositionOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaintainPositionOffset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_MaintainRotationOffset
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::MultiParentConstraintData::dyn_m_MaintainRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::dyn_m_MaintainRotationOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaintainRotationOffset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.get_constrainedObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::MultiParentConstraintData::get_constrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::get_constrainedObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintData), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.set_constrainedObject
void UnityEngine::Animations::Rigging::MultiParentConstraintData::set_constrainedObject(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::set_constrainedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.get_sourceObjects
::UnityEngine::Animations::Rigging::WeightedTransformArray UnityEngine::Animations::Rigging::MultiParentConstraintData::get_sourceObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::get_sourceObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintData), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::WeightedTransformArray, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.set_sourceObjects
void UnityEngine::Animations::Rigging::MultiParentConstraintData::set_sourceObjects(::UnityEngine::Animations::Rigging::WeightedTransformArray value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::set_sourceObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_sourceObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.get_maintainPositionOffset
bool UnityEngine::Animations::Rigging::MultiParentConstraintData::get_maintainPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::get_maintainPositionOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintData), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.set_maintainPositionOffset
void UnityEngine::Animations::Rigging::MultiParentConstraintData::set_maintainPositionOffset(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::set_maintainPositionOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maintainPositionOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.get_maintainRotationOffset
bool UnityEngine::Animations::Rigging::MultiParentConstraintData::get_maintainRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::get_maintainRotationOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintData), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.set_maintainRotationOffset
void UnityEngine::Animations::Rigging::MultiParentConstraintData::set_maintainRotationOffset(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::set_maintainRotationOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maintainRotationOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.get_constrainedPositionXAxis
bool UnityEngine::Animations::Rigging::MultiParentConstraintData::get_constrainedPositionXAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::get_constrainedPositionXAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintData), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.set_constrainedPositionXAxis
void UnityEngine::Animations::Rigging::MultiParentConstraintData::set_constrainedPositionXAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::set_constrainedPositionXAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedPositionXAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.get_constrainedPositionYAxis
bool UnityEngine::Animations::Rigging::MultiParentConstraintData::get_constrainedPositionYAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::get_constrainedPositionYAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintData), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.set_constrainedPositionYAxis
void UnityEngine::Animations::Rigging::MultiParentConstraintData::set_constrainedPositionYAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::set_constrainedPositionYAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedPositionYAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.get_constrainedPositionZAxis
bool UnityEngine::Animations::Rigging::MultiParentConstraintData::get_constrainedPositionZAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::get_constrainedPositionZAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintData), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.set_constrainedPositionZAxis
void UnityEngine::Animations::Rigging::MultiParentConstraintData::set_constrainedPositionZAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::set_constrainedPositionZAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedPositionZAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.get_constrainedRotationXAxis
bool UnityEngine::Animations::Rigging::MultiParentConstraintData::get_constrainedRotationXAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::get_constrainedRotationXAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintData), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.set_constrainedRotationXAxis
void UnityEngine::Animations::Rigging::MultiParentConstraintData::set_constrainedRotationXAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::set_constrainedRotationXAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedRotationXAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.get_constrainedRotationYAxis
bool UnityEngine::Animations::Rigging::MultiParentConstraintData::get_constrainedRotationYAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::get_constrainedRotationYAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintData), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.set_constrainedRotationYAxis
void UnityEngine::Animations::Rigging::MultiParentConstraintData::set_constrainedRotationYAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::set_constrainedRotationYAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedRotationYAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.get_constrainedRotationZAxis
bool UnityEngine::Animations::Rigging::MultiParentConstraintData::get_constrainedRotationZAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::get_constrainedRotationZAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintData), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.set_constrainedRotationZAxis
void UnityEngine::Animations::Rigging::MultiParentConstraintData::set_constrainedRotationZAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::set_constrainedRotationZAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedRotationZAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.UnityEngine.Animations.Rigging.IMultiParentConstraintData.get_sourceObjectsProperty
::StringW UnityEngine::Animations::Rigging::MultiParentConstraintData::UnityEngine_Animations_Rigging_IMultiParentConstraintData_get_sourceObjectsProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::UnityEngine.Animations.Rigging.IMultiParentConstraintData.get_sourceObjectsProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintData), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
bool UnityEngine::Animations::Rigging::MultiParentConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintData), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiParentConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
void UnityEngine::Animations::Rigging::MultiParentConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiParentConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiParentConstraintData), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.MultiParentConstraint
#include "UnityEngine/Animations/Rigging/MultiParentConstraint.hpp"
// Including type: UnityEngine.Animations.Rigging.MultiParentConstraintJobBinder`1
#include "UnityEngine/Animations/Rigging/MultiParentConstraintJobBinder_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.MultiPositionConstraintData
#include "UnityEngine/Animations/Rigging/MultiPositionConstraintData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_ConstrainedObject
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::MultiPositionConstraintData::dyn_m_ConstrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::dyn_m_ConstrainedObject");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstrainedObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.WeightedTransformArray m_SourceObjects
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::WeightedTransformArray& UnityEngine::Animations::Rigging::MultiPositionConstraintData::dyn_m_SourceObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::dyn_m_SourceObjects");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SourceObjects"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::WeightedTransformArray*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Animations::Rigging::MultiPositionConstraintData::dyn_m_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::dyn_m_Offset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.Vector3Bool m_ConstrainedAxes
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::Vector3Bool& UnityEngine::Animations::Rigging::MultiPositionConstraintData::dyn_m_ConstrainedAxes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::dyn_m_ConstrainedAxes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstrainedAxes"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::Vector3Bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_MaintainOffset
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::MultiPositionConstraintData::dyn_m_MaintainOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::dyn_m_MaintainOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaintainOffset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.get_constrainedObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::MultiPositionConstraintData::get_constrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::get_constrainedObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiPositionConstraintData), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.set_constrainedObject
void UnityEngine::Animations::Rigging::MultiPositionConstraintData::set_constrainedObject(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::set_constrainedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.get_sourceObjects
::UnityEngine::Animations::Rigging::WeightedTransformArray UnityEngine::Animations::Rigging::MultiPositionConstraintData::get_sourceObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::get_sourceObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiPositionConstraintData), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::WeightedTransformArray, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.set_sourceObjects
void UnityEngine::Animations::Rigging::MultiPositionConstraintData::set_sourceObjects(::UnityEngine::Animations::Rigging::WeightedTransformArray value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::set_sourceObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_sourceObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.get_maintainOffset
bool UnityEngine::Animations::Rigging::MultiPositionConstraintData::get_maintainOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::get_maintainOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiPositionConstraintData), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.set_maintainOffset
void UnityEngine::Animations::Rigging::MultiPositionConstraintData::set_maintainOffset(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::set_maintainOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maintainOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.get_offset
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::MultiPositionConstraintData::get_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::get_offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.set_offset
void UnityEngine::Animations::Rigging::MultiPositionConstraintData::set_offset(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::set_offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.get_constrainedXAxis
bool UnityEngine::Animations::Rigging::MultiPositionConstraintData::get_constrainedXAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::get_constrainedXAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiPositionConstraintData), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.set_constrainedXAxis
void UnityEngine::Animations::Rigging::MultiPositionConstraintData::set_constrainedXAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::set_constrainedXAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedXAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.get_constrainedYAxis
bool UnityEngine::Animations::Rigging::MultiPositionConstraintData::get_constrainedYAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::get_constrainedYAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiPositionConstraintData), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.set_constrainedYAxis
void UnityEngine::Animations::Rigging::MultiPositionConstraintData::set_constrainedYAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::set_constrainedYAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedYAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.get_constrainedZAxis
bool UnityEngine::Animations::Rigging::MultiPositionConstraintData::get_constrainedZAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::get_constrainedZAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiPositionConstraintData), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.set_constrainedZAxis
void UnityEngine::Animations::Rigging::MultiPositionConstraintData::set_constrainedZAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::set_constrainedZAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedZAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.UnityEngine.Animations.Rigging.IMultiPositionConstraintData.get_offsetVector3Property
::StringW UnityEngine::Animations::Rigging::MultiPositionConstraintData::UnityEngine_Animations_Rigging_IMultiPositionConstraintData_get_offsetVector3Property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::UnityEngine.Animations.Rigging.IMultiPositionConstraintData.get_offsetVector3Property");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiPositionConstraintData), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.UnityEngine.Animations.Rigging.IMultiPositionConstraintData.get_sourceObjectsProperty
::StringW UnityEngine::Animations::Rigging::MultiPositionConstraintData::UnityEngine_Animations_Rigging_IMultiPositionConstraintData_get_sourceObjectsProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::UnityEngine.Animations.Rigging.IMultiPositionConstraintData.get_sourceObjectsProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiPositionConstraintData), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
bool UnityEngine::Animations::Rigging::MultiPositionConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiPositionConstraintData), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiPositionConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
void UnityEngine::Animations::Rigging::MultiPositionConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiPositionConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiPositionConstraintData), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.MultiPositionConstraint
#include "UnityEngine/Animations/Rigging/MultiPositionConstraint.hpp"
// Including type: UnityEngine.Animations.Rigging.MultiPositionConstraintJobBinder`1
#include "UnityEngine/Animations/Rigging/MultiPositionConstraintJobBinder_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.MultiReferentialConstraintData
#include "UnityEngine/Animations/Rigging/MultiReferentialConstraintData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Driver
[[deprecated("Use field access instead!")]] int& UnityEngine::Animations::Rigging::MultiReferentialConstraintData::dyn_m_Driver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintData::dyn_m_Driver");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Driver"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Transform> m_SourceObjects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Transform*>*& UnityEngine::Animations::Rigging::MultiReferentialConstraintData::dyn_m_SourceObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintData::dyn_m_SourceObjects");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SourceObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Transform*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiReferentialConstraintData.get_driver
int UnityEngine::Animations::Rigging::MultiReferentialConstraintData::get_driver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintData::get_driver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_driver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiReferentialConstraintData.set_driver
void UnityEngine::Animations::Rigging::MultiReferentialConstraintData::set_driver(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintData::set_driver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_driver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiReferentialConstraintData.get_sourceObjects
::System::Collections::Generic::List_1<::UnityEngine::Transform*>* UnityEngine::Animations::Rigging::MultiReferentialConstraintData::get_sourceObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintData::get_sourceObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_sourceObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Transform*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiReferentialConstraintData.set_sourceObjects
void UnityEngine::Animations::Rigging::MultiReferentialConstraintData::set_sourceObjects(::System::Collections::Generic::List_1<::UnityEngine::Transform*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintData::set_sourceObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_sourceObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiReferentialConstraintData.UnityEngine.Animations.Rigging.IMultiReferentialConstraintData.get_sourceObjects
::ArrayW<::UnityEngine::Transform*> UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine_Animations_Rigging_IMultiReferentialConstraintData_get_sourceObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine.Animations.Rigging.IMultiReferentialConstraintData.get_sourceObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiReferentialConstraintData), 8));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Transform*>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiReferentialConstraintData.UnityEngine.Animations.Rigging.IMultiReferentialConstraintData.get_driverValue
int UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine_Animations_Rigging_IMultiReferentialConstraintData_get_driverValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine.Animations.Rigging.IMultiReferentialConstraintData.get_driverValue");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiReferentialConstraintData), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiReferentialConstraintData.UnityEngine.Animations.Rigging.IMultiReferentialConstraintData.get_driverIntProperty
::StringW UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine_Animations_Rigging_IMultiReferentialConstraintData_get_driverIntProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine.Animations.Rigging.IMultiReferentialConstraintData.get_driverIntProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiReferentialConstraintData), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiReferentialConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
bool UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiReferentialConstraintData), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiReferentialConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
void UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiReferentialConstraintData), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiReferentialConstraintData.UpdateDriver
void UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UpdateDriver() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraintData::UpdateDriver");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "UpdateDriver", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.MultiReferentialConstraint
#include "UnityEngine/Animations/Rigging/MultiReferentialConstraint.hpp"
// Including type: UnityEngine.Animations.Rigging.MultiReferentialConstraintJobBinder`1
#include "UnityEngine/Animations/Rigging/MultiReferentialConstraintJobBinder_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.MultiReferentialConstraint.OnValidate
void UnityEngine::Animations::Rigging::MultiReferentialConstraint::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiReferentialConstraint::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.MultiRotationConstraintData
#include "UnityEngine/Animations/Rigging/MultiRotationConstraintData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_ConstrainedObject
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::MultiRotationConstraintData::dyn_m_ConstrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::dyn_m_ConstrainedObject");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstrainedObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.WeightedTransformArray m_SourceObjects
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::WeightedTransformArray& UnityEngine::Animations::Rigging::MultiRotationConstraintData::dyn_m_SourceObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::dyn_m_SourceObjects");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SourceObjects"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::WeightedTransformArray*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_Offset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Animations::Rigging::MultiRotationConstraintData::dyn_m_Offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::dyn_m_Offset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Offset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.Vector3Bool m_ConstrainedAxes
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::Vector3Bool& UnityEngine::Animations::Rigging::MultiRotationConstraintData::dyn_m_ConstrainedAxes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::dyn_m_ConstrainedAxes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstrainedAxes"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::Vector3Bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_MaintainOffset
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::MultiRotationConstraintData::dyn_m_MaintainOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::dyn_m_MaintainOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaintainOffset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.get_constrainedObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::MultiRotationConstraintData::get_constrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::get_constrainedObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiRotationConstraintData), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.set_constrainedObject
void UnityEngine::Animations::Rigging::MultiRotationConstraintData::set_constrainedObject(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::set_constrainedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.get_sourceObjects
::UnityEngine::Animations::Rigging::WeightedTransformArray UnityEngine::Animations::Rigging::MultiRotationConstraintData::get_sourceObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::get_sourceObjects");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiRotationConstraintData), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::WeightedTransformArray, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.set_sourceObjects
void UnityEngine::Animations::Rigging::MultiRotationConstraintData::set_sourceObjects(::UnityEngine::Animations::Rigging::WeightedTransformArray value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::set_sourceObjects");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_sourceObjects", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.get_maintainOffset
bool UnityEngine::Animations::Rigging::MultiRotationConstraintData::get_maintainOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::get_maintainOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiRotationConstraintData), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.set_maintainOffset
void UnityEngine::Animations::Rigging::MultiRotationConstraintData::set_maintainOffset(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::set_maintainOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maintainOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.get_offset
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::MultiRotationConstraintData::get_offset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::get_offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.set_offset
void UnityEngine::Animations::Rigging::MultiRotationConstraintData::set_offset(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::set_offset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_offset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.get_constrainedXAxis
bool UnityEngine::Animations::Rigging::MultiRotationConstraintData::get_constrainedXAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::get_constrainedXAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiRotationConstraintData), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.set_constrainedXAxis
void UnityEngine::Animations::Rigging::MultiRotationConstraintData::set_constrainedXAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::set_constrainedXAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedXAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.get_constrainedYAxis
bool UnityEngine::Animations::Rigging::MultiRotationConstraintData::get_constrainedYAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::get_constrainedYAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiRotationConstraintData), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.set_constrainedYAxis
void UnityEngine::Animations::Rigging::MultiRotationConstraintData::set_constrainedYAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::set_constrainedYAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedYAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.get_constrainedZAxis
bool UnityEngine::Animations::Rigging::MultiRotationConstraintData::get_constrainedZAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::get_constrainedZAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiRotationConstraintData), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.set_constrainedZAxis
void UnityEngine::Animations::Rigging::MultiRotationConstraintData::set_constrainedZAxis(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::set_constrainedZAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedZAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.UnityEngine.Animations.Rigging.IMultiRotationConstraintData.get_offsetVector3Property
::StringW UnityEngine::Animations::Rigging::MultiRotationConstraintData::UnityEngine_Animations_Rigging_IMultiRotationConstraintData_get_offsetVector3Property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::UnityEngine.Animations.Rigging.IMultiRotationConstraintData.get_offsetVector3Property");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiRotationConstraintData), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.UnityEngine.Animations.Rigging.IMultiRotationConstraintData.get_sourceObjectsProperty
::StringW UnityEngine::Animations::Rigging::MultiRotationConstraintData::UnityEngine_Animations_Rigging_IMultiRotationConstraintData_get_sourceObjectsProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::UnityEngine.Animations.Rigging.IMultiRotationConstraintData.get_sourceObjectsProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiRotationConstraintData), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
bool UnityEngine::Animations::Rigging::MultiRotationConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiRotationConstraintData), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.MultiRotationConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
void UnityEngine::Animations::Rigging::MultiRotationConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::MultiRotationConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::MultiRotationConstraintData), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.MultiRotationConstraint
#include "UnityEngine/Animations/Rigging/MultiRotationConstraint.hpp"
// Including type: UnityEngine.Animations.Rigging.MultiRotationConstraintJobBinder`1
#include "UnityEngine/Animations/Rigging/MultiRotationConstraintJobBinder_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.OverrideTransformData
#include "UnityEngine/Animations/Rigging/OverrideTransformData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_ConstrainedObject
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::OverrideTransformData::dyn_m_ConstrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::dyn_m_ConstrainedObject");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ConstrainedObject"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_OverrideSource
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::OverrideTransformData::dyn_m_OverrideSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::dyn_m_OverrideSource");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OverrideSource"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_OverridePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Animations::Rigging::OverrideTransformData::dyn_m_OverridePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::dyn_m_OverridePosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OverridePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 m_OverrideRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Animations::Rigging::OverrideTransformData::dyn_m_OverrideRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::dyn_m_OverrideRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OverrideRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_PositionWeight
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::OverrideTransformData::dyn_m_PositionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::dyn_m_PositionWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PositionWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_RotationWeight
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::OverrideTransformData::dyn_m_RotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::dyn_m_RotationWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.OverrideTransformData/Space m_Space
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::OverrideTransformData::Space& UnityEngine::Animations::Rigging::OverrideTransformData::dyn_m_Space() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::dyn_m_Space");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Space"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::OverrideTransformData::Space*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.get_constrainedObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::OverrideTransformData::get_constrainedObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::get_constrainedObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::OverrideTransformData), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.set_constrainedObject
void UnityEngine::Animations::Rigging::OverrideTransformData::set_constrainedObject(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::set_constrainedObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_constrainedObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.get_sourceObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::OverrideTransformData::get_sourceObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::get_sourceObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::OverrideTransformData), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.set_sourceObject
void UnityEngine::Animations::Rigging::OverrideTransformData::set_sourceObject(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::set_sourceObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_sourceObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.get_space
::UnityEngine::Animations::Rigging::OverrideTransformData::Space UnityEngine::Animations::Rigging::OverrideTransformData::get_space() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::get_space");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_space", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::OverrideTransformData::Space, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.set_space
void UnityEngine::Animations::Rigging::OverrideTransformData::set_space(::UnityEngine::Animations::Rigging::OverrideTransformData::Space value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::set_space");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_space", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.get_position
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::OverrideTransformData::get_position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::get_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.set_position
void UnityEngine::Animations::Rigging::OverrideTransformData::set_position(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::set_position");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_position", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.get_rotation
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::OverrideTransformData::get_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::get_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.set_rotation
void UnityEngine::Animations::Rigging::OverrideTransformData::set_rotation(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::set_rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.get_positionWeight
float UnityEngine::Animations::Rigging::OverrideTransformData::get_positionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::get_positionWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_positionWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.set_positionWeight
void UnityEngine::Animations::Rigging::OverrideTransformData::set_positionWeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::set_positionWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_positionWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.get_rotationWeight
float UnityEngine::Animations::Rigging::OverrideTransformData::get_rotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::get_rotationWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_rotationWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.set_rotationWeight
void UnityEngine::Animations::Rigging::OverrideTransformData::set_rotationWeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::set_rotationWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_rotationWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.UnityEngine.Animations.Rigging.IOverrideTransformData.get_space
int UnityEngine::Animations::Rigging::OverrideTransformData::UnityEngine_Animations_Rigging_IOverrideTransformData_get_space() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::UnityEngine.Animations.Rigging.IOverrideTransformData.get_space");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::OverrideTransformData), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.UnityEngine.Animations.Rigging.IOverrideTransformData.get_positionWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::OverrideTransformData::UnityEngine_Animations_Rigging_IOverrideTransformData_get_positionWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::UnityEngine.Animations.Rigging.IOverrideTransformData.get_positionWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::OverrideTransformData), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.UnityEngine.Animations.Rigging.IOverrideTransformData.get_rotationWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::OverrideTransformData::UnityEngine_Animations_Rigging_IOverrideTransformData_get_rotationWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::UnityEngine.Animations.Rigging.IOverrideTransformData.get_rotationWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::OverrideTransformData), 10));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.UnityEngine.Animations.Rigging.IOverrideTransformData.get_positionVector3Property
::StringW UnityEngine::Animations::Rigging::OverrideTransformData::UnityEngine_Animations_Rigging_IOverrideTransformData_get_positionVector3Property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::UnityEngine.Animations.Rigging.IOverrideTransformData.get_positionVector3Property");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::OverrideTransformData), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.UnityEngine.Animations.Rigging.IOverrideTransformData.get_rotationVector3Property
::StringW UnityEngine::Animations::Rigging::OverrideTransformData::UnityEngine_Animations_Rigging_IOverrideTransformData_get_rotationVector3Property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::UnityEngine.Animations.Rigging.IOverrideTransformData.get_rotationVector3Property");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::OverrideTransformData), 12));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
bool UnityEngine::Animations::Rigging::OverrideTransformData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::UnityEngine.Animations.Rigging.IAnimationJobData.IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::OverrideTransformData), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.OverrideTransformData.UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
void UnityEngine::Animations::Rigging::OverrideTransformData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::OverrideTransformData), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.OverrideTransformData/Space
#include "UnityEngine/Animations/Rigging/OverrideTransformData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.OverrideTransformData/Space World
::UnityEngine::Animations::Rigging::OverrideTransformData::Space UnityEngine::Animations::Rigging::OverrideTransformData::Space::_get_World() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::Space::_get_World");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::OverrideTransformData::Space>("UnityEngine.Animations.Rigging", "OverrideTransformData/Space", "World"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.OverrideTransformData/Space World
void UnityEngine::Animations::Rigging::OverrideTransformData::Space::_set_World(::UnityEngine::Animations::Rigging::OverrideTransformData::Space value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::Space::_set_World");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "OverrideTransformData/Space", "World", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.OverrideTransformData/Space Local
::UnityEngine::Animations::Rigging::OverrideTransformData::Space UnityEngine::Animations::Rigging::OverrideTransformData::Space::_get_Local() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::Space::_get_Local");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::OverrideTransformData::Space>("UnityEngine.Animations.Rigging", "OverrideTransformData/Space", "Local"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.OverrideTransformData/Space Local
void UnityEngine::Animations::Rigging::OverrideTransformData::Space::_set_Local(::UnityEngine::Animations::Rigging::OverrideTransformData::Space value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::Space::_set_Local");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "OverrideTransformData/Space", "Local", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.OverrideTransformData/Space Pivot
::UnityEngine::Animations::Rigging::OverrideTransformData::Space UnityEngine::Animations::Rigging::OverrideTransformData::Space::_get_Pivot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::Space::_get_Pivot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::OverrideTransformData::Space>("UnityEngine.Animations.Rigging", "OverrideTransformData/Space", "Pivot"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.OverrideTransformData/Space Pivot
void UnityEngine::Animations::Rigging::OverrideTransformData::Space::_set_Pivot(::UnityEngine::Animations::Rigging::OverrideTransformData::Space value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::Space::_set_Pivot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "OverrideTransformData/Space", "Pivot", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Animations::Rigging::OverrideTransformData::Space::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::OverrideTransformData::Space::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.OverrideTransform
#include "UnityEngine/Animations/Rigging/OverrideTransform.hpp"
// Including type: UnityEngine.Animations.Rigging.OverrideTransformJobBinder`1
#include "UnityEngine/Animations/Rigging/OverrideTransformJobBinder_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.TwistCorrectionData
#include "UnityEngine/Animations/Rigging/TwistCorrectionData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_Source
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::TwistCorrectionData::dyn_m_Source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::dyn_m_Source");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Source"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.TwistCorrectionData/Axis m_TwistAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis& UnityEngine::Animations::Rigging::TwistCorrectionData::dyn_m_TwistAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::dyn_m_TwistAxis");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TwistAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.WeightedTransformArray m_TwistNodes
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::WeightedTransformArray& UnityEngine::Animations::Rigging::TwistCorrectionData::dyn_m_TwistNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::dyn_m_TwistNodes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TwistNodes"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::WeightedTransformArray*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionData.get_sourceObject
::UnityEngine::Transform* UnityEngine::Animations::Rigging::TwistCorrectionData::get_sourceObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::get_sourceObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_sourceObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionData.set_sourceObject
void UnityEngine::Animations::Rigging::TwistCorrectionData::set_sourceObject(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::set_sourceObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_sourceObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionData.get_twistNodes
::UnityEngine::Animations::Rigging::WeightedTransformArray UnityEngine::Animations::Rigging::TwistCorrectionData::get_twistNodes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::get_twistNodes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistCorrectionData), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::WeightedTransformArray, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionData.set_twistNodes
void UnityEngine::Animations::Rigging::TwistCorrectionData::set_twistNodes(::UnityEngine::Animations::Rigging::WeightedTransformArray value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::set_twistNodes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_twistNodes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionData.get_twistAxis
::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis UnityEngine::Animations::Rigging::TwistCorrectionData::get_twistAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::get_twistAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_twistAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionData.set_twistAxis
void UnityEngine::Animations::Rigging::TwistCorrectionData::set_twistAxis(::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::set_twistAxis");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_twistAxis", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionData.UnityEngine.Animations.Rigging.ITwistCorrectionData.get_source
::UnityEngine::Transform* UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine_Animations_Rigging_ITwistCorrectionData_get_source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine.Animations.Rigging.ITwistCorrectionData.get_source");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistCorrectionData), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionData.UnityEngine.Animations.Rigging.ITwistCorrectionData.get_twistAxis
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine_Animations_Rigging_ITwistCorrectionData_get_twistAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine.Animations.Rigging.ITwistCorrectionData.get_twistAxis");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistCorrectionData), 8));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionData.UnityEngine.Animations.Rigging.ITwistCorrectionData.get_twistNodesProperty
::StringW UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine_Animations_Rigging_ITwistCorrectionData_get_twistNodesProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine.Animations.Rigging.ITwistCorrectionData.get_twistNodesProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistCorrectionData), 9));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionData.Convert
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::TwistCorrectionData::Convert(::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis axis) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::Convert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "TwistCorrectionData", "Convert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(axis)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, axis);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionData.UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
bool UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine.Animations.Rigging.IAnimationJobData.IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistCorrectionData), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrectionData.UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
void UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwistCorrectionData), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.TwistCorrectionData/Axis
#include "UnityEngine/Animations/Rigging/TwistCorrectionData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.TwistCorrectionData/Axis X
::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis UnityEngine::Animations::Rigging::TwistCorrectionData::Axis::_get_X() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis::_get_X");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis>("UnityEngine.Animations.Rigging", "TwistCorrectionData/Axis", "X"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.TwistCorrectionData/Axis X
void UnityEngine::Animations::Rigging::TwistCorrectionData::Axis::_set_X(::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis::_set_X");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "TwistCorrectionData/Axis", "X", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.TwistCorrectionData/Axis Y
::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis UnityEngine::Animations::Rigging::TwistCorrectionData::Axis::_get_Y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis::_get_Y");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis>("UnityEngine.Animations.Rigging", "TwistCorrectionData/Axis", "Y"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.TwistCorrectionData/Axis Y
void UnityEngine::Animations::Rigging::TwistCorrectionData::Axis::_set_Y(::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis::_set_Y");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "TwistCorrectionData/Axis", "Y", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.TwistCorrectionData/Axis Z
::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis UnityEngine::Animations::Rigging::TwistCorrectionData::Axis::_get_Z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis::_get_Z");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis>("UnityEngine.Animations.Rigging", "TwistCorrectionData/Axis", "Z"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.TwistCorrectionData/Axis Z
void UnityEngine::Animations::Rigging::TwistCorrectionData::Axis::_set_Z(::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis::_set_Z");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "TwistCorrectionData/Axis", "Z", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::Animations::Rigging::TwistCorrectionData::Axis::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrectionData::Axis::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.TwistCorrection
#include "UnityEngine/Animations/Rigging/TwistCorrection.hpp"
// Including type: UnityEngine.Animations.Rigging.TwistCorrectionJobBinder`1
#include "UnityEngine/Animations/Rigging/TwistCorrectionJobBinder_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.TwistCorrection.OnValidate
void UnityEngine::Animations::Rigging::TwistCorrection::OnValidate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwistCorrection::OnValidate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnValidate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData
#include "UnityEngine/Animations/Rigging/TwoBoneIKConstraintData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_Root
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_Root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_Root");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Root"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_Mid
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_Mid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_Mid");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Mid"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_Tip
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_Tip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_Tip");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Tip"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_Target
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_Target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_Target");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Target"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_Hint
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_Hint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_Hint");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Hint"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TargetPositionWeight
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_TargetPositionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_TargetPositionWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetPositionWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TargetRotationWeight
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_TargetRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_TargetRotationWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TargetRotationWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_HintWeight
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_HintWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_HintWeight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_HintWeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_MaintainTargetPositionOffset
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_MaintainTargetPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_MaintainTargetPositionOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaintainTargetPositionOffset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_MaintainTargetRotationOffset
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_MaintainTargetRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::dyn_m_MaintainTargetRotationOffset");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_MaintainTargetRotationOffset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.get_root
::UnityEngine::Transform* UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_root() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_root");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData), 6));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.set_root
void UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_root(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_root");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_root", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.get_mid
::UnityEngine::Transform* UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_mid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_mid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.set_mid
void UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_mid(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_mid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_mid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.get_tip
::UnityEngine::Transform* UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_tip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_tip");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData), 8));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.set_tip
void UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_tip(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_tip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_tip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.get_target
::UnityEngine::Transform* UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_target() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_target");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData), 9));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.set_target
void UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_target(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_target");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_target", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.get_hint
::UnityEngine::Transform* UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_hint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_hint");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData), 10));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.set_hint
void UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_hint(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_hint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_hint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.get_targetPositionWeight
float UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_targetPositionWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_targetPositionWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_targetPositionWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.set_targetPositionWeight
void UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_targetPositionWeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_targetPositionWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_targetPositionWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.get_targetRotationWeight
float UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_targetRotationWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_targetRotationWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_targetRotationWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.set_targetRotationWeight
void UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_targetRotationWeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_targetRotationWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_targetRotationWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.get_hintWeight
float UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_hintWeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_hintWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_hintWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.set_hintWeight
void UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_hintWeight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_hintWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_hintWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.get_maintainTargetPositionOffset
bool UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_maintainTargetPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_maintainTargetPositionOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.set_maintainTargetPositionOffset
void UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_maintainTargetPositionOffset(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_maintainTargetPositionOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maintainTargetPositionOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.get_maintainTargetRotationOffset
bool UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_maintainTargetRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::get_maintainTargetRotationOffset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.set_maintainTargetRotationOffset
void UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_maintainTargetRotationOffset(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::set_maintainTargetRotationOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_maintainTargetRotationOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_targetPositionWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::UnityEngine_Animations_Rigging_ITwoBoneIKConstraintData_get_targetPositionWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_targetPositionWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData), 13));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_targetRotationWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::UnityEngine_Animations_Rigging_ITwoBoneIKConstraintData_get_targetRotationWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_targetRotationWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData), 14));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_hintWeightFloatProperty
::StringW UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::UnityEngine_Animations_Rigging_ITwoBoneIKConstraintData_get_hintWeightFloatProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::UnityEngine.Animations.Rigging.ITwoBoneIKConstraintData.get_hintWeightFloatProperty");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData), 15));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
bool UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.TwoBoneIKConstraintData.UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
void UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData::UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::TwoBoneIKConstraintData), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.TwoBoneIKConstraint
#include "UnityEngine/Animations/Rigging/TwoBoneIKConstraint.hpp"
// Including type: UnityEngine.Animations.Rigging.TwoBoneIKConstraintJobBinder`1
#include "UnityEngine/Animations/Rigging/TwoBoneIKConstraintJobBinder_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.IRigConstraint
#include "UnityEngine/Animations/Rigging/IRigConstraint.hpp"
// Including type: UnityEngine.Animations.IAnimationJob
#include "UnityEngine/Animations/IAnimationJob.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Animations.Rigging.IAnimationJobData
#include "UnityEngine/Animations/Rigging/IAnimationJobData.hpp"
// Including type: UnityEngine.Animations.Rigging.IAnimationJobBinder
#include "UnityEngine/Animations/Rigging/IAnimationJobBinder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.IRigConstraint.IsValid
bool UnityEngine::Animations::Rigging::IRigConstraint::IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigConstraint::IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigConstraint*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IRigConstraint.CreateJob
::UnityEngine::Animations::IAnimationJob* UnityEngine::Animations::Rigging::IRigConstraint::CreateJob(::UnityEngine::Animator* animator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigConstraint::CreateJob");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigConstraint*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::IAnimationJob*, false>(this, ___internal__method, animator);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IRigConstraint.UpdateJob
void UnityEngine::Animations::Rigging::IRigConstraint::UpdateJob(::UnityEngine::Animations::IAnimationJob* job) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigConstraint::UpdateJob");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigConstraint*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, job);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IRigConstraint.DestroyJob
void UnityEngine::Animations::Rigging::IRigConstraint::DestroyJob(::UnityEngine::Animations::IAnimationJob* job) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigConstraint::DestroyJob");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigConstraint*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, job);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IRigConstraint.get_data
::UnityEngine::Animations::Rigging::IAnimationJobData* UnityEngine::Animations::Rigging::IRigConstraint::get_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigConstraint::get_data");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigConstraint*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::IAnimationJobData*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IRigConstraint.get_binder
::UnityEngine::Animations::Rigging::IAnimationJobBinder* UnityEngine::Animations::Rigging::IRigConstraint::get_binder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigConstraint::get_binder");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigConstraint*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::IAnimationJobBinder*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IRigConstraint.get_weight
float UnityEngine::Animations::Rigging::IRigConstraint::get_weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigConstraint::get_weight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigConstraint*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IRigConstraint.set_weight
void UnityEngine::Animations::Rigging::IRigConstraint::set_weight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IRigConstraint::set_weight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IRigConstraint*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.Rig
#include "UnityEngine/Animations/Rigging/Rig.hpp"
// Including type: UnityEngine.Animations.Rigging.IRigConstraint
#include "UnityEngine/Animations/Rigging/IRigConstraint.hpp"
// Including type: UnityEngine.Animations.IAnimationJob
#include "UnityEngine/Animations/IAnimationJob.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: protected System.Single m_Weight
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::Rig::dyn_m_Weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Rig::dyn_m_Weight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Weight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.IRigConstraint[] m_Constraints
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Animations::Rigging::IRigConstraint*>& UnityEngine::Animations::Rigging::Rig::dyn_m_Constraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Rig::dyn_m_Constraints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Constraints"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Animations::Rigging::IRigConstraint*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.IAnimationJob[] m_Jobs
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Animations::IAnimationJob*>& UnityEngine::Animations::Rigging::Rig::dyn_m_Jobs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Rig::dyn_m_Jobs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Jobs"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Animations::IAnimationJob*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isInitialized>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::Rig::dyn_$isInitialized$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Rig::dyn_$isInitialized$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isInitialized>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Rig.Initialize
bool UnityEngine::Animations::Rigging::Rig::Initialize(::UnityEngine::Animator* animator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Rig::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, animator);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Rig.Destroy
void UnityEngine::Animations::Rigging::Rig::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Rig::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Rig.UpdateConstraints
void UnityEngine::Animations::Rigging::Rig::UpdateConstraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Rig::UpdateConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Rig.get_isInitialized
bool UnityEngine::Animations::Rigging::Rig::get_isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Rig::get_isInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Rig.set_isInitialized
void UnityEngine::Animations::Rigging::Rig::set_isInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Rig::set_isInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Rig.get_weight
float UnityEngine::Animations::Rigging::Rig::get_weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Rig::get_weight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_weight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Rig.set_weight
void UnityEngine::Animations::Rigging::Rig::set_weight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Rig::set_weight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_weight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Rig.get_constraints
::ArrayW<::UnityEngine::Animations::Rigging::IRigConstraint*> UnityEngine::Animations::Rigging::Rig::get_constraints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Rig::get_constraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_constraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Animations::Rigging::IRigConstraint*>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Rig.get_jobs
::ArrayW<::UnityEngine::Animations::IAnimationJob*> UnityEngine::Animations::Rigging::Rig::get_jobs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Rig::get_jobs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_jobs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Animations::IAnimationJob*>, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.RigBuilder
#include "UnityEngine/Animations/Rigging/RigBuilder.hpp"
// Including type: UnityEngine.Animations.Rigging.RigBuilder/RigLayer
#include "UnityEngine/Animations/Rigging/RigBuilder_RigLayer.hpp"
// Including type: UnityEngine.Animations.Rigging.Rig
#include "UnityEngine/Animations/Rigging/Rig.hpp"
// Including type: UnityEngine.Animations.Rigging.RigBuilder/SyncSceneToStreamLayer
#include "UnityEngine/Animations/Rigging/RigBuilder_SyncSceneToStreamLayer.hpp"
// Including type: UnityEngine.Animations.Rigging.RigBuilder/OnAddRigBuilderCallback
#include "UnityEngine/Animations/Rigging/RigBuilder_OnAddRigBuilderCallback.hpp"
// Including type: UnityEngine.Animations.Rigging.RigBuilder/OnRemoveRigBuilderCallback
#include "UnityEngine/Animations/Rigging/RigBuilder_OnRemoveRigBuilderCallback.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Playables.Playable
#include "UnityEngine/Playables/Playable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.UInt16 k_AnimationOutputPriority
uint16_t UnityEngine::Animations::Rigging::RigBuilder::_get_k_AnimationOutputPriority() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::_get_k_AnimationOutputPriority");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint16_t>("UnityEngine.Animations.Rigging", "RigBuilder", "k_AnimationOutputPriority"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.UInt16 k_AnimationOutputPriority
void UnityEngine::Animations::Rigging::RigBuilder::_set_k_AnimationOutputPriority(uint16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::_set_k_AnimationOutputPriority");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "RigBuilder", "k_AnimationOutputPriority", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.RigBuilder/OnAddRigBuilderCallback onAddRigBuilder
::UnityEngine::Animations::Rigging::RigBuilder::OnAddRigBuilderCallback* UnityEngine::Animations::Rigging::RigBuilder::_get_onAddRigBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::_get_onAddRigBuilder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::RigBuilder::OnAddRigBuilderCallback*>("UnityEngine.Animations.Rigging", "RigBuilder", "onAddRigBuilder"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.RigBuilder/OnAddRigBuilderCallback onAddRigBuilder
void UnityEngine::Animations::Rigging::RigBuilder::_set_onAddRigBuilder(::UnityEngine::Animations::Rigging::RigBuilder::OnAddRigBuilderCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::_set_onAddRigBuilder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "RigBuilder", "onAddRigBuilder", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.RigBuilder/OnRemoveRigBuilderCallback onRemoveRigBuilder
::UnityEngine::Animations::Rigging::RigBuilder::OnRemoveRigBuilderCallback* UnityEngine::Animations::Rigging::RigBuilder::_get_onRemoveRigBuilder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::_get_onRemoveRigBuilder");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::RigBuilder::OnRemoveRigBuilderCallback*>("UnityEngine.Animations.Rigging", "RigBuilder", "onRemoveRigBuilder"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.RigBuilder/OnRemoveRigBuilderCallback onRemoveRigBuilder
void UnityEngine::Animations::Rigging::RigBuilder::_set_onRemoveRigBuilder(::UnityEngine::Animations::Rigging::RigBuilder::OnRemoveRigBuilderCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::_set_onRemoveRigBuilder");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "RigBuilder", "onRemoveRigBuilder", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Animations.Rigging.RigBuilder/RigLayer> m_RigLayers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Animations::Rigging::RigBuilder::RigLayer*>*& UnityEngine::Animations::Rigging::RigBuilder::dyn_m_RigLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::dyn_m_RigLayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RigLayers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Animations::Rigging::RigBuilder::RigLayer*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Animations.Rigging.RigBuilder/LayerData> m_RigLayerData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Animations::Rigging::RigBuilder::LayerData>*& UnityEngine::Animations::Rigging::RigBuilder::dyn_m_RigLayerData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::dyn_m_RigLayerData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RigLayerData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Animations::Rigging::RigBuilder::LayerData>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Animations.Rigging.RigBuilder/LayerData> m_PreviewRigLayerData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Animations::Rigging::RigBuilder::LayerData>*& UnityEngine::Animations::Rigging::RigBuilder::dyn_m_PreviewRigLayerData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::dyn_m_PreviewRigLayerData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_PreviewRigLayerData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Animations::Rigging::RigBuilder::LayerData>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.RigBuilder/SyncSceneToStreamLayer m_SyncSceneToStreamLayer
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::RigBuilder::SyncSceneToStreamLayer*& UnityEngine::Animations::Rigging::RigBuilder::dyn_m_SyncSceneToStreamLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::dyn_m_SyncSceneToStreamLayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SyncSceneToStreamLayer"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::RigBuilder::SyncSceneToStreamLayer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Playables.PlayableGraph <graph>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::Playables::PlayableGraph& UnityEngine::Animations::Rigging::RigBuilder::dyn_$graph$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::dyn_$graph$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<graph>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::Playables::PlayableGraph*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.OnEnable
void UnityEngine::Animations::Rigging::RigBuilder::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.OnDisable
void UnityEngine::Animations::Rigging::RigBuilder::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.OnDestroy
void UnityEngine::Animations::Rigging::RigBuilder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.Update
void UnityEngine::Animations::Rigging::RigBuilder::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.Build
bool UnityEngine::Animations::Rigging::RigBuilder::Build() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::Build");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Build", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.Clear
void UnityEngine::Animations::Rigging::RigBuilder::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.BuildRigPlayables
::ArrayW<::UnityEngine::Animations::AnimationScriptPlayable> UnityEngine::Animations::Rigging::RigBuilder::BuildRigPlayables(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Animations::Rigging::Rig* rig) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::BuildRigPlayables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BuildRigPlayables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(graph), ::il2cpp_utils::ExtractType(rig)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Animations::AnimationScriptPlayable>, false>(this, ___internal__method, graph, rig);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.StartPreview
void UnityEngine::Animations::Rigging::RigBuilder::StartPreview() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::StartPreview");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigBuilder*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.StopPreview
void UnityEngine::Animations::Rigging::RigBuilder::StopPreview() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::StopPreview");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigBuilder*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.UpdatePreviewGraph
void UnityEngine::Animations::Rigging::RigBuilder::UpdatePreviewGraph(::UnityEngine::Playables::PlayableGraph graph) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::UpdatePreviewGraph");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigBuilder*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, graph);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.BuildPreviewGraph
::UnityEngine::Playables::Playable UnityEngine::Animations::Rigging::RigBuilder::BuildPreviewGraph(::UnityEngine::Playables::PlayableGraph graph, ::UnityEngine::Playables::Playable inputPlayable) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::BuildPreviewGraph");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigBuilder*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::Playable, false>(this, ___internal__method, graph, inputPlayable);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.get_layers
::System::Collections::Generic::List_1<::UnityEngine::Animations::Rigging::RigBuilder::RigLayer*>* UnityEngine::Animations::Rigging::RigBuilder::get_layers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::get_layers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_layers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::Animations::Rigging::RigBuilder::RigLayer*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.set_layers
void UnityEngine::Animations::Rigging::RigBuilder::set_layers(::System::Collections::Generic::List_1<::UnityEngine::Animations::Rigging::RigBuilder::RigLayer*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::set_layers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_layers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.get_syncSceneToStreamLayer
::UnityEngine::Animations::Rigging::RigBuilder::SyncSceneToStreamLayer* UnityEngine::Animations::Rigging::RigBuilder::get_syncSceneToStreamLayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::get_syncSceneToStreamLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_syncSceneToStreamLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::RigBuilder::SyncSceneToStreamLayer*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.set_syncSceneToStreamLayer
void UnityEngine::Animations::Rigging::RigBuilder::set_syncSceneToStreamLayer(::UnityEngine::Animations::Rigging::RigBuilder::SyncSceneToStreamLayer* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::set_syncSceneToStreamLayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_syncSceneToStreamLayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.get_graph
::UnityEngine::Playables::PlayableGraph UnityEngine::Animations::Rigging::RigBuilder::get_graph() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::get_graph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_graph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Playables::PlayableGraph, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder.set_graph
void UnityEngine::Animations::Rigging::RigBuilder::set_graph(::UnityEngine::Playables::PlayableGraph value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::set_graph");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_graph", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder..cctor
void UnityEngine::Animations::Rigging::RigBuilder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "RigBuilder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.RigBuilder/RigLayer
#include "UnityEngine/Animations/Rigging/RigBuilder_RigLayer.hpp"
// Including type: UnityEngine.Animations.Rigging.Rig
#include "UnityEngine/Animations/Rigging/Rig.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 k_InvalidDataIndex
int UnityEngine::Animations::Rigging::RigBuilder::RigLayer::_get_k_InvalidDataIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::RigLayer::_get_k_InvalidDataIndex");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.Animations.Rigging", "RigBuilder/RigLayer", "k_InvalidDataIndex"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 k_InvalidDataIndex
void UnityEngine::Animations::Rigging::RigBuilder::RigLayer::_set_k_InvalidDataIndex(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::RigLayer::_set_k_InvalidDataIndex");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "RigBuilder/RigLayer", "k_InvalidDataIndex", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.Rig rig
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::Rig*& UnityEngine::Animations::Rigging::RigBuilder::RigLayer::dyn_rig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::RigLayer::dyn_rig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rig"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::Rig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean active
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::RigBuilder::RigLayer::dyn_active() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::RigLayer::dyn_active");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "active"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 data
[[deprecated("Use field access instead!")]] int& UnityEngine::Animations::Rigging::RigBuilder::RigLayer::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::RigLayer::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder/RigLayer.Reset
void UnityEngine::Animations::Rigging::RigBuilder::RigLayer::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::RigLayer::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder/RigLayer.Initialize
bool UnityEngine::Animations::Rigging::RigBuilder::RigLayer::Initialize(::UnityEngine::Animator* animator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::RigLayer::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, animator);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder/RigLayer.IsValid
bool UnityEngine::Animations::Rigging::RigBuilder::RigLayer::IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::RigLayer::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.RigBuilder/SyncSceneToStreamLayer
#include "UnityEngine/Animations/Rigging/RigBuilder_SyncSceneToStreamLayer.hpp"
// Including type: UnityEngine.Animations.IAnimationJob
#include "UnityEngine/Animations/IAnimationJob.hpp"
// Including type: UnityEngine.Animations.Rigging.IAnimationJobData
#include "UnityEngine/Animations/Rigging/IAnimationJobData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: UnityEngine.Animations.Rigging.RigBuilder/RigLayer
#include "UnityEngine/Animations/Rigging/RigBuilder_RigLayer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Boolean <isInitialized>k__BackingField
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::RigBuilder::SyncSceneToStreamLayer::dyn_$isInitialized$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::SyncSceneToStreamLayer::dyn_$isInitialized$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isInitialized>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.IAnimationJob job
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::IAnimationJob*& UnityEngine::Animations::Rigging::RigBuilder::SyncSceneToStreamLayer::dyn_job() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::SyncSceneToStreamLayer::dyn_job");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "job"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::IAnimationJob**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.IAnimationJobData m_Data
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::IAnimationJobData*& UnityEngine::Animations::Rigging::RigBuilder::SyncSceneToStreamLayer::dyn_m_Data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::SyncSceneToStreamLayer::dyn_m_Data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Data"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::IAnimationJobData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Int32> m_RigIndices
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& UnityEngine::Animations::Rigging::RigBuilder::SyncSceneToStreamLayer::dyn_m_RigIndices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::SyncSceneToStreamLayer::dyn_m_RigIndices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_RigIndices"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder/SyncSceneToStreamLayer.Initialize
bool UnityEngine::Animations::Rigging::RigBuilder::SyncSceneToStreamLayer::Initialize(::UnityEngine::Animator* animator, ::System::Collections::Generic::List_1<::UnityEngine::Animations::Rigging::RigBuilder::RigLayer*>* layers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::SyncSceneToStreamLayer::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(layers)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, animator, layers);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder/SyncSceneToStreamLayer.Update
void UnityEngine::Animations::Rigging::RigBuilder::SyncSceneToStreamLayer::Update(::System::Collections::Generic::List_1<::UnityEngine::Animations::Rigging::RigBuilder::RigLayer*>* layers) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::SyncSceneToStreamLayer::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(layers)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, layers);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder/SyncSceneToStreamLayer.Destroy
void UnityEngine::Animations::Rigging::RigBuilder::SyncSceneToStreamLayer::Destroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::SyncSceneToStreamLayer::Destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder/SyncSceneToStreamLayer.IsValid
bool UnityEngine::Animations::Rigging::RigBuilder::SyncSceneToStreamLayer::IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::SyncSceneToStreamLayer::IsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder/SyncSceneToStreamLayer.get_isInitialized
bool UnityEngine::Animations::Rigging::RigBuilder::SyncSceneToStreamLayer::get_isInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::SyncSceneToStreamLayer::get_isInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder/SyncSceneToStreamLayer.set_isInitialized
void UnityEngine::Animations::Rigging::RigBuilder::SyncSceneToStreamLayer::set_isInitialized(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::SyncSceneToStreamLayer::set_isInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Animations.Rigging.RigBuilder/OnAddRigBuilderCallback
#include "UnityEngine/Animations/Rigging/RigBuilder_OnAddRigBuilderCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder/OnAddRigBuilderCallback.Invoke
void UnityEngine::Animations::Rigging::RigBuilder::OnAddRigBuilderCallback::Invoke(::UnityEngine::Animations::Rigging::RigBuilder* rigBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::OnAddRigBuilderCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigBuilder::OnAddRigBuilderCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rigBuilder);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder/OnAddRigBuilderCallback.BeginInvoke
::System::IAsyncResult* UnityEngine::Animations::Rigging::RigBuilder::OnAddRigBuilderCallback::BeginInvoke(::UnityEngine::Animations::Rigging::RigBuilder* rigBuilder, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::OnAddRigBuilderCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigBuilder::OnAddRigBuilderCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, rigBuilder, callback, object);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder/OnAddRigBuilderCallback.EndInvoke
void UnityEngine::Animations::Rigging::RigBuilder::OnAddRigBuilderCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::OnAddRigBuilderCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigBuilder::OnAddRigBuilderCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Animations.Rigging.RigBuilder/OnRemoveRigBuilderCallback
#include "UnityEngine/Animations/Rigging/RigBuilder_OnRemoveRigBuilderCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder/OnRemoveRigBuilderCallback.Invoke
void UnityEngine::Animations::Rigging::RigBuilder::OnRemoveRigBuilderCallback::Invoke(::UnityEngine::Animations::Rigging::RigBuilder* rigBuilder) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::OnRemoveRigBuilderCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigBuilder::OnRemoveRigBuilderCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rigBuilder);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder/OnRemoveRigBuilderCallback.BeginInvoke
::System::IAsyncResult* UnityEngine::Animations::Rigging::RigBuilder::OnRemoveRigBuilderCallback::BeginInvoke(::UnityEngine::Animations::Rigging::RigBuilder* rigBuilder, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::OnRemoveRigBuilderCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigBuilder::OnRemoveRigBuilderCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, rigBuilder, callback, object);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigBuilder/OnRemoveRigBuilderCallback.EndInvoke
void UnityEngine::Animations::Rigging::RigBuilder::OnRemoveRigBuilderCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigBuilder::OnRemoveRigBuilderCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::RigBuilder::OnRemoveRigBuilderCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.RigTransform
#include "UnityEngine/Animations/Rigging/RigTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.RigUtils
#include "UnityEngine/Animations/Rigging/RigUtils.hpp"
// Including type: UnityEngine.Animations.Rigging.RigUtils/RigSyncSceneToStreamData
#include "UnityEngine/Animations/Rigging/RigUtils_RigSyncSceneToStreamData.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: UnityEngine.Animations.Rigging.IAnimationJobBinder
#include "UnityEngine/Animations/Rigging/IAnimationJobBinder.hpp"
// Including type: UnityEngine.Animations.Rigging.IRigConstraint
#include "UnityEngine/Animations/Rigging/IRigConstraint.hpp"
// Including type: UnityEngine.Animations.Rigging.Rig
#include "UnityEngine/Animations/Rigging/Rig.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Animator
#include "UnityEngine/Animator.hpp"
// Including type: System.Reflection.FieldInfo
#include "System/Reflection/FieldInfo.hpp"
// Including type: UnityEngine.Animations.Rigging.IAnimationJobData
#include "UnityEngine/Animations/Rigging/IAnimationJobData.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Animations.IAnimationJob
#include "UnityEngine/Animations/IAnimationJob.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Collections.Generic.Dictionary`2<System.Type,UnityEngine.Animations.Rigging.PropertyDescriptor> s_SupportedPropertyTypeToDescriptor
::System::Collections::Generic::Dictionary_2<::System::Type*, ::UnityEngine::Animations::Rigging::PropertyDescriptor>* UnityEngine::Animations::Rigging::RigUtils::_get_s_SupportedPropertyTypeToDescriptor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigUtils::_get_s_SupportedPropertyTypeToDescriptor");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::System::Type*, ::UnityEngine::Animations::Rigging::PropertyDescriptor>*>("UnityEngine.Animations.Rigging", "RigUtils", "s_SupportedPropertyTypeToDescriptor")));
}
// Autogenerated static field setter
// Set static field: static readonly System.Collections.Generic.Dictionary`2<System.Type,UnityEngine.Animations.Rigging.PropertyDescriptor> s_SupportedPropertyTypeToDescriptor
void UnityEngine::Animations::Rigging::RigUtils::_set_s_SupportedPropertyTypeToDescriptor(::System::Collections::Generic::Dictionary_2<::System::Type*, ::UnityEngine::Animations::Rigging::PropertyDescriptor>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigUtils::_set_s_SupportedPropertyTypeToDescriptor");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "RigUtils", "s_SupportedPropertyTypeToDescriptor", value));
}
// [CompilerGeneratedAttribute] Offset: 0xADB950
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Animations.Rigging.IAnimationJobBinder <syncSceneToStreamBinder>k__BackingField
::UnityEngine::Animations::Rigging::IAnimationJobBinder* UnityEngine::Animations::Rigging::RigUtils::_get_$syncSceneToStreamBinder$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigUtils::_get_$syncSceneToStreamBinder$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::IAnimationJobBinder*>("UnityEngine.Animations.Rigging", "RigUtils", "<syncSceneToStreamBinder>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Animations.Rigging.IAnimationJobBinder <syncSceneToStreamBinder>k__BackingField
void UnityEngine::Animations::Rigging::RigUtils::_set_$syncSceneToStreamBinder$k__BackingField(::UnityEngine::Animations::Rigging::IAnimationJobBinder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigUtils::_set_$syncSceneToStreamBinder$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "RigUtils", "<syncSceneToStreamBinder>k__BackingField", value));
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigUtils.GetConstraints
::ArrayW<::UnityEngine::Animations::Rigging::IRigConstraint*> UnityEngine::Animations::Rigging::RigUtils::GetConstraints(::UnityEngine::Animations::Rigging::Rig* rig) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigUtils::GetConstraints");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "RigUtils", "GetConstraints", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rig)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Animations::Rigging::IRigConstraint*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rig);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigUtils.GetSyncableRigTransforms
::ArrayW<::UnityEngine::Transform*> UnityEngine::Animations::Rigging::RigUtils::GetSyncableRigTransforms(::UnityEngine::Animator* animator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigUtils::GetSyncableRigTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "RigUtils", "GetSyncableRigTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Transform*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigUtils.ExtractTransformType
bool UnityEngine::Animations::Rigging::RigUtils::ExtractTransformType(::UnityEngine::Animator* animator, ::System::Reflection::FieldInfo* field, ByRef<::UnityEngine::Animations::Rigging::IAnimationJobData*> data, ::System::Collections::Generic::List_1<::UnityEngine::Transform*>* syncableTransforms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigUtils::ExtractTransformType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "RigUtils", "ExtractTransformType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(field), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(syncableTransforms)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, field, byref(data), syncableTransforms);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigUtils.ExtractPropertyType
bool UnityEngine::Animations::Rigging::RigUtils::ExtractPropertyType(::System::Reflection::FieldInfo* field, ByRef<::UnityEngine::Animations::Rigging::IAnimationJobData*> data, ::System::Collections::Generic::List_1<::UnityEngine::Animations::Rigging::Property>* syncableProperties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigUtils::ExtractPropertyType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "RigUtils", "ExtractPropertyType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(field), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(syncableProperties)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, field, byref(data), syncableProperties);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigUtils.ExtractWeightedTransforms
bool UnityEngine::Animations::Rigging::RigUtils::ExtractWeightedTransforms(::UnityEngine::Animator* animator, ::System::Reflection::FieldInfo* field, ByRef<::UnityEngine::Animations::Rigging::IAnimationJobData*> data, ::System::Collections::Generic::List_1<::UnityEngine::Transform*>* syncableTransforms, ::System::Collections::Generic::List_1<::UnityEngine::Animations::Rigging::Property>* syncableProperties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigUtils::ExtractWeightedTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "RigUtils", "ExtractWeightedTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(field), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(syncableTransforms), ::il2cpp_utils::ExtractType(syncableProperties)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, field, byref(data), syncableTransforms, syncableProperties);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigUtils.ExtractAllSyncableData
void UnityEngine::Animations::Rigging::RigUtils::ExtractAllSyncableData(::UnityEngine::Animator* animator, ::ArrayW<::UnityEngine::Animations::Rigging::Rig*> rigs, ByRef<::System::Collections::Generic::List_1<::UnityEngine::Transform*>*> syncableTransforms, ByRef<::System::Collections::Generic::List_1<::UnityEngine::Animations::Rigging::SyncableProperties>*> syncableProperties) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigUtils::ExtractAllSyncableData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "RigUtils", "ExtractAllSyncableData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(rigs), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::UnityEngine::Transform*>*&>(), ::il2cpp_utils::ExtractIndependentType<::System::Collections::Generic::List_1<::UnityEngine::Animations::Rigging::SyncableProperties>*&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, rigs, byref(syncableTransforms), byref(syncableProperties));
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigUtils.CreateAnimationJobs
::ArrayW<::UnityEngine::Animations::IAnimationJob*> UnityEngine::Animations::Rigging::RigUtils::CreateAnimationJobs(::UnityEngine::Animator* animator, ::ArrayW<::UnityEngine::Animations::Rigging::IRigConstraint*> constraints) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigUtils::CreateAnimationJobs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "RigUtils", "CreateAnimationJobs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(constraints)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Animations::IAnimationJob*>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, constraints);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigUtils.DestroyAnimationJobs
void UnityEngine::Animations::Rigging::RigUtils::DestroyAnimationJobs(::ArrayW<::UnityEngine::Animations::Rigging::IRigConstraint*> constraints, ::ArrayW<::UnityEngine::Animations::IAnimationJob*> jobs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigUtils::DestroyAnimationJobs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "RigUtils", "DestroyAnimationJobs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(constraints), ::il2cpp_utils::ExtractType(jobs)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, constraints, jobs);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigUtils.CreateSyncSceneToStreamData
::UnityEngine::Animations::Rigging::IAnimationJobData* UnityEngine::Animations::Rigging::RigUtils::CreateSyncSceneToStreamData(::UnityEngine::Animator* animator, ::ArrayW<::UnityEngine::Animations::Rigging::Rig*> rigs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigUtils::CreateSyncSceneToStreamData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "RigUtils", "CreateSyncSceneToStreamData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(animator), ::il2cpp_utils::ExtractType(rigs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::IAnimationJobData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, animator, rigs);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigUtils.get_syncSceneToStreamBinder
::UnityEngine::Animations::Rigging::IAnimationJobBinder* UnityEngine::Animations::Rigging::RigUtils::get_syncSceneToStreamBinder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigUtils::get_syncSceneToStreamBinder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "RigUtils", "get_syncSceneToStreamBinder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::IAnimationJobBinder*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigUtils..cctor
void UnityEngine::Animations::Rigging::RigUtils::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigUtils::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "RigUtils", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.RigUtils/RigSyncSceneToStreamData
#include "UnityEngine/Animations/Rigging/RigUtils_RigSyncSceneToStreamData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform[] <syncableTransforms>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::dyn_$syncableTransforms$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::dyn_$syncableTransforms$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<syncableTransforms>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.SyncableProperties[] <syncableProperties>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Animations::Rigging::SyncableProperties>& UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::dyn_$syncableProperties$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::dyn_$syncableProperties$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<syncableProperties>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Animations::Rigging::SyncableProperties>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean[] <rigStates>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<bool>& UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::dyn_$rigStates$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::dyn_$rigStates$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rigStates>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean m_IsValid
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::dyn_m_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::dyn_m_IsValid");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_IsValid"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigUtils/RigSyncSceneToStreamData..ctor
UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::RigSyncSceneToStreamData(::ArrayW<::UnityEngine::Transform*> transforms, ::ArrayW<::UnityEngine::Animations::Rigging::SyncableProperties> properties, int rigCount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transforms), ::il2cpp_utils::ExtractType(properties), ::il2cpp_utils::ExtractType(rigCount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transforms, properties, rigCount);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigUtils/RigSyncSceneToStreamData.UniqueTransformIndices
::ArrayW<int> UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::UniqueTransformIndices(::ArrayW<::UnityEngine::Transform*> transforms) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::UniqueTransformIndices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "RigUtils/RigSyncSceneToStreamData", "UniqueTransformIndices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transforms)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, transforms);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigUtils/RigSyncSceneToStreamData.get_syncableTransforms
::ArrayW<::UnityEngine::Transform*> UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::get_syncableTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::get_syncableTransforms");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData), 6));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Transform*>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigUtils/RigSyncSceneToStreamData.set_syncableTransforms
void UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::set_syncableTransforms(::ArrayW<::UnityEngine::Transform*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::set_syncableTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_syncableTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigUtils/RigSyncSceneToStreamData.get_syncableProperties
::ArrayW<::UnityEngine::Animations::Rigging::SyncableProperties> UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::get_syncableProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::get_syncableProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData), 7));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::UnityEngine::Animations::Rigging::SyncableProperties>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigUtils/RigSyncSceneToStreamData.set_syncableProperties
void UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::set_syncableProperties(::ArrayW<::UnityEngine::Animations::Rigging::SyncableProperties> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::set_syncableProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_syncableProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigUtils/RigSyncSceneToStreamData.get_rigStates
::ArrayW<bool> UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::get_rigStates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::get_rigStates");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData), 8));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<bool>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigUtils/RigSyncSceneToStreamData.set_rigStates
void UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::set_rigStates(::ArrayW<bool> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::set_rigStates");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_rigStates", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigUtils/RigSyncSceneToStreamData.UnityEngine.Animations.Rigging.IAnimationJobData.IsValid
bool UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::UnityEngine_Animations_Rigging_IAnimationJobData_IsValid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::UnityEngine.Animations.Rigging.IAnimationJobData.IsValid");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigUtils/RigSyncSceneToStreamData.UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues
void UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::UnityEngine_Animations_Rigging_IAnimationJobData_SetDefaultValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData::UnityEngine.Animations.Rigging.IAnimationJobData.SetDefaultValues");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::RigUtils::RigSyncSceneToStreamData), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.ITransformProvider
#include "UnityEngine/Animations/Rigging/ITransformProvider.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.ITransformProvider.get_transform
::UnityEngine::Transform* UnityEngine::Animations::Rigging::ITransformProvider::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITransformProvider::get_transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITransformProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ITransformProvider.set_transform
void UnityEngine::Animations::Rigging::ITransformProvider::set_transform(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ITransformProvider::set_transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::ITransformProvider*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.IWeightProvider
#include "UnityEngine/Animations/Rigging/IWeightProvider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.IWeightProvider.get_weight
float UnityEngine::Animations::Rigging::IWeightProvider::get_weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IWeightProvider::get_weight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IWeightProvider*), -1));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.IWeightProvider.set_weight
void UnityEngine::Animations::Rigging::IWeightProvider::set_weight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::IWeightProvider::set_weight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::Animations::Rigging::IWeightProvider*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.WeightedTransform
#include "UnityEngine/Animations/Rigging/WeightedTransform.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform transform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::WeightedTransform::dyn_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransform::dyn_transform");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single weight
[[deprecated("Use field access instead!")]] float& UnityEngine::Animations::Rigging::WeightedTransform::dyn_weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransform::dyn_weight");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "weight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransform..ctor
// ABORTED elsewhere.  UnityEngine::Animations::Rigging::WeightedTransform::WeightedTransform(::UnityEngine::Transform* transform, float weight)
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransform.Default
::UnityEngine::Animations::Rigging::WeightedTransform UnityEngine::Animations::Rigging::WeightedTransform::Default(float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransform::Default");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "WeightedTransform", "Default", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(weight)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::WeightedTransform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, weight);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransform.Equals
bool UnityEngine::Animations::Rigging::WeightedTransform::Equals(::UnityEngine::Animations::Rigging::WeightedTransform other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransform::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransform), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransform.UnityEngine.Animations.Rigging.ITransformProvider.get_transform
::UnityEngine::Transform* UnityEngine::Animations::Rigging::WeightedTransform::UnityEngine_Animations_Rigging_ITransformProvider_get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransform::UnityEngine.Animations.Rigging.ITransformProvider.get_transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransform), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransform.UnityEngine.Animations.Rigging.ITransformProvider.set_transform
void UnityEngine::Animations::Rigging::WeightedTransform::UnityEngine_Animations_Rigging_ITransformProvider_set_transform(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransform::UnityEngine.Animations.Rigging.ITransformProvider.set_transform");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransform), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransform.UnityEngine.Animations.Rigging.IWeightProvider.get_weight
float UnityEngine::Animations::Rigging::WeightedTransform::UnityEngine_Animations_Rigging_IWeightProvider_get_weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransform::UnityEngine.Animations.Rigging.IWeightProvider.get_weight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransform), 6));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransform.UnityEngine.Animations.Rigging.IWeightProvider.set_weight
void UnityEngine::Animations::Rigging::WeightedTransform::UnityEngine_Animations_Rigging_IWeightProvider_set_weight(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransform::UnityEngine.Animations.Rigging.IWeightProvider.set_weight");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransform), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Animations.Rigging.WeightedTransformArray
#include "UnityEngine/Animations/Rigging/WeightedTransformArray.hpp"
// Including type: UnityEngine.Animations.Rigging.WeightedTransformArray/Enumerator
#include "UnityEngine/Animations/Rigging/WeightedTransformArray_Enumerator.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Int32 k_MaxLength
int UnityEngine::Animations::Rigging::WeightedTransformArray::_get_k_MaxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::_get_k_MaxLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("UnityEngine.Animations.Rigging", "WeightedTransformArray", "k_MaxLength"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32 k_MaxLength
void UnityEngine::Animations::Rigging::WeightedTransformArray::_set_k_MaxLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::_set_k_MaxLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "WeightedTransformArray", "k_MaxLength", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Length
[[deprecated("Use field access instead!")]] int& UnityEngine::Animations::Rigging::WeightedTransformArray::dyn_m_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::dyn_m_Length");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Length"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.WeightedTransform m_Item0
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::WeightedTransform& UnityEngine::Animations::Rigging::WeightedTransformArray::dyn_m_Item0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::dyn_m_Item0");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Item0"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::WeightedTransform*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.WeightedTransform m_Item1
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::WeightedTransform& UnityEngine::Animations::Rigging::WeightedTransformArray::dyn_m_Item1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::dyn_m_Item1");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Item1"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::WeightedTransform*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.WeightedTransform m_Item2
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::WeightedTransform& UnityEngine::Animations::Rigging::WeightedTransformArray::dyn_m_Item2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::dyn_m_Item2");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Item2"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::WeightedTransform*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.WeightedTransform m_Item3
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::WeightedTransform& UnityEngine::Animations::Rigging::WeightedTransformArray::dyn_m_Item3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::dyn_m_Item3");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Item3"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::WeightedTransform*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.WeightedTransform m_Item4
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::WeightedTransform& UnityEngine::Animations::Rigging::WeightedTransformArray::dyn_m_Item4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::dyn_m_Item4");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Item4"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::WeightedTransform*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.WeightedTransform m_Item5
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::WeightedTransform& UnityEngine::Animations::Rigging::WeightedTransformArray::dyn_m_Item5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::dyn_m_Item5");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Item5"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::WeightedTransform*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.WeightedTransform m_Item6
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::WeightedTransform& UnityEngine::Animations::Rigging::WeightedTransformArray::dyn_m_Item6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::dyn_m_Item6");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Item6"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::WeightedTransform*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.WeightedTransform m_Item7
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::WeightedTransform& UnityEngine::Animations::Rigging::WeightedTransformArray::dyn_m_Item7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::dyn_m_Item7");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Item7"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::WeightedTransform*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray..ctor
UnityEngine::Animations::Rigging::WeightedTransformArray::WeightedTransformArray(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, size);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::UnityEngine::Animations::Rigging::WeightedTransform>* UnityEngine::Animations::Rigging::WeightedTransformArray::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray), 16));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::UnityEngine::Animations::Rigging::WeightedTransform>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray), 17));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.System.Collections.IList.Add
int UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::System.Collections.IList.Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray), 20));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.Add
void UnityEngine::Animations::Rigging::WeightedTransformArray::Add(::UnityEngine::Animations::Rigging::WeightedTransform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.Clear
void UnityEngine::Animations::Rigging::WeightedTransformArray::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.System.Collections.IList.IndexOf
int UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::System.Collections.IList.IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray), 25));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.IndexOf
int UnityEngine::Animations::Rigging::WeightedTransformArray::IndexOf(::UnityEngine::Animations::Rigging::WeightedTransform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.System.Collections.IList.Contains
bool UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_IList_Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::System.Collections.IList.Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray), 21));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.Contains
bool UnityEngine::Animations::Rigging::WeightedTransformArray::Contains(::UnityEngine::Animations::Rigging::WeightedTransform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray), 13));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.System.Collections.ICollection.CopyTo
void UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_ICollection_CopyTo(::System::Array* array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.CopyTo
void UnityEngine::Animations::Rigging::WeightedTransformArray::CopyTo(::ArrayW<::UnityEngine::Animations::Rigging::WeightedTransform> array, int arrayIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, arrayIndex);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.System.Collections.IList.Remove
void UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::System.Collections.IList.Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.Remove
bool UnityEngine::Animations::Rigging::WeightedTransformArray::Remove(::UnityEngine::Animations::Rigging::WeightedTransform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray), 15));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.RemoveAt
void UnityEngine::Animations::Rigging::WeightedTransformArray::RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::RemoveAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.System.Collections.IList.Insert
void UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::System.Collections.IList.Insert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.Insert
void UnityEngine::Animations::Rigging::WeightedTransformArray::Insert(int index, ::UnityEngine::Animations::Rigging::WeightedTransform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::Insert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.ClampSize
int UnityEngine::Animations::Rigging::WeightedTransformArray::ClampSize(int size) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::ClampSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "WeightedTransformArray", "ClampSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(size)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, size);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.CheckOutOfRangeIndex
void UnityEngine::Animations::Rigging::WeightedTransformArray::CheckOutOfRangeIndex(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::CheckOutOfRangeIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CheckOutOfRangeIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.Get
::UnityEngine::Animations::Rigging::WeightedTransform UnityEngine::Animations::Rigging::WeightedTransformArray::Get(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::Get");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Get", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::WeightedTransform, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.Set
void UnityEngine::Animations::Rigging::WeightedTransformArray::Set(int index, ::UnityEngine::Animations::Rigging::WeightedTransform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.SetWeight
void UnityEngine::Animations::Rigging::WeightedTransformArray::SetWeight(int index, float weight) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::SetWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(weight)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, weight);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.GetWeight
float UnityEngine::Animations::Rigging::WeightedTransformArray::GetWeight(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::GetWeight");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetWeight", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.SetTransform
void UnityEngine::Animations::Rigging::WeightedTransformArray::SetTransform(int index, ::UnityEngine::Transform* transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::SetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "SetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(transform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, transform);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.GetTransform
::UnityEngine::Transform* UnityEngine::Animations::Rigging::WeightedTransformArray::GetTransform(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::GetTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "GetTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.System.Collections.IList.get_Item
::Il2CppObject* UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::System.Collections.IList.get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray), 18));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.System.Collections.IList.set_Item
void UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::System.Collections.IList.set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.get_Item
::UnityEngine::Animations::Rigging::WeightedTransform UnityEngine::Animations::Rigging::WeightedTransformArray::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::WeightedTransform, false>(this, ___internal__method, index);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.set_Item
void UnityEngine::Animations::Rigging::WeightedTransformArray::set_Item(int index, ::UnityEngine::Animations::Rigging::WeightedTransform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.get_Count
int UnityEngine::Animations::Rigging::WeightedTransformArray::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray), 30));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.get_IsReadOnly
bool UnityEngine::Animations::Rigging::WeightedTransformArray::get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray), 23));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.get_IsFixedSize
bool UnityEngine::Animations::Rigging::WeightedTransformArray::get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray), 24));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.System.Collections.ICollection.get_IsSynchronized
bool UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_ICollection_get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::System.Collections.ICollection.get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray), 32));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* UnityEngine::Animations::Rigging::WeightedTransformArray::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray), 31));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray..cctor
void UnityEngine::Animations::Rigging::WeightedTransformArray::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "WeightedTransformArray", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.Animations.Rigging.WeightedTransformArray/Enumerator
#include "UnityEngine/Animations/Rigging/WeightedTransformArray_Enumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.WeightedTransformArray m_Array
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::WeightedTransformArray& UnityEngine::Animations::Rigging::WeightedTransformArray::Enumerator::dyn_m_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::Enumerator::dyn_m_Array");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Array"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::WeightedTransformArray*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_Index
[[deprecated("Use field access instead!")]] int& UnityEngine::Animations::Rigging::WeightedTransformArray::Enumerator::dyn_m_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::Enumerator::dyn_m_Index");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray/Enumerator..ctor
UnityEngine::Animations::Rigging::WeightedTransformArray::Enumerator::Enumerator(ByRef<::UnityEngine::Animations::Rigging::WeightedTransformArray> array) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::Enumerator::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(array)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(array));
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray/Enumerator.MoveNext
bool UnityEngine::Animations::Rigging::WeightedTransformArray::Enumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::Enumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray::Enumerator), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray/Enumerator.Reset
void UnityEngine::Animations::Rigging::WeightedTransformArray::Enumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::Enumerator::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray::Enumerator), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray/Enumerator.System.IDisposable.Dispose
void UnityEngine::Animations::Rigging::WeightedTransformArray::Enumerator::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::Enumerator::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray::Enumerator), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray/Enumerator.get_Current
::UnityEngine::Animations::Rigging::WeightedTransform UnityEngine::Animations::Rigging::WeightedTransformArray::Enumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::Enumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray::Enumerator), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::WeightedTransform, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.WeightedTransformArray/Enumerator.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::Animations::Rigging::WeightedTransformArray::Enumerator::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::WeightedTransformArray::Enumerator::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::UnityEngine::Animations::Rigging::WeightedTransformArray::Enumerator), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.SyncSceneToStreamAttribute
#include "UnityEngine/Animations/Rigging/SyncSceneToStreamAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.PropertyType
#include "UnityEngine/Animations/Rigging/PropertyType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.PropertyType Bool
::UnityEngine::Animations::Rigging::PropertyType UnityEngine::Animations::Rigging::PropertyType::_get_Bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::PropertyType::_get_Bool");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::PropertyType>("UnityEngine.Animations.Rigging", "PropertyType", "Bool"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.PropertyType Bool
void UnityEngine::Animations::Rigging::PropertyType::_set_Bool(::UnityEngine::Animations::Rigging::PropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::PropertyType::_set_Bool");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "PropertyType", "Bool", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.PropertyType Int
::UnityEngine::Animations::Rigging::PropertyType UnityEngine::Animations::Rigging::PropertyType::_get_Int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::PropertyType::_get_Int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::PropertyType>("UnityEngine.Animations.Rigging", "PropertyType", "Int"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.PropertyType Int
void UnityEngine::Animations::Rigging::PropertyType::_set_Int(::UnityEngine::Animations::Rigging::PropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::PropertyType::_set_Int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "PropertyType", "Int", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.Animations.Rigging.PropertyType Float
::UnityEngine::Animations::Rigging::PropertyType UnityEngine::Animations::Rigging::PropertyType::_get_Float() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::PropertyType::_get_Float");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::PropertyType>("UnityEngine.Animations.Rigging", "PropertyType", "Float"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.Animations.Rigging.PropertyType Float
void UnityEngine::Animations::Rigging::PropertyType::_set_Float(::UnityEngine::Animations::Rigging::PropertyType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::PropertyType::_set_Float");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "PropertyType", "Float", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& UnityEngine::Animations::Rigging::PropertyType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::PropertyType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.RigProperties
#include "UnityEngine/Animations/Rigging/RigProperties.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String s_Weight
::StringW UnityEngine::Animations::Rigging::RigProperties::_get_s_Weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigProperties::_get_s_Weight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine.Animations.Rigging", "RigProperties", "s_Weight"));
}
// Autogenerated static field setter
// Set static field: static public System.String s_Weight
void UnityEngine::Animations::Rigging::RigProperties::_set_s_Weight(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigProperties::_set_s_Weight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "RigProperties", "s_Weight", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Component component
[[deprecated("Use field access instead!")]] ::UnityEngine::Component*& UnityEngine::Animations::Rigging::RigProperties::dyn_component() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigProperties::dyn_component");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "component"))->offset;
  return *reinterpret_cast<::UnityEngine::Component**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigProperties..cctor
void UnityEngine::Animations::Rigging::RigProperties::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigProperties::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "RigProperties", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.ConstraintProperties
#include "UnityEngine/Animations/Rigging/ConstraintProperties.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String s_Weight
::StringW UnityEngine::Animations::Rigging::ConstraintProperties::_get_s_Weight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ConstraintProperties::_get_s_Weight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine.Animations.Rigging", "ConstraintProperties", "s_Weight"));
}
// Autogenerated static field setter
// Set static field: static public System.String s_Weight
void UnityEngine::Animations::Rigging::ConstraintProperties::_set_s_Weight(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ConstraintProperties::_set_s_Weight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "ConstraintProperties", "s_Weight", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Component component
[[deprecated("Use field access instead!")]] ::UnityEngine::Component*& UnityEngine::Animations::Rigging::ConstraintProperties::dyn_component() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ConstraintProperties::dyn_component");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "component"))->offset;
  return *reinterpret_cast<::UnityEngine::Component**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Animations.Rigging.Property[] properties
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Animations::Rigging::Property>& UnityEngine::Animations::Rigging::ConstraintProperties::dyn_properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ConstraintProperties::dyn_properties");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "properties"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Animations::Rigging::Property>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.ConstraintProperties..cctor
void UnityEngine::Animations::Rigging::ConstraintProperties::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::ConstraintProperties::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "ConstraintProperties", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.PropertyUtils
#include "UnityEngine/Animations/Rigging/PropertyUtils.hpp"
// Including type: UnityEngine.Component
#include "UnityEngine/Component.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.Animations.Rigging.PropertyUtils.ConstructConstraintDataPropertyName
::StringW UnityEngine::Animations::Rigging::PropertyUtils::ConstructConstraintDataPropertyName(::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::PropertyUtils::ConstructConstraintDataPropertyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "PropertyUtils", "ConstructConstraintDataPropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, property);
}
// Autogenerated method: UnityEngine.Animations.Rigging.PropertyUtils.ConstructCustomPropertyName
::StringW UnityEngine::Animations::Rigging::PropertyUtils::ConstructCustomPropertyName(::UnityEngine::Component* component, ::StringW property) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::PropertyUtils::ConstructCustomPropertyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "PropertyUtils", "ConstructCustomPropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(component), ::il2cpp_utils::ExtractType(property)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, component, property);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.RigEffectorData
#include "UnityEngine/Animations/Rigging/RigEffectorData.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform m_Transform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& UnityEngine::Animations::Rigging::RigEffectorData::dyn_m_Transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigEffectorData::dyn_m_Transform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Transform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Animations.Rigging.RigEffectorData/Style m_Style
[[deprecated("Use field access instead!")]] ::UnityEngine::Animations::Rigging::RigEffectorData::Style& UnityEngine::Animations::Rigging::RigEffectorData::dyn_m_Style() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigEffectorData::dyn_m_Style");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Style"))->offset;
  return *reinterpret_cast<::UnityEngine::Animations::Rigging::RigEffectorData::Style*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_Visible
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::RigEffectorData::dyn_m_Visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigEffectorData::dyn_m_Visible");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Visible"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigEffectorData.get_defaultStyle
::UnityEngine::Animations::Rigging::RigEffectorData::Style UnityEngine::Animations::Rigging::RigEffectorData::get_defaultStyle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigEffectorData::get_defaultStyle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "RigEffectorData", "get_defaultStyle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::RigEffectorData::Style, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigEffectorData.get_transform
::UnityEngine::Transform* UnityEngine::Animations::Rigging::RigEffectorData::get_transform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigEffectorData::get_transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigEffectorData.get_style
::UnityEngine::Animations::Rigging::RigEffectorData::Style UnityEngine::Animations::Rigging::RigEffectorData::get_style() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigEffectorData::get_style");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_style", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::RigEffectorData::Style, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigEffectorData.get_visible
bool UnityEngine::Animations::Rigging::RigEffectorData::get_visible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigEffectorData::get_visible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_visible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigEffectorData.set_visible
void UnityEngine::Animations::Rigging::RigEffectorData::set_visible(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigEffectorData::set_visible");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_visible", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.RigEffectorData.Initialize
void UnityEngine::Animations::Rigging::RigEffectorData::Initialize(::UnityEngine::Transform* transform, ::UnityEngine::Animations::Rigging::RigEffectorData::Style style) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::RigEffectorData::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform), ::il2cpp_utils::ExtractType(style)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, transform, style);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.AffineTransform
#include "UnityEngine/Animations/Rigging/AffineTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xADBA48
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.Animations.Rigging.AffineTransform <identity>k__BackingField
::UnityEngine::Animations::Rigging::AffineTransform UnityEngine::Animations::Rigging::AffineTransform::_get_$identity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AffineTransform::_get_$identity$k__BackingField");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::UnityEngine::Animations::Rigging::AffineTransform>("UnityEngine.Animations.Rigging", "AffineTransform", "<identity>k__BackingField")));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.Animations.Rigging.AffineTransform <identity>k__BackingField
void UnityEngine::Animations::Rigging::AffineTransform::_set_$identity$k__BackingField(::UnityEngine::Animations::Rigging::AffineTransform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AffineTransform::_set_$identity$k__BackingField");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "AffineTransform", "<identity>k__BackingField", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 translation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& UnityEngine::Animations::Rigging::AffineTransform::dyn_translation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AffineTransform::dyn_translation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "translation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion rotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& UnityEngine::Animations::Rigging::AffineTransform::dyn_rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AffineTransform::dyn_rotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.AffineTransform..ctor
// ABORTED elsewhere.  UnityEngine::Animations::Rigging::AffineTransform::AffineTransform(::UnityEngine::Vector3 t, ::UnityEngine::Quaternion r)
// Autogenerated method: UnityEngine.Animations.Rigging.AffineTransform.Set
void UnityEngine::Animations::Rigging::AffineTransform::Set(::UnityEngine::Vector3 t, ::UnityEngine::Quaternion r) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AffineTransform::Set");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Set", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t), ::il2cpp_utils::ExtractType(r)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, t, r);
}
// Autogenerated method: UnityEngine.Animations.Rigging.AffineTransform.Transform
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::AffineTransform::Transform(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AffineTransform::Transform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Transform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, p);
}
// Autogenerated method: UnityEngine.Animations.Rigging.AffineTransform.InverseTransform
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::AffineTransform::InverseTransform(::UnityEngine::Vector3 p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AffineTransform::InverseTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InverseTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, p);
}
// Autogenerated method: UnityEngine.Animations.Rigging.AffineTransform.Inverse
::UnityEngine::Animations::Rigging::AffineTransform UnityEngine::Animations::Rigging::AffineTransform::Inverse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AffineTransform::Inverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "Inverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::AffineTransform, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.AffineTransform.InverseMul
::UnityEngine::Animations::Rigging::AffineTransform UnityEngine::Animations::Rigging::AffineTransform::InverseMul(::UnityEngine::Animations::Rigging::AffineTransform transform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AffineTransform::InverseMul");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "InverseMul", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transform)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::AffineTransform, false>(this, ___internal__method, transform);
}
// Autogenerated method: UnityEngine.Animations.Rigging.AffineTransform.get_identity
::UnityEngine::Animations::Rigging::AffineTransform UnityEngine::Animations::Rigging::AffineTransform::get_identity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AffineTransform::get_identity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "AffineTransform", "get_identity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::AffineTransform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.AffineTransform..cctor
void UnityEngine::Animations::Rigging::AffineTransform::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AffineTransform::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "AffineTransform", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: UnityEngine.Animations.Rigging.AffineTransform.op_Multiply
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::operator*(const ::UnityEngine::Animations::Rigging::AffineTransform& lhs, const ::UnityEngine::Vector3& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AffineTransform::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "AffineTransform", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Animations.Rigging.AffineTransform.op_Multiply
::UnityEngine::Animations::Rigging::AffineTransform UnityEngine::Animations::Rigging::operator*(const ::UnityEngine::Animations::Rigging::AffineTransform& lhs, const ::UnityEngine::Animations::Rigging::AffineTransform& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AffineTransform::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "AffineTransform", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::AffineTransform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Animations.Rigging.AffineTransform.op_Multiply
::UnityEngine::Animations::Rigging::AffineTransform UnityEngine::Animations::Rigging::operator*(const ::UnityEngine::Quaternion& lhs, const ::UnityEngine::Animations::Rigging::AffineTransform& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AffineTransform::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "AffineTransform", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::AffineTransform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated method: UnityEngine.Animations.Rigging.AffineTransform.op_Multiply
::UnityEngine::Animations::Rigging::AffineTransform UnityEngine::Animations::Rigging::operator*(const ::UnityEngine::Animations::Rigging::AffineTransform& lhs, const ::UnityEngine::Quaternion& rhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AffineTransform::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "AffineTransform", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lhs), ::il2cpp_utils::ExtractType(rhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Animations::Rigging::AffineTransform, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, lhs, rhs);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.AnimationRuntimeUtils
#include "UnityEngine/Animations/Rigging/AnimationRuntimeUtils.hpp"
// Including type: UnityEngine.Animations.AnimationStream
#include "UnityEngine/Animations/AnimationStream.hpp"
// Including type: UnityEngine.Animations.Rigging.ReadWriteTransformHandle
#include "UnityEngine/Animations/Rigging/ReadWriteTransformHandle.hpp"
// Including type: UnityEngine.Animations.Rigging.ReadOnlyTransformHandle
#include "UnityEngine/Animations/Rigging/ReadOnlyTransformHandle.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
// Including type: UnityEngine.Animations.Rigging.AffineTransform
#include "UnityEngine/Animations/Rigging/AffineTransform.hpp"
// Including type: Unity.Collections.NativeArray`1
#include "Unity/Collections/NativeArray_1.hpp"
// Including type: UnityEngine.Animations.Rigging.AnimationJobCache
#include "UnityEngine/Animations/Rigging/AnimationJobCache.hpp"
// Including type: UnityEngine.Animations.Rigging.CacheIndex
#include "UnityEngine/Animations/Rigging/CacheIndex.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single k_SqrEpsilon
float UnityEngine::Animations::Rigging::AnimationRuntimeUtils::_get_k_SqrEpsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AnimationRuntimeUtils::_get_k_SqrEpsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Animations.Rigging", "AnimationRuntimeUtils", "k_SqrEpsilon"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_SqrEpsilon
void UnityEngine::Animations::Rigging::AnimationRuntimeUtils::_set_k_SqrEpsilon(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AnimationRuntimeUtils::_set_k_SqrEpsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "AnimationRuntimeUtils", "k_SqrEpsilon", value));
}
// Autogenerated method: UnityEngine.Animations.Rigging.AnimationRuntimeUtils.SolveTwoBoneIK
void UnityEngine::Animations::Rigging::AnimationRuntimeUtils::SolveTwoBoneIK(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Animations::Rigging::ReadWriteTransformHandle root, ::UnityEngine::Animations::Rigging::ReadWriteTransformHandle mid, ::UnityEngine::Animations::Rigging::ReadWriteTransformHandle tip, ::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle target, ::UnityEngine::Animations::Rigging::ReadOnlyTransformHandle hint, float posWeight, float rotWeight, float hintWeight, ::UnityEngine::Vector2 limbLengths, ::UnityEngine::Animations::Rigging::AffineTransform targetOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AnimationRuntimeUtils::SolveTwoBoneIK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "AnimationRuntimeUtils", "SolveTwoBoneIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(root), ::il2cpp_utils::ExtractType(mid), ::il2cpp_utils::ExtractType(tip), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(hint), ::il2cpp_utils::ExtractType(posWeight), ::il2cpp_utils::ExtractType(rotWeight), ::il2cpp_utils::ExtractType(hintWeight), ::il2cpp_utils::ExtractType(limbLengths), ::il2cpp_utils::ExtractType(targetOffset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, root, mid, tip, target, hint, posWeight, rotWeight, hintWeight, limbLengths, targetOffset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.AnimationRuntimeUtils.TriangleAngle
float UnityEngine::Animations::Rigging::AnimationRuntimeUtils::TriangleAngle(float aLen, float aLen1, float aLen2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AnimationRuntimeUtils::TriangleAngle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "AnimationRuntimeUtils", "TriangleAngle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aLen), ::il2cpp_utils::ExtractType(aLen1), ::il2cpp_utils::ExtractType(aLen2)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, aLen, aLen1, aLen2);
}
// Autogenerated method: UnityEngine.Animations.Rigging.AnimationRuntimeUtils.SolveFABRIK
bool UnityEngine::Animations::Rigging::AnimationRuntimeUtils::SolveFABRIK(ByRef<::Unity::Collections::NativeArray_1<::UnityEngine::Vector3>> linkPositions, ByRef<::Unity::Collections::NativeArray_1<float>> linkLengths, ::UnityEngine::Vector3 target, float tolerance, float maxReach, int maxIterations) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AnimationRuntimeUtils::SolveFABRIK");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "AnimationRuntimeUtils", "SolveFABRIK", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(linkPositions), ::il2cpp_utils::ExtractType(linkLengths), ::il2cpp_utils::ExtractType(target), ::il2cpp_utils::ExtractType(tolerance), ::il2cpp_utils::ExtractType(maxReach), ::il2cpp_utils::ExtractType(maxIterations)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(linkPositions), byref(linkLengths), target, tolerance, maxReach, maxIterations);
}
// Autogenerated method: UnityEngine.Animations.Rigging.AnimationRuntimeUtils.SqrDistance
float UnityEngine::Animations::Rigging::AnimationRuntimeUtils::SqrDistance(::UnityEngine::Vector3 p0, ::UnityEngine::Vector3 p1) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AnimationRuntimeUtils::SqrDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "AnimationRuntimeUtils", "SqrDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p0), ::il2cpp_utils::ExtractType(p1)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, p0, p1);
}
// Autogenerated method: UnityEngine.Animations.Rigging.AnimationRuntimeUtils.Square
float UnityEngine::Animations::Rigging::AnimationRuntimeUtils::Square(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AnimationRuntimeUtils::Square");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "AnimationRuntimeUtils", "Square", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: UnityEngine.Animations.Rigging.AnimationRuntimeUtils.Lerp
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::AnimationRuntimeUtils::Lerp(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, ::UnityEngine::Vector3 t) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AnimationRuntimeUtils::Lerp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "AnimationRuntimeUtils", "Lerp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(t)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, t);
}
// Autogenerated method: UnityEngine.Animations.Rigging.AnimationRuntimeUtils.Select
float UnityEngine::Animations::Rigging::AnimationRuntimeUtils::Select(float a, float b, float c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AnimationRuntimeUtils::Select");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "AnimationRuntimeUtils", "Select", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c);
}
// Autogenerated method: UnityEngine.Animations.Rigging.AnimationRuntimeUtils.Select
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::AnimationRuntimeUtils::Select(::UnityEngine::Vector3 a, ::UnityEngine::Vector3 b, ::UnityEngine::Vector3 c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AnimationRuntimeUtils::Select");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "AnimationRuntimeUtils", "Select", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b), ::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b, c);
}
// Autogenerated method: UnityEngine.Animations.Rigging.AnimationRuntimeUtils.ProjectOnPlane
::UnityEngine::Vector3 UnityEngine::Animations::Rigging::AnimationRuntimeUtils::ProjectOnPlane(::UnityEngine::Vector3 vector, ::UnityEngine::Vector3 planeNormal) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AnimationRuntimeUtils::ProjectOnPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "AnimationRuntimeUtils", "ProjectOnPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vector), ::il2cpp_utils::ExtractType(planeNormal)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vector, planeNormal);
}
// Autogenerated method: UnityEngine.Animations.Rigging.AnimationRuntimeUtils.Sum
float UnityEngine::Animations::Rigging::AnimationRuntimeUtils::Sum(::UnityEngine::Animations::Rigging::AnimationJobCache cache, ::UnityEngine::Animations::Rigging::CacheIndex index, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AnimationRuntimeUtils::Sum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "AnimationRuntimeUtils", "Sum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cache), ::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(count)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, cache, index, count);
}
// Autogenerated method: UnityEngine.Animations.Rigging.AnimationRuntimeUtils.Sum
float UnityEngine::Animations::Rigging::AnimationRuntimeUtils::Sum(::Unity::Collections::NativeArray_1<float> floatBuffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AnimationRuntimeUtils::Sum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "AnimationRuntimeUtils", "Sum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(floatBuffer)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, floatBuffer);
}
// Autogenerated method: UnityEngine.Animations.Rigging.AnimationRuntimeUtils.PassThrough
void UnityEngine::Animations::Rigging::AnimationRuntimeUtils::PassThrough(::UnityEngine::Animations::AnimationStream stream, ::UnityEngine::Animations::Rigging::ReadWriteTransformHandle handle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::AnimationRuntimeUtils::PassThrough");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "AnimationRuntimeUtils", "PassThrough", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream), ::il2cpp_utils::ExtractType(handle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, stream, handle);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.BoneRenderer
#include "UnityEngine/Animations/Rigging/BoneRenderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.QuaternionExt
#include "UnityEngine/Animations/Rigging/QuaternionExt.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Single k_FloatMin
float UnityEngine::Animations::Rigging::QuaternionExt::_get_k_FloatMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::QuaternionExt::_get_k_FloatMin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<float>("UnityEngine.Animations.Rigging", "QuaternionExt", "k_FloatMin"));
}
// Autogenerated static field setter
// Set static field: static private System.Single k_FloatMin
void UnityEngine::Animations::Rigging::QuaternionExt::_set_k_FloatMin(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::QuaternionExt::_set_k_FloatMin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "QuaternionExt", "k_FloatMin", value));
}
// Autogenerated static field getter
// Get static field: static public readonly UnityEngine.Quaternion zero
::UnityEngine::Quaternion UnityEngine::Animations::Rigging::QuaternionExt::_get_zero() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::QuaternionExt::_get_zero");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::Quaternion>("UnityEngine.Animations.Rigging", "QuaternionExt", "zero"));
}
// Autogenerated static field setter
// Set static field: static public readonly UnityEngine.Quaternion zero
void UnityEngine::Animations::Rigging::QuaternionExt::_set_zero(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::QuaternionExt::_set_zero");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.Animations.Rigging", "QuaternionExt", "zero", value));
}
// Autogenerated method: UnityEngine.Animations.Rigging.QuaternionExt.FromToRotation
::UnityEngine::Quaternion UnityEngine::Animations::Rigging::QuaternionExt::FromToRotation(::UnityEngine::Vector3 from, ::UnityEngine::Vector3 to) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::QuaternionExt::FromToRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "QuaternionExt", "FromToRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(from), ::il2cpp_utils::ExtractType(to)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, from, to);
}
// Autogenerated method: UnityEngine.Animations.Rigging.QuaternionExt.Add
::UnityEngine::Quaternion UnityEngine::Animations::Rigging::QuaternionExt::Add(::UnityEngine::Quaternion rhs, ::UnityEngine::Quaternion lhs) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::QuaternionExt::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "QuaternionExt", "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rhs), ::il2cpp_utils::ExtractType(lhs)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rhs, lhs);
}
// Autogenerated method: UnityEngine.Animations.Rigging.QuaternionExt.Scale
::UnityEngine::Quaternion UnityEngine::Animations::Rigging::QuaternionExt::Scale(::UnityEngine::Quaternion q, float scale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::QuaternionExt::Scale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "QuaternionExt", "Scale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q), ::il2cpp_utils::ExtractType(scale)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q, scale);
}
// Autogenerated method: UnityEngine.Animations.Rigging.QuaternionExt.NormalizeSafe
::UnityEngine::Quaternion UnityEngine::Animations::Rigging::QuaternionExt::NormalizeSafe(::UnityEngine::Quaternion q) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::QuaternionExt::NormalizeSafe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "QuaternionExt", "NormalizeSafe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(q)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, q);
}
// Autogenerated method: UnityEngine.Animations.Rigging.QuaternionExt..cctor
void UnityEngine::Animations::Rigging::QuaternionExt::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::QuaternionExt::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.Animations.Rigging", "QuaternionExt", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.Animations.Rigging.Vector3Bool
#include "UnityEngine/Animations/Rigging/Vector3Bool.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean x
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::Vector3Bool::dyn_x() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector3Bool::dyn_x");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "x"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean y
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::Vector3Bool::dyn_y() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector3Bool::dyn_y");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "y"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean z
[[deprecated("Use field access instead!")]] bool& UnityEngine::Animations::Rigging::Vector3Bool::dyn_z() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector3Bool::dyn_z");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "z"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Vector3Bool..ctor
UnityEngine::Animations::Rigging::Vector3Bool::Vector3Bool(bool val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::Animations::Rigging::Vector3Bool::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(val)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: UnityEngine.Animations.Rigging.Vector3Bool..ctor
// ABORTED elsewhere.  UnityEngine::Animations::Rigging::Vector3Bool::Vector3Bool(bool x, bool y, bool z)
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.Burst.BurstCompileAttribute
#include "Unity/Burst/BurstCompileAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UISupport
#include "GlobalNamespace/UISupport.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UISupport.Initialize
void GlobalNamespace::UISupport::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UISupport::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "UISupport", "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.XR.OpenVR.OpenVRHMD
#include "Unity/XR/OpenVR/OpenVRHMD.hpp"
// Including type: UnityEngine.InputSystem.Controls.Vector3Control
#include "UnityEngine/InputSystem/Controls/Vector3Control.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <deviceVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::OpenVR::OpenVRHMD::dyn_$deviceVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRHMD::dyn_$deviceVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<deviceVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <deviceAngularVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::OpenVR::OpenVRHMD::dyn_$deviceAngularVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRHMD::dyn_$deviceAngularVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<deviceAngularVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <leftEyeVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::OpenVR::OpenVRHMD::dyn_$leftEyeVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRHMD::dyn_$leftEyeVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<leftEyeVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <leftEyeAngularVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::OpenVR::OpenVRHMD::dyn_$leftEyeAngularVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRHMD::dyn_$leftEyeAngularVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<leftEyeAngularVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <rightEyeVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::OpenVR::OpenVRHMD::dyn_$rightEyeVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRHMD::dyn_$rightEyeVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rightEyeVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <rightEyeAngularVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::OpenVR::OpenVRHMD::dyn_$rightEyeAngularVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRHMD::dyn_$rightEyeAngularVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rightEyeAngularVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <centerEyeVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::OpenVR::OpenVRHMD::dyn_$centerEyeVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRHMD::dyn_$centerEyeVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<centerEyeVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <centerEyeAngularVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::OpenVR::OpenVRHMD::dyn_$centerEyeAngularVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRHMD::dyn_$centerEyeAngularVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<centerEyeAngularVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRHMD.get_deviceVelocity
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::OpenVR::OpenVRHMD::get_deviceVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRHMD::get_deviceVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRHMD.set_deviceVelocity
void Unity::XR::OpenVR::OpenVRHMD::set_deviceVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRHMD::set_deviceVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRHMD.get_deviceAngularVelocity
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::OpenVR::OpenVRHMD::get_deviceAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRHMD::get_deviceAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRHMD.set_deviceAngularVelocity
void Unity::XR::OpenVR::OpenVRHMD::set_deviceAngularVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRHMD::set_deviceAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRHMD.get_leftEyeVelocity
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::OpenVR::OpenVRHMD::get_leftEyeVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRHMD::get_leftEyeVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftEyeVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRHMD.set_leftEyeVelocity
void Unity::XR::OpenVR::OpenVRHMD::set_leftEyeVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRHMD::set_leftEyeVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftEyeVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRHMD.get_leftEyeAngularVelocity
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::OpenVR::OpenVRHMD::get_leftEyeAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRHMD::get_leftEyeAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftEyeAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRHMD.set_leftEyeAngularVelocity
void Unity::XR::OpenVR::OpenVRHMD::set_leftEyeAngularVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRHMD::set_leftEyeAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftEyeAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRHMD.get_rightEyeVelocity
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::OpenVR::OpenVRHMD::get_rightEyeVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRHMD::get_rightEyeVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightEyeVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRHMD.set_rightEyeVelocity
void Unity::XR::OpenVR::OpenVRHMD::set_rightEyeVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRHMD::set_rightEyeVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rightEyeVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRHMD.get_rightEyeAngularVelocity
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::OpenVR::OpenVRHMD::get_rightEyeAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRHMD::get_rightEyeAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightEyeAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRHMD.set_rightEyeAngularVelocity
void Unity::XR::OpenVR::OpenVRHMD::set_rightEyeAngularVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRHMD::set_rightEyeAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rightEyeAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRHMD.get_centerEyeVelocity
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::OpenVR::OpenVRHMD::get_centerEyeVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRHMD::get_centerEyeVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_centerEyeVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRHMD.set_centerEyeVelocity
void Unity::XR::OpenVR::OpenVRHMD::set_centerEyeVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRHMD::set_centerEyeVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_centerEyeVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRHMD.get_centerEyeAngularVelocity
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::OpenVR::OpenVRHMD::get_centerEyeAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRHMD::get_centerEyeAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_centerEyeAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRHMD.set_centerEyeAngularVelocity
void Unity::XR::OpenVR::OpenVRHMD::set_centerEyeAngularVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRHMD::set_centerEyeAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_centerEyeAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRHMD.FinishSetup
void Unity::XR::OpenVR::OpenVRHMD::FinishSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRHMD::FinishSetup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::XR::XRHMD*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.XR.OpenVR.OpenVRControllerWMR
#include "Unity/XR/OpenVR/OpenVRControllerWMR.hpp"
// Including type: UnityEngine.InputSystem.Controls.Vector3Control
#include "UnityEngine/InputSystem/Controls/Vector3Control.hpp"
// Including type: UnityEngine.InputSystem.Controls.ButtonControl
#include "UnityEngine/InputSystem/Controls/ButtonControl.hpp"
// Including type: UnityEngine.InputSystem.Controls.AxisControl
#include "UnityEngine/InputSystem/Controls/AxisControl.hpp"
// Including type: UnityEngine.InputSystem.Controls.Vector2Control
#include "UnityEngine/InputSystem/Controls/Vector2Control.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <deviceVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::OpenVR::OpenVRControllerWMR::dyn_$deviceVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::dyn_$deviceVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<deviceVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <deviceAngularVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::OpenVR::OpenVRControllerWMR::dyn_$deviceAngularVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::dyn_$deviceAngularVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<deviceAngularVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <touchpadClick>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::OpenVR::OpenVRControllerWMR::dyn_$touchpadClick$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::dyn_$touchpadClick$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<touchpadClick>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <touchpadTouch>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::OpenVR::OpenVRControllerWMR::dyn_$touchpadTouch$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::dyn_$touchpadTouch$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<touchpadTouch>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <gripPressed>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::OpenVR::OpenVRControllerWMR::dyn_$gripPressed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::dyn_$gripPressed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<gripPressed>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <triggerPressed>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::OpenVR::OpenVRControllerWMR::dyn_$triggerPressed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::dyn_$triggerPressed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<triggerPressed>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <menu>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::OpenVR::OpenVRControllerWMR::dyn_$menu$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::dyn_$menu$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<menu>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.AxisControl <trigger>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::AxisControl*& Unity::XR::OpenVR::OpenVRControllerWMR::dyn_$trigger$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::dyn_$trigger$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<trigger>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::AxisControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.AxisControl <grip>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::AxisControl*& Unity::XR::OpenVR::OpenVRControllerWMR::dyn_$grip$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::dyn_$grip$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<grip>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::AxisControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector2Control <touchpad>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector2Control*& Unity::XR::OpenVR::OpenVRControllerWMR::dyn_$touchpad$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::dyn_$touchpad$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<touchpad>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector2Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector2Control <joystick>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector2Control*& Unity::XR::OpenVR::OpenVRControllerWMR::dyn_$joystick$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::dyn_$joystick$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<joystick>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector2Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRControllerWMR.get_deviceVelocity
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::OpenVR::OpenVRControllerWMR::get_deviceVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::get_deviceVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRControllerWMR.set_deviceVelocity
void Unity::XR::OpenVR::OpenVRControllerWMR::set_deviceVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::set_deviceVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRControllerWMR.get_deviceAngularVelocity
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::OpenVR::OpenVRControllerWMR::get_deviceAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::get_deviceAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRControllerWMR.set_deviceAngularVelocity
void Unity::XR::OpenVR::OpenVRControllerWMR::set_deviceAngularVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::set_deviceAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRControllerWMR.get_touchpadClick
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::OpenVR::OpenVRControllerWMR::get_touchpadClick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::get_touchpadClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_touchpadClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRControllerWMR.set_touchpadClick
void Unity::XR::OpenVR::OpenVRControllerWMR::set_touchpadClick(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::set_touchpadClick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_touchpadClick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRControllerWMR.get_touchpadTouch
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::OpenVR::OpenVRControllerWMR::get_touchpadTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::get_touchpadTouch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_touchpadTouch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRControllerWMR.set_touchpadTouch
void Unity::XR::OpenVR::OpenVRControllerWMR::set_touchpadTouch(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::set_touchpadTouch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_touchpadTouch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRControllerWMR.get_gripPressed
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::OpenVR::OpenVRControllerWMR::get_gripPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::get_gripPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gripPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRControllerWMR.set_gripPressed
void Unity::XR::OpenVR::OpenVRControllerWMR::set_gripPressed(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::set_gripPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gripPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRControllerWMR.get_triggerPressed
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::OpenVR::OpenVRControllerWMR::get_triggerPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::get_triggerPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_triggerPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRControllerWMR.set_triggerPressed
void Unity::XR::OpenVR::OpenVRControllerWMR::set_triggerPressed(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::set_triggerPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_triggerPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRControllerWMR.get_menu
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::OpenVR::OpenVRControllerWMR::get_menu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::get_menu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_menu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRControllerWMR.set_menu
void Unity::XR::OpenVR::OpenVRControllerWMR::set_menu(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::set_menu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_menu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRControllerWMR.get_trigger
::UnityEngine::InputSystem::Controls::AxisControl* Unity::XR::OpenVR::OpenVRControllerWMR::get_trigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::get_trigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::AxisControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRControllerWMR.set_trigger
void Unity::XR::OpenVR::OpenVRControllerWMR::set_trigger(::UnityEngine::InputSystem::Controls::AxisControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::set_trigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRControllerWMR.get_grip
::UnityEngine::InputSystem::Controls::AxisControl* Unity::XR::OpenVR::OpenVRControllerWMR::get_grip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::get_grip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_grip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::AxisControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRControllerWMR.set_grip
void Unity::XR::OpenVR::OpenVRControllerWMR::set_grip(::UnityEngine::InputSystem::Controls::AxisControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::set_grip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_grip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRControllerWMR.get_touchpad
::UnityEngine::InputSystem::Controls::Vector2Control* Unity::XR::OpenVR::OpenVRControllerWMR::get_touchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::get_touchpad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_touchpad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector2Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRControllerWMR.set_touchpad
void Unity::XR::OpenVR::OpenVRControllerWMR::set_touchpad(::UnityEngine::InputSystem::Controls::Vector2Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::set_touchpad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_touchpad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRControllerWMR.get_joystick
::UnityEngine::InputSystem::Controls::Vector2Control* Unity::XR::OpenVR::OpenVRControllerWMR::get_joystick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::get_joystick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_joystick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector2Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRControllerWMR.set_joystick
void Unity::XR::OpenVR::OpenVRControllerWMR::set_joystick(::UnityEngine::InputSystem::Controls::Vector2Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::set_joystick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_joystick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVRControllerWMR.FinishSetup
void Unity::XR::OpenVR::OpenVRControllerWMR::FinishSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVRControllerWMR::FinishSetup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::XR::XRController*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.XR.OpenVR.ViveWand
#include "Unity/XR/OpenVR/ViveWand.hpp"
// Including type: UnityEngine.InputSystem.Controls.AxisControl
#include "UnityEngine/InputSystem/Controls/AxisControl.hpp"
// Including type: UnityEngine.InputSystem.Controls.ButtonControl
#include "UnityEngine/InputSystem/Controls/ButtonControl.hpp"
// Including type: UnityEngine.InputSystem.Controls.Vector2Control
#include "UnityEngine/InputSystem/Controls/Vector2Control.hpp"
// Including type: UnityEngine.InputSystem.Controls.Vector3Control
#include "UnityEngine/InputSystem/Controls/Vector3Control.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.AxisControl <grip>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::AxisControl*& Unity::XR::OpenVR::ViveWand::dyn_$grip$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::dyn_$grip$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<grip>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::AxisControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <gripPressed>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::OpenVR::ViveWand::dyn_$gripPressed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::dyn_$gripPressed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<gripPressed>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <primary>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::OpenVR::ViveWand::dyn_$primary$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::dyn_$primary$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<primary>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <trackpadPressed>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::OpenVR::ViveWand::dyn_$trackpadPressed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::dyn_$trackpadPressed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<trackpadPressed>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <trackpadTouched>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::OpenVR::ViveWand::dyn_$trackpadTouched$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::dyn_$trackpadTouched$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<trackpadTouched>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector2Control <trackpad>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector2Control*& Unity::XR::OpenVR::ViveWand::dyn_$trackpad$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::dyn_$trackpad$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<trackpad>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector2Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.AxisControl <trigger>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::AxisControl*& Unity::XR::OpenVR::ViveWand::dyn_$trigger$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::dyn_$trigger$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<trigger>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::AxisControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <triggerPressed>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::OpenVR::ViveWand::dyn_$triggerPressed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::dyn_$triggerPressed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<triggerPressed>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <deviceVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::OpenVR::ViveWand::dyn_$deviceVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::dyn_$deviceVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<deviceVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <deviceAngularVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::OpenVR::ViveWand::dyn_$deviceAngularVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::dyn_$deviceAngularVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<deviceAngularVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Unity.XR.OpenVR.ViveWand.get_grip
::UnityEngine::InputSystem::Controls::AxisControl* Unity::XR::OpenVR::ViveWand::get_grip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::get_grip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_grip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::AxisControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.ViveWand.set_grip
void Unity::XR::OpenVR::ViveWand::set_grip(::UnityEngine::InputSystem::Controls::AxisControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::set_grip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_grip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.ViveWand.get_gripPressed
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::OpenVR::ViveWand::get_gripPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::get_gripPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gripPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.ViveWand.set_gripPressed
void Unity::XR::OpenVR::ViveWand::set_gripPressed(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::set_gripPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gripPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.ViveWand.get_primary
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::OpenVR::ViveWand::get_primary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::get_primary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_primary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.ViveWand.set_primary
void Unity::XR::OpenVR::ViveWand::set_primary(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::set_primary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_primary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.ViveWand.get_trackpadPressed
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::OpenVR::ViveWand::get_trackpadPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::get_trackpadPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackpadPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.ViveWand.set_trackpadPressed
void Unity::XR::OpenVR::ViveWand::set_trackpadPressed(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::set_trackpadPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackpadPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.ViveWand.get_trackpadTouched
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::OpenVR::ViveWand::get_trackpadTouched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::get_trackpadTouched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackpadTouched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.ViveWand.set_trackpadTouched
void Unity::XR::OpenVR::ViveWand::set_trackpadTouched(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::set_trackpadTouched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackpadTouched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.ViveWand.get_trackpad
::UnityEngine::InputSystem::Controls::Vector2Control* Unity::XR::OpenVR::ViveWand::get_trackpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::get_trackpad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackpad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector2Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.ViveWand.set_trackpad
void Unity::XR::OpenVR::ViveWand::set_trackpad(::UnityEngine::InputSystem::Controls::Vector2Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::set_trackpad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackpad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.ViveWand.get_trigger
::UnityEngine::InputSystem::Controls::AxisControl* Unity::XR::OpenVR::ViveWand::get_trigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::get_trigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::AxisControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.ViveWand.set_trigger
void Unity::XR::OpenVR::ViveWand::set_trigger(::UnityEngine::InputSystem::Controls::AxisControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::set_trigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.ViveWand.get_triggerPressed
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::OpenVR::ViveWand::get_triggerPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::get_triggerPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_triggerPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.ViveWand.set_triggerPressed
void Unity::XR::OpenVR::ViveWand::set_triggerPressed(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::set_triggerPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_triggerPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.ViveWand.get_deviceVelocity
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::OpenVR::ViveWand::get_deviceVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::get_deviceVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.ViveWand.set_deviceVelocity
void Unity::XR::OpenVR::ViveWand::set_deviceVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::set_deviceVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.ViveWand.get_deviceAngularVelocity
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::OpenVR::ViveWand::get_deviceAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::get_deviceAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.ViveWand.set_deviceAngularVelocity
void Unity::XR::OpenVR::ViveWand::set_deviceAngularVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::set_deviceAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.ViveWand.FinishSetup
void Unity::XR::OpenVR::ViveWand::FinishSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveWand::FinishSetup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::XR::XRController*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.XR.OpenVR.ViveLighthouse
#include "Unity/XR/OpenVR/ViveLighthouse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.XR.OpenVR.ViveTracker
#include "Unity/XR/OpenVR/ViveTracker.hpp"
// Including type: UnityEngine.InputSystem.Controls.Vector3Control
#include "UnityEngine/InputSystem/Controls/Vector3Control.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <deviceVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::OpenVR::ViveTracker::dyn_$deviceVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveTracker::dyn_$deviceVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<deviceVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <deviceAngularVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::OpenVR::ViveTracker::dyn_$deviceAngularVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveTracker::dyn_$deviceAngularVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<deviceAngularVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Unity.XR.OpenVR.ViveTracker.get_deviceVelocity
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::OpenVR::ViveTracker::get_deviceVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveTracker::get_deviceVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.ViveTracker.set_deviceVelocity
void Unity::XR::OpenVR::ViveTracker::set_deviceVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveTracker::set_deviceVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.ViveTracker.get_deviceAngularVelocity
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::OpenVR::ViveTracker::get_deviceAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveTracker::get_deviceAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.ViveTracker.set_deviceAngularVelocity
void Unity::XR::OpenVR::ViveTracker::set_deviceAngularVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveTracker::set_deviceAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.ViveTracker.FinishSetup
void Unity::XR::OpenVR::ViveTracker::FinishSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::ViveTracker::FinishSetup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::TrackedDevice*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.XR.OpenVR.HandedViveTracker
#include "Unity/XR/OpenVR/HandedViveTracker.hpp"
// Including type: UnityEngine.InputSystem.Controls.AxisControl
#include "UnityEngine/InputSystem/Controls/AxisControl.hpp"
// Including type: UnityEngine.InputSystem.Controls.ButtonControl
#include "UnityEngine/InputSystem/Controls/ButtonControl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.AxisControl <grip>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::AxisControl*& Unity::XR::OpenVR::HandedViveTracker::dyn_$grip$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::HandedViveTracker::dyn_$grip$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<grip>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::AxisControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <gripPressed>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::OpenVR::HandedViveTracker::dyn_$gripPressed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::HandedViveTracker::dyn_$gripPressed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<gripPressed>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <primary>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::OpenVR::HandedViveTracker::dyn_$primary$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::HandedViveTracker::dyn_$primary$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<primary>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <trackpadPressed>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::OpenVR::HandedViveTracker::dyn_$trackpadPressed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::HandedViveTracker::dyn_$trackpadPressed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<trackpadPressed>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <triggerPressed>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::OpenVR::HandedViveTracker::dyn_$triggerPressed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::HandedViveTracker::dyn_$triggerPressed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<triggerPressed>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Unity.XR.OpenVR.HandedViveTracker.get_grip
::UnityEngine::InputSystem::Controls::AxisControl* Unity::XR::OpenVR::HandedViveTracker::get_grip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::HandedViveTracker::get_grip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_grip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::AxisControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.HandedViveTracker.set_grip
void Unity::XR::OpenVR::HandedViveTracker::set_grip(::UnityEngine::InputSystem::Controls::AxisControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::HandedViveTracker::set_grip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_grip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.HandedViveTracker.get_gripPressed
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::OpenVR::HandedViveTracker::get_gripPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::HandedViveTracker::get_gripPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gripPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.HandedViveTracker.set_gripPressed
void Unity::XR::OpenVR::HandedViveTracker::set_gripPressed(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::HandedViveTracker::set_gripPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gripPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.HandedViveTracker.get_primary
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::OpenVR::HandedViveTracker::get_primary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::HandedViveTracker::get_primary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_primary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.HandedViveTracker.set_primary
void Unity::XR::OpenVR::HandedViveTracker::set_primary(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::HandedViveTracker::set_primary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_primary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.HandedViveTracker.get_trackpadPressed
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::OpenVR::HandedViveTracker::get_trackpadPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::HandedViveTracker::get_trackpadPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackpadPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.HandedViveTracker.set_trackpadPressed
void Unity::XR::OpenVR::HandedViveTracker::set_trackpadPressed(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::HandedViveTracker::set_trackpadPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackpadPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.HandedViveTracker.get_triggerPressed
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::OpenVR::HandedViveTracker::get_triggerPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::HandedViveTracker::get_triggerPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_triggerPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.HandedViveTracker.set_triggerPressed
void Unity::XR::OpenVR::HandedViveTracker::set_triggerPressed(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::HandedViveTracker::set_triggerPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_triggerPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.HandedViveTracker.FinishSetup
void Unity::XR::OpenVR::HandedViveTracker::FinishSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::HandedViveTracker::FinishSetup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Unity::XR::OpenVR::ViveTracker*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.XR.OpenVR.OpenVROculusTouchController
#include "Unity/XR/OpenVR/OpenVROculusTouchController.hpp"
// Including type: UnityEngine.InputSystem.Controls.Vector2Control
#include "UnityEngine/InputSystem/Controls/Vector2Control.hpp"
// Including type: UnityEngine.InputSystem.Controls.AxisControl
#include "UnityEngine/InputSystem/Controls/AxisControl.hpp"
// Including type: UnityEngine.InputSystem.Controls.ButtonControl
#include "UnityEngine/InputSystem/Controls/ButtonControl.hpp"
// Including type: UnityEngine.InputSystem.Controls.Vector3Control
#include "UnityEngine/InputSystem/Controls/Vector3Control.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector2Control <thumbstick>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector2Control*& Unity::XR::OpenVR::OpenVROculusTouchController::dyn_$thumbstick$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::dyn_$thumbstick$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<thumbstick>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector2Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.AxisControl <trigger>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::AxisControl*& Unity::XR::OpenVR::OpenVROculusTouchController::dyn_$trigger$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::dyn_$trigger$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<trigger>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::AxisControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.AxisControl <grip>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::AxisControl*& Unity::XR::OpenVR::OpenVROculusTouchController::dyn_$grip$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::dyn_$grip$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<grip>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::AxisControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <primaryButton>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::OpenVR::OpenVROculusTouchController::dyn_$primaryButton$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::dyn_$primaryButton$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<primaryButton>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <secondaryButton>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::OpenVR::OpenVROculusTouchController::dyn_$secondaryButton$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::dyn_$secondaryButton$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<secondaryButton>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <gripPressed>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::OpenVR::OpenVROculusTouchController::dyn_$gripPressed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::dyn_$gripPressed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<gripPressed>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <triggerPressed>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::OpenVR::OpenVROculusTouchController::dyn_$triggerPressed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::dyn_$triggerPressed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<triggerPressed>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <thumbstickClicked>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::OpenVR::OpenVROculusTouchController::dyn_$thumbstickClicked$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::dyn_$thumbstickClicked$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<thumbstickClicked>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <thumbstickTouched>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::OpenVR::OpenVROculusTouchController::dyn_$thumbstickTouched$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::dyn_$thumbstickTouched$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<thumbstickTouched>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <deviceVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::OpenVR::OpenVROculusTouchController::dyn_$deviceVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::dyn_$deviceVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<deviceVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <deviceAngularVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::OpenVR::OpenVROculusTouchController::dyn_$deviceAngularVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::dyn_$deviceAngularVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<deviceAngularVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVROculusTouchController.get_thumbstick
::UnityEngine::InputSystem::Controls::Vector2Control* Unity::XR::OpenVR::OpenVROculusTouchController::get_thumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::get_thumbstick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_thumbstick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector2Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVROculusTouchController.set_thumbstick
void Unity::XR::OpenVR::OpenVROculusTouchController::set_thumbstick(::UnityEngine::InputSystem::Controls::Vector2Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::set_thumbstick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_thumbstick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVROculusTouchController.get_trigger
::UnityEngine::InputSystem::Controls::AxisControl* Unity::XR::OpenVR::OpenVROculusTouchController::get_trigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::get_trigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::AxisControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVROculusTouchController.set_trigger
void Unity::XR::OpenVR::OpenVROculusTouchController::set_trigger(::UnityEngine::InputSystem::Controls::AxisControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::set_trigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVROculusTouchController.get_grip
::UnityEngine::InputSystem::Controls::AxisControl* Unity::XR::OpenVR::OpenVROculusTouchController::get_grip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::get_grip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_grip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::AxisControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVROculusTouchController.set_grip
void Unity::XR::OpenVR::OpenVROculusTouchController::set_grip(::UnityEngine::InputSystem::Controls::AxisControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::set_grip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_grip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVROculusTouchController.get_primaryButton
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::OpenVR::OpenVROculusTouchController::get_primaryButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::get_primaryButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_primaryButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVROculusTouchController.set_primaryButton
void Unity::XR::OpenVR::OpenVROculusTouchController::set_primaryButton(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::set_primaryButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_primaryButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVROculusTouchController.get_secondaryButton
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::OpenVR::OpenVROculusTouchController::get_secondaryButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::get_secondaryButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_secondaryButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVROculusTouchController.set_secondaryButton
void Unity::XR::OpenVR::OpenVROculusTouchController::set_secondaryButton(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::set_secondaryButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_secondaryButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVROculusTouchController.get_gripPressed
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::OpenVR::OpenVROculusTouchController::get_gripPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::get_gripPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gripPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVROculusTouchController.set_gripPressed
void Unity::XR::OpenVR::OpenVROculusTouchController::set_gripPressed(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::set_gripPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gripPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVROculusTouchController.get_triggerPressed
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::OpenVR::OpenVROculusTouchController::get_triggerPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::get_triggerPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_triggerPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVROculusTouchController.set_triggerPressed
void Unity::XR::OpenVR::OpenVROculusTouchController::set_triggerPressed(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::set_triggerPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_triggerPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVROculusTouchController.get_thumbstickClicked
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::OpenVR::OpenVROculusTouchController::get_thumbstickClicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::get_thumbstickClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_thumbstickClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVROculusTouchController.set_thumbstickClicked
void Unity::XR::OpenVR::OpenVROculusTouchController::set_thumbstickClicked(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::set_thumbstickClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_thumbstickClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVROculusTouchController.get_thumbstickTouched
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::OpenVR::OpenVROculusTouchController::get_thumbstickTouched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::get_thumbstickTouched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_thumbstickTouched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVROculusTouchController.set_thumbstickTouched
void Unity::XR::OpenVR::OpenVROculusTouchController::set_thumbstickTouched(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::set_thumbstickTouched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_thumbstickTouched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVROculusTouchController.get_deviceVelocity
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::OpenVR::OpenVROculusTouchController::get_deviceVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::get_deviceVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVROculusTouchController.set_deviceVelocity
void Unity::XR::OpenVR::OpenVROculusTouchController::set_deviceVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::set_deviceVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVROculusTouchController.get_deviceAngularVelocity
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::OpenVR::OpenVROculusTouchController::get_deviceAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::get_deviceAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVROculusTouchController.set_deviceAngularVelocity
void Unity::XR::OpenVR::OpenVROculusTouchController::set_deviceAngularVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::set_deviceAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.OpenVR.OpenVROculusTouchController.FinishSetup
void Unity::XR::OpenVR::OpenVROculusTouchController::FinishSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::OpenVR::OpenVROculusTouchController::FinishSetup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::XR::XRController*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.XR.Oculus.Input.OculusHMD
#include "Unity/XR/Oculus/Input/OculusHMD.hpp"
// Including type: UnityEngine.InputSystem.Controls.ButtonControl
#include "UnityEngine/InputSystem/Controls/ButtonControl.hpp"
// Including type: UnityEngine.InputSystem.Controls.Vector3Control
#include "UnityEngine/InputSystem/Controls/Vector3Control.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <userPresence>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::Oculus::Input::OculusHMD::dyn_$userPresence$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::dyn_$userPresence$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<userPresence>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <deviceAngularVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::Oculus::Input::OculusHMD::dyn_$deviceAngularVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::dyn_$deviceAngularVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<deviceAngularVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <deviceAcceleration>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::Oculus::Input::OculusHMD::dyn_$deviceAcceleration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::dyn_$deviceAcceleration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<deviceAcceleration>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <deviceAngularAcceleration>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::Oculus::Input::OculusHMD::dyn_$deviceAngularAcceleration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::dyn_$deviceAngularAcceleration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<deviceAngularAcceleration>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <leftEyeAngularVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::Oculus::Input::OculusHMD::dyn_$leftEyeAngularVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::dyn_$leftEyeAngularVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<leftEyeAngularVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <leftEyeAcceleration>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::Oculus::Input::OculusHMD::dyn_$leftEyeAcceleration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::dyn_$leftEyeAcceleration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<leftEyeAcceleration>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <leftEyeAngularAcceleration>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::Oculus::Input::OculusHMD::dyn_$leftEyeAngularAcceleration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::dyn_$leftEyeAngularAcceleration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<leftEyeAngularAcceleration>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <rightEyeAngularVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::Oculus::Input::OculusHMD::dyn_$rightEyeAngularVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::dyn_$rightEyeAngularVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rightEyeAngularVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <rightEyeAcceleration>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::Oculus::Input::OculusHMD::dyn_$rightEyeAcceleration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::dyn_$rightEyeAcceleration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rightEyeAcceleration>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <rightEyeAngularAcceleration>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::Oculus::Input::OculusHMD::dyn_$rightEyeAngularAcceleration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::dyn_$rightEyeAngularAcceleration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<rightEyeAngularAcceleration>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <centerEyeAngularVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::Oculus::Input::OculusHMD::dyn_$centerEyeAngularVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::dyn_$centerEyeAngularVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<centerEyeAngularVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <centerEyeAcceleration>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::Oculus::Input::OculusHMD::dyn_$centerEyeAcceleration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::dyn_$centerEyeAcceleration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<centerEyeAcceleration>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <centerEyeAngularAcceleration>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::Oculus::Input::OculusHMD::dyn_$centerEyeAngularAcceleration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::dyn_$centerEyeAngularAcceleration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<centerEyeAngularAcceleration>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMD.get_userPresence
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::Oculus::Input::OculusHMD::get_userPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::get_userPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMD.set_userPresence
void Unity::XR::Oculus::Input::OculusHMD::set_userPresence(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::set_userPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_userPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMD.get_deviceAngularVelocity
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::Oculus::Input::OculusHMD::get_deviceAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::get_deviceAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMD.set_deviceAngularVelocity
void Unity::XR::Oculus::Input::OculusHMD::set_deviceAngularVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::set_deviceAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMD.get_deviceAcceleration
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::Oculus::Input::OculusHMD::get_deviceAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::get_deviceAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMD.set_deviceAcceleration
void Unity::XR::Oculus::Input::OculusHMD::set_deviceAcceleration(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::set_deviceAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMD.get_deviceAngularAcceleration
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::Oculus::Input::OculusHMD::get_deviceAngularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::get_deviceAngularAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceAngularAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMD.set_deviceAngularAcceleration
void Unity::XR::Oculus::Input::OculusHMD::set_deviceAngularAcceleration(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::set_deviceAngularAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceAngularAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMD.get_leftEyeAngularVelocity
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::Oculus::Input::OculusHMD::get_leftEyeAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::get_leftEyeAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftEyeAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMD.set_leftEyeAngularVelocity
void Unity::XR::Oculus::Input::OculusHMD::set_leftEyeAngularVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::set_leftEyeAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftEyeAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMD.get_leftEyeAcceleration
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::Oculus::Input::OculusHMD::get_leftEyeAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::get_leftEyeAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftEyeAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMD.set_leftEyeAcceleration
void Unity::XR::Oculus::Input::OculusHMD::set_leftEyeAcceleration(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::set_leftEyeAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftEyeAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMD.get_leftEyeAngularAcceleration
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::Oculus::Input::OculusHMD::get_leftEyeAngularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::get_leftEyeAngularAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_leftEyeAngularAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMD.set_leftEyeAngularAcceleration
void Unity::XR::Oculus::Input::OculusHMD::set_leftEyeAngularAcceleration(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::set_leftEyeAngularAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_leftEyeAngularAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMD.get_rightEyeAngularVelocity
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::Oculus::Input::OculusHMD::get_rightEyeAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::get_rightEyeAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightEyeAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMD.set_rightEyeAngularVelocity
void Unity::XR::Oculus::Input::OculusHMD::set_rightEyeAngularVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::set_rightEyeAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rightEyeAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMD.get_rightEyeAcceleration
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::Oculus::Input::OculusHMD::get_rightEyeAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::get_rightEyeAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightEyeAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMD.set_rightEyeAcceleration
void Unity::XR::Oculus::Input::OculusHMD::set_rightEyeAcceleration(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::set_rightEyeAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rightEyeAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMD.get_rightEyeAngularAcceleration
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::Oculus::Input::OculusHMD::get_rightEyeAngularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::get_rightEyeAngularAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_rightEyeAngularAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMD.set_rightEyeAngularAcceleration
void Unity::XR::Oculus::Input::OculusHMD::set_rightEyeAngularAcceleration(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::set_rightEyeAngularAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_rightEyeAngularAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMD.get_centerEyeAngularVelocity
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::Oculus::Input::OculusHMD::get_centerEyeAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::get_centerEyeAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_centerEyeAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMD.set_centerEyeAngularVelocity
void Unity::XR::Oculus::Input::OculusHMD::set_centerEyeAngularVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::set_centerEyeAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_centerEyeAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMD.get_centerEyeAcceleration
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::Oculus::Input::OculusHMD::get_centerEyeAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::get_centerEyeAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_centerEyeAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMD.set_centerEyeAcceleration
void Unity::XR::Oculus::Input::OculusHMD::set_centerEyeAcceleration(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::set_centerEyeAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_centerEyeAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMD.get_centerEyeAngularAcceleration
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::Oculus::Input::OculusHMD::get_centerEyeAngularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::get_centerEyeAngularAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_centerEyeAngularAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMD.set_centerEyeAngularAcceleration
void Unity::XR::Oculus::Input::OculusHMD::set_centerEyeAngularAcceleration(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::set_centerEyeAngularAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_centerEyeAngularAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMD.FinishSetup
void Unity::XR::Oculus::Input::OculusHMD::FinishSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMD::FinishSetup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::XR::XRHMD*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.XR.Oculus.Input.OculusTouchController
#include "Unity/XR/Oculus/Input/OculusTouchController.hpp"
// Including type: UnityEngine.InputSystem.Controls.Vector2Control
#include "UnityEngine/InputSystem/Controls/Vector2Control.hpp"
// Including type: UnityEngine.InputSystem.Controls.AxisControl
#include "UnityEngine/InputSystem/Controls/AxisControl.hpp"
// Including type: UnityEngine.InputSystem.Controls.ButtonControl
#include "UnityEngine/InputSystem/Controls/ButtonControl.hpp"
// Including type: UnityEngine.InputSystem.Controls.Vector3Control
#include "UnityEngine/InputSystem/Controls/Vector3Control.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector2Control <thumbstick>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector2Control*& Unity::XR::Oculus::Input::OculusTouchController::dyn_$thumbstick$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::dyn_$thumbstick$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<thumbstick>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector2Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.AxisControl <trigger>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::AxisControl*& Unity::XR::Oculus::Input::OculusTouchController::dyn_$trigger$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::dyn_$trigger$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<trigger>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::AxisControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.AxisControl <grip>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::AxisControl*& Unity::XR::Oculus::Input::OculusTouchController::dyn_$grip$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::dyn_$grip$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<grip>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::AxisControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <primaryButton>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::Oculus::Input::OculusTouchController::dyn_$primaryButton$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::dyn_$primaryButton$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<primaryButton>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <secondaryButton>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::Oculus::Input::OculusTouchController::dyn_$secondaryButton$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::dyn_$secondaryButton$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<secondaryButton>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <gripPressed>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::Oculus::Input::OculusTouchController::dyn_$gripPressed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::dyn_$gripPressed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<gripPressed>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <start>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::Oculus::Input::OculusTouchController::dyn_$start$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::dyn_$start$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<start>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <thumbstickClicked>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::Oculus::Input::OculusTouchController::dyn_$thumbstickClicked$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::dyn_$thumbstickClicked$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<thumbstickClicked>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <primaryTouched>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::Oculus::Input::OculusTouchController::dyn_$primaryTouched$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::dyn_$primaryTouched$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<primaryTouched>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <secondaryTouched>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::Oculus::Input::OculusTouchController::dyn_$secondaryTouched$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::dyn_$secondaryTouched$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<secondaryTouched>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.AxisControl <triggerTouched>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::AxisControl*& Unity::XR::Oculus::Input::OculusTouchController::dyn_$triggerTouched$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::dyn_$triggerTouched$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<triggerTouched>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::AxisControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <triggerPressed>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::Oculus::Input::OculusTouchController::dyn_$triggerPressed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::dyn_$triggerPressed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<triggerPressed>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <thumbstickTouched>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::Oculus::Input::OculusTouchController::dyn_$thumbstickTouched$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::dyn_$thumbstickTouched$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<thumbstickTouched>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <deviceVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::Oculus::Input::OculusTouchController::dyn_$deviceVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::dyn_$deviceVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<deviceVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <deviceAngularVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::Oculus::Input::OculusTouchController::dyn_$deviceAngularVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::dyn_$deviceAngularVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<deviceAngularVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <deviceAcceleration>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::Oculus::Input::OculusTouchController::dyn_$deviceAcceleration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::dyn_$deviceAcceleration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<deviceAcceleration>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <deviceAngularAcceleration>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::Oculus::Input::OculusTouchController::dyn_$deviceAngularAcceleration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::dyn_$deviceAngularAcceleration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<deviceAngularAcceleration>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.get_thumbstick
::UnityEngine::InputSystem::Controls::Vector2Control* Unity::XR::Oculus::Input::OculusTouchController::get_thumbstick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::get_thumbstick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_thumbstick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector2Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.set_thumbstick
void Unity::XR::Oculus::Input::OculusTouchController::set_thumbstick(::UnityEngine::InputSystem::Controls::Vector2Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::set_thumbstick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_thumbstick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.get_trigger
::UnityEngine::InputSystem::Controls::AxisControl* Unity::XR::Oculus::Input::OculusTouchController::get_trigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::get_trigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::AxisControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.set_trigger
void Unity::XR::Oculus::Input::OculusTouchController::set_trigger(::UnityEngine::InputSystem::Controls::AxisControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::set_trigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.get_grip
::UnityEngine::InputSystem::Controls::AxisControl* Unity::XR::Oculus::Input::OculusTouchController::get_grip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::get_grip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_grip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::AxisControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.set_grip
void Unity::XR::Oculus::Input::OculusTouchController::set_grip(::UnityEngine::InputSystem::Controls::AxisControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::set_grip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_grip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.get_primaryButton
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::Oculus::Input::OculusTouchController::get_primaryButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::get_primaryButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_primaryButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.set_primaryButton
void Unity::XR::Oculus::Input::OculusTouchController::set_primaryButton(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::set_primaryButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_primaryButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.get_secondaryButton
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::Oculus::Input::OculusTouchController::get_secondaryButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::get_secondaryButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_secondaryButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.set_secondaryButton
void Unity::XR::Oculus::Input::OculusTouchController::set_secondaryButton(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::set_secondaryButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_secondaryButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.get_gripPressed
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::Oculus::Input::OculusTouchController::get_gripPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::get_gripPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gripPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.set_gripPressed
void Unity::XR::Oculus::Input::OculusTouchController::set_gripPressed(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::set_gripPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gripPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.get_start
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::Oculus::Input::OculusTouchController::get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::get_start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.set_start
void Unity::XR::Oculus::Input::OculusTouchController::set_start(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::set_start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.get_thumbstickClicked
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::Oculus::Input::OculusTouchController::get_thumbstickClicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::get_thumbstickClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_thumbstickClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.set_thumbstickClicked
void Unity::XR::Oculus::Input::OculusTouchController::set_thumbstickClicked(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::set_thumbstickClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_thumbstickClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.get_primaryTouched
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::Oculus::Input::OculusTouchController::get_primaryTouched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::get_primaryTouched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_primaryTouched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.set_primaryTouched
void Unity::XR::Oculus::Input::OculusTouchController::set_primaryTouched(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::set_primaryTouched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_primaryTouched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.get_secondaryTouched
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::Oculus::Input::OculusTouchController::get_secondaryTouched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::get_secondaryTouched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_secondaryTouched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.set_secondaryTouched
void Unity::XR::Oculus::Input::OculusTouchController::set_secondaryTouched(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::set_secondaryTouched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_secondaryTouched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.get_triggerTouched
::UnityEngine::InputSystem::Controls::AxisControl* Unity::XR::Oculus::Input::OculusTouchController::get_triggerTouched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::get_triggerTouched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_triggerTouched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::AxisControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.set_triggerTouched
void Unity::XR::Oculus::Input::OculusTouchController::set_triggerTouched(::UnityEngine::InputSystem::Controls::AxisControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::set_triggerTouched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_triggerTouched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.get_triggerPressed
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::Oculus::Input::OculusTouchController::get_triggerPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::get_triggerPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_triggerPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.set_triggerPressed
void Unity::XR::Oculus::Input::OculusTouchController::set_triggerPressed(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::set_triggerPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_triggerPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.get_thumbstickTouched
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::Oculus::Input::OculusTouchController::get_thumbstickTouched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::get_thumbstickTouched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_thumbstickTouched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.set_thumbstickTouched
void Unity::XR::Oculus::Input::OculusTouchController::set_thumbstickTouched(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::set_thumbstickTouched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_thumbstickTouched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.get_deviceVelocity
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::Oculus::Input::OculusTouchController::get_deviceVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::get_deviceVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.set_deviceVelocity
void Unity::XR::Oculus::Input::OculusTouchController::set_deviceVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::set_deviceVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.get_deviceAngularVelocity
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::Oculus::Input::OculusTouchController::get_deviceAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::get_deviceAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.set_deviceAngularVelocity
void Unity::XR::Oculus::Input::OculusTouchController::set_deviceAngularVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::set_deviceAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.get_deviceAcceleration
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::Oculus::Input::OculusTouchController::get_deviceAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::get_deviceAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.set_deviceAcceleration
void Unity::XR::Oculus::Input::OculusTouchController::set_deviceAcceleration(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::set_deviceAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.get_deviceAngularAcceleration
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::Oculus::Input::OculusTouchController::get_deviceAngularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::get_deviceAngularAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceAngularAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.set_deviceAngularAcceleration
void Unity::XR::Oculus::Input::OculusTouchController::set_deviceAngularAcceleration(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::set_deviceAngularAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceAngularAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTouchController.FinishSetup
void Unity::XR::Oculus::Input::OculusTouchController::FinishSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTouchController::FinishSetup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::XR::XRController*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.XR.Oculus.Input.OculusTrackingReference
#include "Unity/XR/Oculus/Input/OculusTrackingReference.hpp"
// Including type: UnityEngine.InputSystem.Controls.IntegerControl
#include "UnityEngine/InputSystem/Controls/IntegerControl.hpp"
// Including type: UnityEngine.InputSystem.Controls.ButtonControl
#include "UnityEngine/InputSystem/Controls/ButtonControl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.IntegerControl <trackingState>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::IntegerControl*& Unity::XR::Oculus::Input::OculusTrackingReference::dyn_$trackingState$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTrackingReference::dyn_$trackingState$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<trackingState>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::IntegerControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <isTracked>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::Oculus::Input::OculusTrackingReference::dyn_$isTracked$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTrackingReference::dyn_$isTracked$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<isTracked>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTrackingReference.get_trackingState
::UnityEngine::InputSystem::Controls::IntegerControl* Unity::XR::Oculus::Input::OculusTrackingReference::get_trackingState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTrackingReference::get_trackingState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trackingState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::IntegerControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTrackingReference.set_trackingState
void Unity::XR::Oculus::Input::OculusTrackingReference::set_trackingState(::UnityEngine::InputSystem::Controls::IntegerControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTrackingReference::set_trackingState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trackingState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTrackingReference.get_isTracked
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::Oculus::Input::OculusTrackingReference::get_isTracked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTrackingReference::get_isTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTrackingReference.set_isTracked
void Unity::XR::Oculus::Input::OculusTrackingReference::set_isTracked(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTrackingReference::set_isTracked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_isTracked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusTrackingReference.FinishSetup
void Unity::XR::Oculus::Input::OculusTrackingReference::FinishSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusTrackingReference::FinishSetup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::TrackedDevice*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.XR.Oculus.Input.OculusRemote
#include "Unity/XR/Oculus/Input/OculusRemote.hpp"
// Including type: UnityEngine.InputSystem.Controls.ButtonControl
#include "UnityEngine/InputSystem/Controls/ButtonControl.hpp"
// Including type: UnityEngine.InputSystem.Controls.Vector2Control
#include "UnityEngine/InputSystem/Controls/Vector2Control.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <back>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::Oculus::Input::OculusRemote::dyn_$back$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusRemote::dyn_$back$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<back>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <start>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::Oculus::Input::OculusRemote::dyn_$start$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusRemote::dyn_$start$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<start>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector2Control <touchpad>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector2Control*& Unity::XR::Oculus::Input::OculusRemote::dyn_$touchpad$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusRemote::dyn_$touchpad$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<touchpad>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector2Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusRemote.get_back
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::Oculus::Input::OculusRemote::get_back() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusRemote::get_back");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_back", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusRemote.set_back
void Unity::XR::Oculus::Input::OculusRemote::set_back(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusRemote::set_back");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_back", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusRemote.get_start
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::Oculus::Input::OculusRemote::get_start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusRemote::get_start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusRemote.set_start
void Unity::XR::Oculus::Input::OculusRemote::set_start(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusRemote::set_start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusRemote.get_touchpad
::UnityEngine::InputSystem::Controls::Vector2Control* Unity::XR::Oculus::Input::OculusRemote::get_touchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusRemote::get_touchpad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_touchpad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector2Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusRemote.set_touchpad
void Unity::XR::Oculus::Input::OculusRemote::set_touchpad(::UnityEngine::InputSystem::Controls::Vector2Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusRemote::set_touchpad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_touchpad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusRemote.FinishSetup
void Unity::XR::Oculus::Input::OculusRemote::FinishSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusRemote::FinishSetup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputControl*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.XR.Oculus.Input.OculusHMDExtended
#include "Unity/XR/Oculus/Input/OculusHMDExtended.hpp"
// Including type: UnityEngine.InputSystem.Controls.ButtonControl
#include "UnityEngine/InputSystem/Controls/ButtonControl.hpp"
// Including type: UnityEngine.InputSystem.Controls.Vector2Control
#include "UnityEngine/InputSystem/Controls/Vector2Control.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <back>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::Oculus::Input::OculusHMDExtended::dyn_$back$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMDExtended::dyn_$back$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<back>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector2Control <touchpad>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector2Control*& Unity::XR::Oculus::Input::OculusHMDExtended::dyn_$touchpad$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMDExtended::dyn_$touchpad$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<touchpad>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector2Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMDExtended.get_back
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::Oculus::Input::OculusHMDExtended::get_back() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMDExtended::get_back");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_back", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMDExtended.set_back
void Unity::XR::Oculus::Input::OculusHMDExtended::set_back(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMDExtended::set_back");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_back", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMDExtended.get_touchpad
::UnityEngine::InputSystem::Controls::Vector2Control* Unity::XR::Oculus::Input::OculusHMDExtended::get_touchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMDExtended::get_touchpad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_touchpad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector2Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMDExtended.set_touchpad
void Unity::XR::Oculus::Input::OculusHMDExtended::set_touchpad(::UnityEngine::InputSystem::Controls::Vector2Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMDExtended::set_touchpad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_touchpad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.OculusHMDExtended.FinishSetup
void Unity::XR::Oculus::Input::OculusHMDExtended::FinishSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::OculusHMDExtended::FinishSetup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Unity::XR::Oculus::Input::OculusHMD*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.XR.Oculus.Input.GearVRTrackedController
#include "Unity/XR/Oculus/Input/GearVRTrackedController.hpp"
// Including type: UnityEngine.InputSystem.Controls.Vector2Control
#include "UnityEngine/InputSystem/Controls/Vector2Control.hpp"
// Including type: UnityEngine.InputSystem.Controls.AxisControl
#include "UnityEngine/InputSystem/Controls/AxisControl.hpp"
// Including type: UnityEngine.InputSystem.Controls.ButtonControl
#include "UnityEngine/InputSystem/Controls/ButtonControl.hpp"
// Including type: UnityEngine.InputSystem.Controls.Vector3Control
#include "UnityEngine/InputSystem/Controls/Vector3Control.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector2Control <touchpad>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector2Control*& Unity::XR::Oculus::Input::GearVRTrackedController::dyn_$touchpad$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::GearVRTrackedController::dyn_$touchpad$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<touchpad>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector2Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.AxisControl <trigger>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::AxisControl*& Unity::XR::Oculus::Input::GearVRTrackedController::dyn_$trigger$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::GearVRTrackedController::dyn_$trigger$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<trigger>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::AxisControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <back>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::Oculus::Input::GearVRTrackedController::dyn_$back$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::GearVRTrackedController::dyn_$back$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<back>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <triggerPressed>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::Oculus::Input::GearVRTrackedController::dyn_$triggerPressed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::GearVRTrackedController::dyn_$triggerPressed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<triggerPressed>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <touchpadClicked>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::Oculus::Input::GearVRTrackedController::dyn_$touchpadClicked$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::GearVRTrackedController::dyn_$touchpadClicked$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<touchpadClicked>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <touchpadTouched>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::Oculus::Input::GearVRTrackedController::dyn_$touchpadTouched$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::GearVRTrackedController::dyn_$touchpadTouched$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<touchpadTouched>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <deviceAngularVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::Oculus::Input::GearVRTrackedController::dyn_$deviceAngularVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::GearVRTrackedController::dyn_$deviceAngularVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<deviceAngularVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <deviceAcceleration>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::Oculus::Input::GearVRTrackedController::dyn_$deviceAcceleration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::GearVRTrackedController::dyn_$deviceAcceleration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<deviceAcceleration>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <deviceAngularAcceleration>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::Oculus::Input::GearVRTrackedController::dyn_$deviceAngularAcceleration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::GearVRTrackedController::dyn_$deviceAngularAcceleration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<deviceAngularAcceleration>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Unity.XR.Oculus.Input.GearVRTrackedController.get_touchpad
::UnityEngine::InputSystem::Controls::Vector2Control* Unity::XR::Oculus::Input::GearVRTrackedController::get_touchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::GearVRTrackedController::get_touchpad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_touchpad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector2Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.GearVRTrackedController.set_touchpad
void Unity::XR::Oculus::Input::GearVRTrackedController::set_touchpad(::UnityEngine::InputSystem::Controls::Vector2Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::GearVRTrackedController::set_touchpad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_touchpad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.GearVRTrackedController.get_trigger
::UnityEngine::InputSystem::Controls::AxisControl* Unity::XR::Oculus::Input::GearVRTrackedController::get_trigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::GearVRTrackedController::get_trigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::AxisControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.GearVRTrackedController.set_trigger
void Unity::XR::Oculus::Input::GearVRTrackedController::set_trigger(::UnityEngine::InputSystem::Controls::AxisControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::GearVRTrackedController::set_trigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.GearVRTrackedController.get_back
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::Oculus::Input::GearVRTrackedController::get_back() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::GearVRTrackedController::get_back");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_back", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.GearVRTrackedController.set_back
void Unity::XR::Oculus::Input::GearVRTrackedController::set_back(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::GearVRTrackedController::set_back");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_back", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.GearVRTrackedController.get_triggerPressed
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::Oculus::Input::GearVRTrackedController::get_triggerPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::GearVRTrackedController::get_triggerPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_triggerPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.GearVRTrackedController.set_triggerPressed
void Unity::XR::Oculus::Input::GearVRTrackedController::set_triggerPressed(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::GearVRTrackedController::set_triggerPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_triggerPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.GearVRTrackedController.get_touchpadClicked
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::Oculus::Input::GearVRTrackedController::get_touchpadClicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::GearVRTrackedController::get_touchpadClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_touchpadClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.GearVRTrackedController.set_touchpadClicked
void Unity::XR::Oculus::Input::GearVRTrackedController::set_touchpadClicked(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::GearVRTrackedController::set_touchpadClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_touchpadClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.GearVRTrackedController.get_touchpadTouched
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::Oculus::Input::GearVRTrackedController::get_touchpadTouched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::GearVRTrackedController::get_touchpadTouched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_touchpadTouched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.GearVRTrackedController.set_touchpadTouched
void Unity::XR::Oculus::Input::GearVRTrackedController::set_touchpadTouched(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::GearVRTrackedController::set_touchpadTouched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_touchpadTouched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.GearVRTrackedController.get_deviceAngularVelocity
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::Oculus::Input::GearVRTrackedController::get_deviceAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::GearVRTrackedController::get_deviceAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.GearVRTrackedController.set_deviceAngularVelocity
void Unity::XR::Oculus::Input::GearVRTrackedController::set_deviceAngularVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::GearVRTrackedController::set_deviceAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.GearVRTrackedController.get_deviceAcceleration
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::Oculus::Input::GearVRTrackedController::get_deviceAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::GearVRTrackedController::get_deviceAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.GearVRTrackedController.set_deviceAcceleration
void Unity::XR::Oculus::Input::GearVRTrackedController::set_deviceAcceleration(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::GearVRTrackedController::set_deviceAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.GearVRTrackedController.get_deviceAngularAcceleration
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::Oculus::Input::GearVRTrackedController::get_deviceAngularAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::GearVRTrackedController::get_deviceAngularAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceAngularAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.Oculus.Input.GearVRTrackedController.set_deviceAngularAcceleration
void Unity::XR::Oculus::Input::GearVRTrackedController::set_deviceAngularAcceleration(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::GearVRTrackedController::set_deviceAngularAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceAngularAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.Oculus.Input.GearVRTrackedController.FinishSetup
void Unity::XR::Oculus::Input::GearVRTrackedController::FinishSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::Oculus::Input::GearVRTrackedController::FinishSetup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::XR::XRController*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.XR.GoogleVr.DaydreamHMD
#include "Unity/XR/GoogleVr/DaydreamHMD.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Unity.XR.GoogleVr.DaydreamController
#include "Unity/XR/GoogleVr/DaydreamController.hpp"
// Including type: UnityEngine.InputSystem.Controls.Vector2Control
#include "UnityEngine/InputSystem/Controls/Vector2Control.hpp"
// Including type: UnityEngine.InputSystem.Controls.ButtonControl
#include "UnityEngine/InputSystem/Controls/ButtonControl.hpp"
// Including type: UnityEngine.InputSystem.Controls.Vector3Control
#include "UnityEngine/InputSystem/Controls/Vector3Control.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector2Control <touchpad>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector2Control*& Unity::XR::GoogleVr::DaydreamController::dyn_$touchpad$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::dyn_$touchpad$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<touchpad>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector2Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <volumeUp>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::GoogleVr::DaydreamController::dyn_$volumeUp$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::dyn_$volumeUp$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<volumeUp>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <recentered>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::GoogleVr::DaydreamController::dyn_$recentered$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::dyn_$recentered$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<recentered>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <volumeDown>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::GoogleVr::DaydreamController::dyn_$volumeDown$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::dyn_$volumeDown$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<volumeDown>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <recentering>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::GoogleVr::DaydreamController::dyn_$recentering$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::dyn_$recentering$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<recentering>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <app>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::GoogleVr::DaydreamController::dyn_$app$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::dyn_$app$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<app>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <home>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::GoogleVr::DaydreamController::dyn_$home$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::dyn_$home$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<home>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <touchpadClicked>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::GoogleVr::DaydreamController::dyn_$touchpadClicked$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::dyn_$touchpadClicked$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<touchpadClicked>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <touchpadTouched>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& Unity::XR::GoogleVr::DaydreamController::dyn_$touchpadTouched$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::dyn_$touchpadTouched$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<touchpadTouched>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <deviceVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::GoogleVr::DaydreamController::dyn_$deviceVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::dyn_$deviceVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<deviceVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <deviceAcceleration>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& Unity::XR::GoogleVr::DaydreamController::dyn_$deviceAcceleration$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::dyn_$deviceAcceleration$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<deviceAcceleration>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Unity.XR.GoogleVr.DaydreamController.get_touchpad
::UnityEngine::InputSystem::Controls::Vector2Control* Unity::XR::GoogleVr::DaydreamController::get_touchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::get_touchpad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_touchpad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector2Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.GoogleVr.DaydreamController.set_touchpad
void Unity::XR::GoogleVr::DaydreamController::set_touchpad(::UnityEngine::InputSystem::Controls::Vector2Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::set_touchpad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_touchpad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.GoogleVr.DaydreamController.get_volumeUp
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::GoogleVr::DaydreamController::get_volumeUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::get_volumeUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_volumeUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.GoogleVr.DaydreamController.set_volumeUp
void Unity::XR::GoogleVr::DaydreamController::set_volumeUp(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::set_volumeUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_volumeUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.GoogleVr.DaydreamController.get_recentered
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::GoogleVr::DaydreamController::get_recentered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::get_recentered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recentered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.GoogleVr.DaydreamController.set_recentered
void Unity::XR::GoogleVr::DaydreamController::set_recentered(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::set_recentered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_recentered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.GoogleVr.DaydreamController.get_volumeDown
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::GoogleVr::DaydreamController::get_volumeDown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::get_volumeDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_volumeDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.GoogleVr.DaydreamController.set_volumeDown
void Unity::XR::GoogleVr::DaydreamController::set_volumeDown(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::set_volumeDown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_volumeDown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.GoogleVr.DaydreamController.get_recentering
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::GoogleVr::DaydreamController::get_recentering() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::get_recentering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_recentering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.GoogleVr.DaydreamController.set_recentering
void Unity::XR::GoogleVr::DaydreamController::set_recentering(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::set_recentering");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_recentering", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.GoogleVr.DaydreamController.get_app
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::GoogleVr::DaydreamController::get_app() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::get_app");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_app", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.GoogleVr.DaydreamController.set_app
void Unity::XR::GoogleVr::DaydreamController::set_app(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::set_app");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_app", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.GoogleVr.DaydreamController.get_home
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::GoogleVr::DaydreamController::get_home() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::get_home");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_home", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.GoogleVr.DaydreamController.set_home
void Unity::XR::GoogleVr::DaydreamController::set_home(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::set_home");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_home", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.GoogleVr.DaydreamController.get_touchpadClicked
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::GoogleVr::DaydreamController::get_touchpadClicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::get_touchpadClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_touchpadClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.GoogleVr.DaydreamController.set_touchpadClicked
void Unity::XR::GoogleVr::DaydreamController::set_touchpadClicked(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::set_touchpadClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_touchpadClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.GoogleVr.DaydreamController.get_touchpadTouched
::UnityEngine::InputSystem::Controls::ButtonControl* Unity::XR::GoogleVr::DaydreamController::get_touchpadTouched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::get_touchpadTouched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_touchpadTouched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.GoogleVr.DaydreamController.set_touchpadTouched
void Unity::XR::GoogleVr::DaydreamController::set_touchpadTouched(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::set_touchpadTouched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_touchpadTouched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.GoogleVr.DaydreamController.get_deviceVelocity
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::GoogleVr::DaydreamController::get_deviceVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::get_deviceVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.GoogleVr.DaydreamController.set_deviceVelocity
void Unity::XR::GoogleVr::DaydreamController::set_deviceVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::set_deviceVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.GoogleVr.DaydreamController.get_deviceAcceleration
::UnityEngine::InputSystem::Controls::Vector3Control* Unity::XR::GoogleVr::DaydreamController::get_deviceAcceleration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::get_deviceAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: Unity.XR.GoogleVr.DaydreamController.set_deviceAcceleration
void Unity::XR::GoogleVr::DaydreamController::set_deviceAcceleration(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::set_deviceAcceleration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceAcceleration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Unity.XR.GoogleVr.DaydreamController.FinishSetup
void Unity::XR::GoogleVr::DaydreamController::FinishSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Unity::XR::GoogleVr::DaydreamController::FinishSetup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::XR::XRController*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.WindowsMR.Input.WMRHMD
#include "UnityEngine/XR/WindowsMR/Input/WMRHMD.hpp"
// Including type: UnityEngine.InputSystem.Controls.ButtonControl
#include "UnityEngine/InputSystem/Controls/ButtonControl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <userPresence>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& UnityEngine::XR::WindowsMR::Input::WMRHMD::dyn_$userPresence$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRHMD::dyn_$userPresence$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<userPresence>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRHMD.get_userPresence
::UnityEngine::InputSystem::Controls::ButtonControl* UnityEngine::XR::WindowsMR::Input::WMRHMD::get_userPresence() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRHMD::get_userPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_userPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRHMD.set_userPresence
void UnityEngine::XR::WindowsMR::Input::WMRHMD::set_userPresence(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRHMD::set_userPresence");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_userPresence", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRHMD.FinishSetup
void UnityEngine::XR::WindowsMR::Input::WMRHMD::FinishSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRHMD::FinishSetup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::XR::XRHMD*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.WindowsMR.Input.HololensHand
#include "UnityEngine/XR/WindowsMR/Input/HololensHand.hpp"
// Including type: UnityEngine.InputSystem.Controls.Vector3Control
#include "UnityEngine/InputSystem/Controls/Vector3Control.hpp"
// Including type: UnityEngine.InputSystem.Controls.ButtonControl
#include "UnityEngine/InputSystem/Controls/ButtonControl.hpp"
// Including type: UnityEngine.InputSystem.Controls.AxisControl
#include "UnityEngine/InputSystem/Controls/AxisControl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <deviceVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& UnityEngine::XR::WindowsMR::Input::HololensHand::dyn_$deviceVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::HololensHand::dyn_$deviceVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<deviceVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <airTap>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& UnityEngine::XR::WindowsMR::Input::HololensHand::dyn_$airTap$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::HololensHand::dyn_$airTap$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<airTap>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.AxisControl <sourceLossRisk>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::AxisControl*& UnityEngine::XR::WindowsMR::Input::HololensHand::dyn_$sourceLossRisk$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::HololensHand::dyn_$sourceLossRisk$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<sourceLossRisk>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::AxisControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <sourceLossMitigationDirection>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& UnityEngine::XR::WindowsMR::Input::HololensHand::dyn_$sourceLossMitigationDirection$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::HololensHand::dyn_$sourceLossMitigationDirection$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<sourceLossMitigationDirection>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.HololensHand.get_deviceVelocity
::UnityEngine::InputSystem::Controls::Vector3Control* UnityEngine::XR::WindowsMR::Input::HololensHand::get_deviceVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::HololensHand::get_deviceVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.HololensHand.set_deviceVelocity
void UnityEngine::XR::WindowsMR::Input::HololensHand::set_deviceVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::HololensHand::set_deviceVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.HololensHand.get_airTap
::UnityEngine::InputSystem::Controls::ButtonControl* UnityEngine::XR::WindowsMR::Input::HololensHand::get_airTap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::HololensHand::get_airTap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_airTap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.HololensHand.set_airTap
void UnityEngine::XR::WindowsMR::Input::HololensHand::set_airTap(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::HololensHand::set_airTap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_airTap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.HololensHand.get_sourceLossRisk
::UnityEngine::InputSystem::Controls::AxisControl* UnityEngine::XR::WindowsMR::Input::HololensHand::get_sourceLossRisk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::HololensHand::get_sourceLossRisk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sourceLossRisk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::AxisControl*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.HololensHand.set_sourceLossRisk
void UnityEngine::XR::WindowsMR::Input::HololensHand::set_sourceLossRisk(::UnityEngine::InputSystem::Controls::AxisControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::HololensHand::set_sourceLossRisk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sourceLossRisk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.HololensHand.get_sourceLossMitigationDirection
::UnityEngine::InputSystem::Controls::Vector3Control* UnityEngine::XR::WindowsMR::Input::HololensHand::get_sourceLossMitigationDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::HololensHand::get_sourceLossMitigationDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sourceLossMitigationDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.HololensHand.set_sourceLossMitigationDirection
void UnityEngine::XR::WindowsMR::Input::HololensHand::set_sourceLossMitigationDirection(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::HololensHand::set_sourceLossMitigationDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sourceLossMitigationDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.HololensHand.FinishSetup
void UnityEngine::XR::WindowsMR::Input::HololensHand::FinishSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::HololensHand::FinishSetup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::XR::XRController*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.WindowsMR.Input.WMRSpatialController
#include "UnityEngine/XR/WindowsMR/Input/WMRSpatialController.hpp"
// Including type: UnityEngine.InputSystem.Controls.Vector2Control
#include "UnityEngine/InputSystem/Controls/Vector2Control.hpp"
// Including type: UnityEngine.InputSystem.Controls.AxisControl
#include "UnityEngine/InputSystem/Controls/AxisControl.hpp"
// Including type: UnityEngine.InputSystem.Controls.ButtonControl
#include "UnityEngine/InputSystem/Controls/ButtonControl.hpp"
// Including type: UnityEngine.InputSystem.Controls.Vector3Control
#include "UnityEngine/InputSystem/Controls/Vector3Control.hpp"
// Including type: UnityEngine.InputSystem.Controls.QuaternionControl
#include "UnityEngine/InputSystem/Controls/QuaternionControl.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector2Control <joystick>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector2Control*& UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$joystick$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$joystick$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<joystick>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector2Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector2Control <touchpad>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector2Control*& UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$touchpad$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$touchpad$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<touchpad>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector2Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.AxisControl <grip>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::AxisControl*& UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$grip$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$grip$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<grip>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::AxisControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <gripPressed>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$gripPressed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$gripPressed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<gripPressed>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <menu>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$menu$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$menu$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<menu>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.AxisControl <trigger>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::AxisControl*& UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$trigger$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$trigger$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<trigger>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::AxisControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <triggerPressed>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$triggerPressed$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$triggerPressed$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<triggerPressed>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <joystickClicked>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$joystickClicked$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$joystickClicked$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<joystickClicked>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <touchpadClicked>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$touchpadClicked$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$touchpadClicked$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<touchpadClicked>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.ButtonControl <touchpadTouched>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::ButtonControl*& UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$touchpadTouched$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$touchpadTouched$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<touchpadTouched>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::ButtonControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <deviceVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$deviceVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$deviceVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<deviceVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <deviceAngularVelocity>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$deviceAngularVelocity$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$deviceAngularVelocity$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<deviceAngularVelocity>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.AxisControl <batteryLevel>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::AxisControl*& UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$batteryLevel$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$batteryLevel$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<batteryLevel>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::AxisControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.AxisControl <sourceLossRisk>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::AxisControl*& UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$sourceLossRisk$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$sourceLossRisk$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<sourceLossRisk>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::AxisControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <sourceLossMitigationDirection>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$sourceLossMitigationDirection$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$sourceLossMitigationDirection$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<sourceLossMitigationDirection>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.Vector3Control <pointerPosition>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::Vector3Control*& UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$pointerPosition$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$pointerPosition$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pointerPosition>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::Vector3Control**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Controls.QuaternionControl <pointerRotation>k__BackingField
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Controls::QuaternionControl*& UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$pointerRotation$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::dyn_$pointerRotation$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<pointerRotation>k__BackingField"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Controls::QuaternionControl**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.get_joystick
::UnityEngine::InputSystem::Controls::Vector2Control* UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_joystick() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_joystick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_joystick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector2Control*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.set_joystick
void UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_joystick(::UnityEngine::InputSystem::Controls::Vector2Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_joystick");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_joystick", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.get_touchpad
::UnityEngine::InputSystem::Controls::Vector2Control* UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_touchpad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_touchpad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_touchpad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector2Control*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.set_touchpad
void UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_touchpad(::UnityEngine::InputSystem::Controls::Vector2Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_touchpad");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_touchpad", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.get_grip
::UnityEngine::InputSystem::Controls::AxisControl* UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_grip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_grip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_grip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::AxisControl*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.set_grip
void UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_grip(::UnityEngine::InputSystem::Controls::AxisControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_grip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_grip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.get_gripPressed
::UnityEngine::InputSystem::Controls::ButtonControl* UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_gripPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_gripPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_gripPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.set_gripPressed
void UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_gripPressed(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_gripPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_gripPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.get_menu
::UnityEngine::InputSystem::Controls::ButtonControl* UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_menu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_menu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_menu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.set_menu
void UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_menu(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_menu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_menu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.get_trigger
::UnityEngine::InputSystem::Controls::AxisControl* UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_trigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_trigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_trigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::AxisControl*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.set_trigger
void UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_trigger(::UnityEngine::InputSystem::Controls::AxisControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_trigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_trigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.get_triggerPressed
::UnityEngine::InputSystem::Controls::ButtonControl* UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_triggerPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_triggerPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_triggerPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.set_triggerPressed
void UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_triggerPressed(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_triggerPressed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_triggerPressed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.get_joystickClicked
::UnityEngine::InputSystem::Controls::ButtonControl* UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_joystickClicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_joystickClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_joystickClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.set_joystickClicked
void UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_joystickClicked(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_joystickClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_joystickClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.get_touchpadClicked
::UnityEngine::InputSystem::Controls::ButtonControl* UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_touchpadClicked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_touchpadClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_touchpadClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.set_touchpadClicked
void UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_touchpadClicked(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_touchpadClicked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_touchpadClicked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.get_touchpadTouched
::UnityEngine::InputSystem::Controls::ButtonControl* UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_touchpadTouched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_touchpadTouched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_touchpadTouched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::ButtonControl*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.set_touchpadTouched
void UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_touchpadTouched(::UnityEngine::InputSystem::Controls::ButtonControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_touchpadTouched");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_touchpadTouched", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.get_deviceVelocity
::UnityEngine::InputSystem::Controls::Vector3Control* UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_deviceVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_deviceVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.set_deviceVelocity
void UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_deviceVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_deviceVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.get_deviceAngularVelocity
::UnityEngine::InputSystem::Controls::Vector3Control* UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_deviceAngularVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_deviceAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deviceAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.set_deviceAngularVelocity
void UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_deviceAngularVelocity(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_deviceAngularVelocity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deviceAngularVelocity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.get_batteryLevel
::UnityEngine::InputSystem::Controls::AxisControl* UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_batteryLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_batteryLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_batteryLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::AxisControl*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.set_batteryLevel
void UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_batteryLevel(::UnityEngine::InputSystem::Controls::AxisControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_batteryLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_batteryLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.get_sourceLossRisk
::UnityEngine::InputSystem::Controls::AxisControl* UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_sourceLossRisk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_sourceLossRisk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sourceLossRisk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::AxisControl*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.set_sourceLossRisk
void UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_sourceLossRisk(::UnityEngine::InputSystem::Controls::AxisControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_sourceLossRisk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sourceLossRisk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.get_sourceLossMitigationDirection
::UnityEngine::InputSystem::Controls::Vector3Control* UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_sourceLossMitigationDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_sourceLossMitigationDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_sourceLossMitigationDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.set_sourceLossMitigationDirection
void UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_sourceLossMitigationDirection(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_sourceLossMitigationDirection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_sourceLossMitigationDirection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.get_pointerPosition
::UnityEngine::InputSystem::Controls::Vector3Control* UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_pointerPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_pointerPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pointerPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::Vector3Control*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.set_pointerPosition
void UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_pointerPosition(::UnityEngine::InputSystem::Controls::Vector3Control* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_pointerPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pointerPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.get_pointerRotation
::UnityEngine::InputSystem::Controls::QuaternionControl* UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_pointerRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::get_pointerRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_pointerRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Controls::QuaternionControl*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.set_pointerRotation
void UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_pointerRotation(::UnityEngine::InputSystem::Controls::QuaternionControl* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::set_pointerRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_pointerRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.WindowsMR.Input.WMRSpatialController.FinishSetup
void UnityEngine::XR::WindowsMR::Input::WMRSpatialController::FinishSetup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::WindowsMR::Input::WMRSpatialController::FinishSetup");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::XR::XRController*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.InputSystem.IInputActionCollection
#include "UnityEngine/InputSystem/IInputActionCollection.hpp"
// Including type: UnityEngine.InputSystem.InputAction
#include "UnityEngine/InputSystem/InputAction.hpp"
// Including type: UnityEngine.InputSystem.InputDevice
#include "UnityEngine/InputSystem/InputDevice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.InputSystem.IInputActionCollection.get_bindingMask
::System::Nullable_1<::UnityEngine::InputSystem::InputBinding> UnityEngine::InputSystem::IInputActionCollection::get_bindingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::IInputActionCollection::get_bindingMask");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::IInputActionCollection*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::UnityEngine::InputSystem::InputBinding>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.IInputActionCollection.set_bindingMask
void UnityEngine::InputSystem::IInputActionCollection::set_bindingMask(::System::Nullable_1<::UnityEngine::InputSystem::InputBinding> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::IInputActionCollection::set_bindingMask");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::IInputActionCollection*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.InputSystem.IInputActionCollection.get_devices
::System::Nullable_1<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputDevice*>> UnityEngine::InputSystem::IInputActionCollection::get_devices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::IInputActionCollection::get_devices");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::IInputActionCollection*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputDevice*>>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.IInputActionCollection.set_devices
void UnityEngine::InputSystem::IInputActionCollection::set_devices(::System::Nullable_1<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputDevice*>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::IInputActionCollection::set_devices");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::IInputActionCollection*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.InputSystem.IInputActionCollection.get_controlSchemes
::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputControlScheme> UnityEngine::InputSystem::IInputActionCollection::get_controlSchemes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::IInputActionCollection::get_controlSchemes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::IInputActionCollection*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputControlScheme>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.IInputActionCollection.Contains
bool UnityEngine::InputSystem::IInputActionCollection::Contains(::UnityEngine::InputSystem::InputAction* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::IInputActionCollection::Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::IInputActionCollection*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, action);
}
// Autogenerated method: UnityEngine.InputSystem.IInputActionCollection.Enable
void UnityEngine::InputSystem::IInputActionCollection::Enable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::IInputActionCollection::Enable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::IInputActionCollection*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.IInputActionCollection.Disable
void UnityEngine::InputSystem::IInputActionCollection::Disable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::IInputActionCollection::Disable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::IInputActionCollection*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.InputSystem.IInputInteraction
#include "UnityEngine/InputSystem/IInputInteraction.hpp"
// Including type: UnityEngine.InputSystem.InputInteractionContext
#include "UnityEngine/InputSystem/InputInteractionContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: UnityEngine.InputSystem.IInputInteraction.Process
void UnityEngine::InputSystem::IInputInteraction::Process(ByRef<::UnityEngine::InputSystem::InputInteractionContext> context) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::IInputInteraction::Process");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::IInputInteraction*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(context));
}
// Autogenerated method: UnityEngine.InputSystem.IInputInteraction.Reset
void UnityEngine::InputSystem::IInputInteraction::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::IInputInteraction::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::IInputInteraction*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.InputSystem.InputInteraction
#include "UnityEngine/InputSystem/InputInteraction.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.InputSystem.Utilities.TypeTable s_Interactions
::UnityEngine::InputSystem::Utilities::TypeTable UnityEngine::InputSystem::InputInteraction::_get_s_Interactions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputInteraction::_get_s_Interactions");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::InputSystem::Utilities::TypeTable>("UnityEngine.InputSystem", "InputInteraction", "s_Interactions"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.InputSystem.Utilities.TypeTable s_Interactions
void UnityEngine::InputSystem::InputInteraction::_set_s_Interactions(::UnityEngine::InputSystem::Utilities::TypeTable value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputInteraction::_set_s_Interactions");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.InputSystem", "InputInteraction", "s_Interactions", value));
}
// Autogenerated method: UnityEngine.InputSystem.InputInteraction.GetValueType
::System::Type* UnityEngine::InputSystem::InputInteraction::GetValueType(::System::Type* interactionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputInteraction::GetValueType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.InputSystem", "InputInteraction", "GetValueType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactionType)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, interactionType);
}
// Autogenerated method: UnityEngine.InputSystem.InputInteraction.GetDisplayName
::StringW UnityEngine::InputSystem::InputInteraction::GetDisplayName(::StringW interaction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputInteraction::GetDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.InputSystem", "InputInteraction", "GetDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interaction)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, interaction);
}
// Autogenerated method: UnityEngine.InputSystem.InputInteraction.GetDisplayName
::StringW UnityEngine::InputSystem::InputInteraction::GetDisplayName(::System::Type* interactionType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputInteraction::GetDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.InputSystem", "InputInteraction", "GetDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(interactionType)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, interactionType);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.InputSystem.InputAction
#include "UnityEngine/InputSystem/InputAction.hpp"
// Including type: UnityEngine.InputSystem.InputActionMap
#include "UnityEngine/InputSystem/InputActionMap.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: UnityEngine.InputSystem.Utilities.ReadOnlyArray`1
#include "UnityEngine/InputSystem/Utilities/ReadOnlyArray_1.hpp"
// Including type: UnityEngine.InputSystem.InputControl
#include "UnityEngine/InputSystem/InputControl.hpp"
// Including type: UnityEngine.InputSystem.InputActionPhase
#include "UnityEngine/InputSystem/InputActionPhase.hpp"
// Including type: System.ValueType
#include "System/ValueType.hpp"
// Including type: UnityEngine.InputSystem.InputActionState/TriggerState
#include "UnityEngine/InputSystem/InputActionState_TriggerState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: System.String m_Name
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::InputSystem::InputAction::dyn_m_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::dyn_m_Name");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.InputSystem.InputActionType m_Type
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionType& UnityEngine::InputSystem::InputAction::dyn_m_Type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::dyn_m_Type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Type"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String m_ExpectedControlType
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::InputSystem::InputAction::dyn_m_ExpectedControlType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::dyn_m_ExpectedControlType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ExpectedControlType"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String m_Id
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::InputSystem::InputAction::dyn_m_Id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::dyn_m_Id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Id"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String m_Processors
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::InputSystem::InputAction::dyn_m_Processors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::dyn_m_Processors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Processors"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.String m_Interactions
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::InputSystem::InputAction::dyn_m_Interactions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::dyn_m_Interactions");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Interactions"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.InputSystem.InputBinding[] m_SingletonActionBindings
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::InputSystem::InputBinding>& UnityEngine::InputSystem::InputAction::dyn_m_SingletonActionBindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::dyn_m_SingletonActionBindings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SingletonActionBindings"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::InputSystem::InputBinding>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<UnityEngine.InputSystem.InputBinding> m_BindingMask
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::UnityEngine::InputSystem::InputBinding>& UnityEngine::InputSystem::InputAction::dyn_m_BindingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::dyn_m_BindingMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BindingMask"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::UnityEngine::InputSystem::InputBinding>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_BindingsStartIndex
[[deprecated("Use field access instead!")]] int& UnityEngine::InputSystem::InputAction::dyn_m_BindingsStartIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::dyn_m_BindingsStartIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BindingsStartIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_BindingsCount
[[deprecated("Use field access instead!")]] int& UnityEngine::InputSystem::InputAction::dyn_m_BindingsCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::dyn_m_BindingsCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BindingsCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_ControlStartIndex
[[deprecated("Use field access instead!")]] int& UnityEngine::InputSystem::InputAction::dyn_m_ControlStartIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::dyn_m_ControlStartIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ControlStartIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_ControlCount
[[deprecated("Use field access instead!")]] int& UnityEngine::InputSystem::InputAction::dyn_m_ControlCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::dyn_m_ControlCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ControlCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Int32 m_ActionIndexInState
[[deprecated("Use field access instead!")]] int& UnityEngine::InputSystem::InputAction::dyn_m_ActionIndexInState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::dyn_m_ActionIndexInState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActionIndexInState"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.InputSystem.InputActionMap m_ActionMap
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionMap*& UnityEngine::InputSystem::InputAction::dyn_m_ActionMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::dyn_m_ActionMap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActionMap"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.InputSystem.Utilities.InlinedArray`1<System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext>> m_OnStarted
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*>& UnityEngine::InputSystem::InputAction::dyn_m_OnStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::dyn_m_OnStarted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnStarted"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Utilities::InlinedArray_1<::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.InputSystem.Utilities.InlinedArray`1<System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext>> m_OnCanceled
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*>& UnityEngine::InputSystem::InputAction::dyn_m_OnCanceled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::dyn_m_OnCanceled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnCanceled"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Utilities::InlinedArray_1<::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.InputSystem.Utilities.InlinedArray`1<System.Action`1<UnityEngine.InputSystem.InputAction/CallbackContext>> m_OnPerformed
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::InlinedArray_1<::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*>& UnityEngine::InputSystem::InputAction::dyn_m_OnPerformed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::dyn_m_OnPerformed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_OnPerformed"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Utilities::InlinedArray_1<::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.get_name
::StringW UnityEngine::InputSystem::InputAction::get_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::get_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.get_type
::UnityEngine::InputSystem::InputActionType UnityEngine::InputSystem::InputAction::get_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::get_type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionType, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.get_id
::System::Guid UnityEngine::InputSystem::InputAction::get_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::get_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.get_idDontGenerate
::System::Guid UnityEngine::InputSystem::InputAction::get_idDontGenerate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::get_idDontGenerate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_idDontGenerate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.get_expectedControlType
::StringW UnityEngine::InputSystem::InputAction::get_expectedControlType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::get_expectedControlType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_expectedControlType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.set_expectedControlType
void UnityEngine::InputSystem::InputAction::set_expectedControlType(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::set_expectedControlType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_expectedControlType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.get_processors
::StringW UnityEngine::InputSystem::InputAction::get_processors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::get_processors");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_processors", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.get_interactions
::StringW UnityEngine::InputSystem::InputAction::get_interactions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::get_interactions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_interactions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.get_actionMap
::UnityEngine::InputSystem::InputActionMap* UnityEngine::InputSystem::InputAction::get_actionMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::get_actionMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_actionMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionMap*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.get_bindingMask
::System::Nullable_1<::UnityEngine::InputSystem::InputBinding> UnityEngine::InputSystem::InputAction::get_bindingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::get_bindingMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bindingMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::UnityEngine::InputSystem::InputBinding>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.set_bindingMask
void UnityEngine::InputSystem::InputAction::set_bindingMask(::System::Nullable_1<::UnityEngine::InputSystem::InputBinding> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::set_bindingMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_bindingMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.get_bindings
::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputBinding> UnityEngine::InputSystem::InputAction::get_bindings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::get_bindings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_bindings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputBinding>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.get_controls
::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputControl*> UnityEngine::InputSystem::InputAction::get_controls() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::get_controls");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controls", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputControl*>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.get_phase
::UnityEngine::InputSystem::InputActionPhase UnityEngine::InputSystem::InputAction::get_phase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::get_phase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_phase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionPhase, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.get_enabled
bool UnityEngine::InputSystem::InputAction::get_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::get_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.add_started
void UnityEngine::InputSystem::InputAction::add_started(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::add_started");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_started", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.remove_started
void UnityEngine::InputSystem::InputAction::remove_started(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::remove_started");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_started", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.add_canceled
void UnityEngine::InputSystem::InputAction::add_canceled(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::add_canceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_canceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.remove_canceled
void UnityEngine::InputSystem::InputAction::remove_canceled(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::remove_canceled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_canceled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.add_performed
void UnityEngine::InputSystem::InputAction::add_performed(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::add_performed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_performed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.remove_performed
void UnityEngine::InputSystem::InputAction::remove_performed(::System::Action_1<::UnityEngine::InputSystem::InputAction_CallbackContext>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::remove_performed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_performed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.get_triggered
bool UnityEngine::InputSystem::InputAction::get_triggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::get_triggered");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_triggered", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.get_activeControl
::UnityEngine::InputSystem::InputControl* UnityEngine::InputSystem::InputAction::get_activeControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::get_activeControl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_activeControl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputControl*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.get_wantsInitialStateCheck
bool UnityEngine::InputSystem::InputAction::get_wantsInitialStateCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::get_wantsInitialStateCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_wantsInitialStateCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.Dispose
void UnityEngine::InputSystem::InputAction::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputAction*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.Enable
void UnityEngine::InputSystem::InputAction::Enable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::Enable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Enable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.Disable
void UnityEngine::InputSystem::InputAction::Disable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::Disable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Disable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.Clone
::UnityEngine::InputSystem::InputAction* UnityEngine::InputSystem::InputAction::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::Clone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputAction*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.System.ICloneable.Clone
::Il2CppObject* UnityEngine::InputSystem::InputAction::System_ICloneable_Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::System.ICloneable.Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputAction*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.ReadValueAsObject
::Il2CppObject* UnityEngine::InputSystem::InputAction::ReadValueAsObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::ReadValueAsObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadValueAsObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.get_isSingletonAction
bool UnityEngine::InputSystem::InputAction::get_isSingletonAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::get_isSingletonAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_isSingletonAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.get_currentState
::UnityEngine::InputSystem::InputActionState::TriggerState UnityEngine::InputSystem::InputAction::get_currentState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::get_currentState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currentState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionState::TriggerState, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.MakeSureIdIsInPlace
::StringW UnityEngine::InputSystem::InputAction::MakeSureIdIsInPlace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::MakeSureIdIsInPlace");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeSureIdIsInPlace", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.GenerateId
void UnityEngine::InputSystem::InputAction::GenerateId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::GenerateId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.GetOrCreateActionMap
::UnityEngine::InputSystem::InputActionMap* UnityEngine::InputSystem::InputAction::GetOrCreateActionMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::GetOrCreateActionMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOrCreateActionMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionMap*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.CreateInternalActionMapForSingletonAction
void UnityEngine::InputSystem::InputAction::CreateInternalActionMapForSingletonAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::CreateInternalActionMapForSingletonAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateInternalActionMapForSingletonAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.FindEffectiveBindingMask
::System::Nullable_1<::UnityEngine::InputSystem::InputBinding> UnityEngine::InputSystem::InputAction::FindEffectiveBindingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::FindEffectiveBindingMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindEffectiveBindingMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::UnityEngine::InputSystem::InputBinding>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.BindingIndexOnActionToBindingIndexOnMap
int UnityEngine::InputSystem::InputAction::BindingIndexOnActionToBindingIndexOnMap(int indexOfBindingOnAction) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::BindingIndexOnActionToBindingIndexOnMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BindingIndexOnActionToBindingIndexOnMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indexOfBindingOnAction)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, indexOfBindingOnAction);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.BindingIndexOnMapToBindingIndexOnAction
int UnityEngine::InputSystem::InputAction::BindingIndexOnMapToBindingIndexOnAction(int indexOfBindingOnMap) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::BindingIndexOnMapToBindingIndexOnAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BindingIndexOnMapToBindingIndexOnAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(indexOfBindingOnMap)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, indexOfBindingOnMap);
}
// Autogenerated method: UnityEngine.InputSystem.InputAction.ToString
::StringW UnityEngine::InputSystem::InputAction::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputAction::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.InputSystem.InputActionAsset
#include "UnityEngine/InputSystem/InputActionAsset.hpp"
// Including type: UnityEngine.InputSystem.InputActionAsset/WriteFileJson
#include "UnityEngine/InputSystem/InputActionAsset_WriteFileJson.hpp"
// Including type: UnityEngine.InputSystem.InputActionAsset/ReadFileJson
#include "UnityEngine/InputSystem/InputActionAsset_ReadFileJson.hpp"
// Including type: UnityEngine.InputSystem.InputActionAsset/<GetEnumerator>d__27
#include "UnityEngine/InputSystem/InputActionAsset_-GetEnumerator-d__27.hpp"
// Including type: UnityEngine.InputSystem.InputActionMap
#include "UnityEngine/InputSystem/InputActionMap.hpp"
// Including type: UnityEngine.InputSystem.InputActionState
#include "UnityEngine/InputSystem/InputActionState.hpp"
// Including type: UnityEngine.InputSystem.InputDevice
#include "UnityEngine/InputSystem/InputDevice.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: UnityEngine.InputSystem.InputAction
#include "UnityEngine/InputSystem/InputAction.hpp"
// Including type: System.Guid
#include "System/Guid.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String Extension
::StringW UnityEngine::InputSystem::InputActionAsset::_get_Extension() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::_get_Extension");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("UnityEngine.InputSystem", "InputActionAsset", "Extension"));
}
// Autogenerated static field setter
// Set static field: static public System.String Extension
void UnityEngine::InputSystem::InputActionAsset::_set_Extension(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::_set_Extension");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.InputSystem", "InputActionAsset", "Extension", value));
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.InputSystem.InputActionMap[] m_ActionMaps
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::InputSystem::InputActionMap*>& UnityEngine::InputSystem::InputActionAsset::dyn_m_ActionMaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::dyn_m_ActionMaps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ActionMaps"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::InputSystem::InputActionMap*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.InputSystem.InputControlScheme[] m_ControlSchemes
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::InputSystem::InputControlScheme>& UnityEngine::InputSystem::InputActionAsset::dyn_m_ControlSchemes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::dyn_m_ControlSchemes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ControlSchemes"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::InputSystem::InputControlScheme>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: UnityEngine.InputSystem.InputActionState m_SharedStateForAllMaps
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionState*& UnityEngine::InputSystem::InputActionAsset::dyn_m_SharedStateForAllMaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::dyn_m_SharedStateForAllMaps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_SharedStateForAllMaps"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionState**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Nullable`1<UnityEngine.InputSystem.InputBinding> m_BindingMask
[[deprecated("Use field access instead!")]] ::System::Nullable_1<::UnityEngine::InputSystem::InputBinding>& UnityEngine::InputSystem::InputActionAsset::dyn_m_BindingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::dyn_m_BindingMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_BindingMask"))->offset;
  return *reinterpret_cast<::System::Nullable_1<::UnityEngine::InputSystem::InputBinding>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 m_DevicesCount
[[deprecated("Use field access instead!")]] int& UnityEngine::InputSystem::InputActionAsset::dyn_m_DevicesCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::dyn_m_DevicesCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DevicesCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputDevice[] m_DevicesArray
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::InputSystem::InputDevice*>& UnityEngine::InputSystem::InputActionAsset::dyn_m_DevicesArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::dyn_m_DevicesArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DevicesArray"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::InputSystem::InputDevice*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset.get_enabled
bool UnityEngine::InputSystem::InputActionAsset::get_enabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::get_enabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_enabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset.get_actionMaps
::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputActionMap*> UnityEngine::InputSystem::InputActionAsset::get_actionMaps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::get_actionMaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_actionMaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputActionMap*>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset.get_controlSchemes
::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputControlScheme> UnityEngine::InputSystem::InputActionAsset::get_controlSchemes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::get_controlSchemes");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputActionAsset*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputControlScheme>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset.get_bindingMask
::System::Nullable_1<::UnityEngine::InputSystem::InputBinding> UnityEngine::InputSystem::InputActionAsset::get_bindingMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::get_bindingMask");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputActionAsset*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::UnityEngine::InputSystem::InputBinding>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset.set_bindingMask
void UnityEngine::InputSystem::InputActionAsset::set_bindingMask(::System::Nullable_1<::UnityEngine::InputSystem::InputBinding> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::set_bindingMask");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputActionAsset*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset.get_devices
::System::Nullable_1<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputDevice*>> UnityEngine::InputSystem::InputActionAsset::get_devices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::get_devices");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputActionAsset*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputDevice*>>, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset.set_devices
void UnityEngine::InputSystem::InputActionAsset::set_devices(::System::Nullable_1<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputDevice*>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::set_devices");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputActionAsset*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset.get_Item
::UnityEngine::InputSystem::InputAction* UnityEngine::InputSystem::InputActionAsset::get_Item(::StringW actionNameOrId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actionNameOrId)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputAction*, false>(this, ___internal__method, actionNameOrId);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset.ToJson
::StringW UnityEngine::InputSystem::InputActionAsset::ToJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::ToJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset.LoadFromJson
void UnityEngine::InputSystem::InputActionAsset::LoadFromJson(::StringW json) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::LoadFromJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LoadFromJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, json);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset.FromJson
::UnityEngine::InputSystem::InputActionAsset* UnityEngine::InputSystem::InputActionAsset::FromJson(::StringW json) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::FromJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.InputSystem", "InputActionAsset", "FromJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionAsset*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, json);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset.FindAction
::UnityEngine::InputSystem::InputAction* UnityEngine::InputSystem::InputActionAsset::FindAction(::StringW actionNameOrId, bool throwIfNotFound) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::FindAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(actionNameOrId), ::il2cpp_utils::ExtractType(throwIfNotFound)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputAction*, false>(this, ___internal__method, actionNameOrId, throwIfNotFound);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset.FindActionMap
::UnityEngine::InputSystem::InputActionMap* UnityEngine::InputSystem::InputActionAsset::FindActionMap(::StringW nameOrId, bool throwIfNotFound) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::FindActionMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindActionMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nameOrId), ::il2cpp_utils::ExtractType(throwIfNotFound)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionMap*, false>(this, ___internal__method, nameOrId, throwIfNotFound);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset.FindActionMap
::UnityEngine::InputSystem::InputActionMap* UnityEngine::InputSystem::InputActionAsset::FindActionMap(::System::Guid id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::FindActionMap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindActionMap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputActionMap*, false>(this, ___internal__method, id);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset.FindAction
::UnityEngine::InputSystem::InputAction* UnityEngine::InputSystem::InputActionAsset::FindAction(::System::Guid guid) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::FindAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(guid)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputAction*, false>(this, ___internal__method, guid);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset.FindControlSchemeIndex
int UnityEngine::InputSystem::InputActionAsset::FindControlSchemeIndex(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::FindControlSchemeIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindControlSchemeIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset.FindControlScheme
::System::Nullable_1<::UnityEngine::InputSystem::InputControlScheme> UnityEngine::InputSystem::InputActionAsset::FindControlScheme(::StringW name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::FindControlScheme");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindControlScheme", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Nullable_1<::UnityEngine::InputSystem::InputControlScheme>, false>(this, ___internal__method, name);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset.Enable
void UnityEngine::InputSystem::InputActionAsset::Enable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::Enable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputActionAsset*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset.Disable
void UnityEngine::InputSystem::InputActionAsset::Disable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::Disable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputActionAsset*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset.Contains
bool UnityEngine::InputSystem::InputActionAsset::Contains(::UnityEngine::InputSystem::InputAction* action) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputActionAsset*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, action);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset.GetEnumerator
::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::InputAction*>* UnityEngine::InputSystem::InputActionAsset::GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputActionAsset*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IEnumerator_1<::UnityEngine::InputSystem::InputAction*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* UnityEngine::InputSystem::InputActionAsset::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputActionAsset*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset.ReResolveIfNecessary
void UnityEngine::InputSystem::InputActionAsset::ReResolveIfNecessary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::ReResolveIfNecessary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReResolveIfNecessary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset.OnDestroy
void UnityEngine::InputSystem::InputActionAsset::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.InputSystem.InputActionAsset/ReadFileJson
#include "UnityEngine/InputSystem/InputActionAsset_ReadFileJson.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String name
[[deprecated("Use field access instead!")]] ::StringW& UnityEngine::InputSystem::InputActionAsset::ReadFileJson::dyn_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::ReadFileJson::dyn_name");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "name"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.InputSystem.InputActionMap/ReadMapJson[] maps
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::InputSystem::InputActionMap::ReadMapJson>& UnityEngine::InputSystem::InputActionAsset::ReadFileJson::dyn_maps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::ReadFileJson::dyn_maps");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maps"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::InputSystem::InputActionMap::ReadMapJson>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.InputSystem.InputControlScheme/SchemeJson[] controlSchemes
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::InputSystem::InputControlScheme::SchemeJson>& UnityEngine::InputSystem::InputActionAsset::ReadFileJson::dyn_controlSchemes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::ReadFileJson::dyn_controlSchemes");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controlSchemes"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::InputSystem::InputControlScheme::SchemeJson>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset/ReadFileJson.ToAsset
void UnityEngine::InputSystem::InputActionAsset::ReadFileJson::ToAsset(::UnityEngine::InputSystem::InputActionAsset* asset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::ReadFileJson::ToAsset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "ToAsset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(asset)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, asset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: UnityEngine.InputSystem.InputActionAsset/<GetEnumerator>d__27
#include "UnityEngine/InputSystem/InputActionAsset_-GetEnumerator-d__27.hpp"
// Including type: UnityEngine.InputSystem.InputAction
#include "UnityEngine/InputSystem/InputAction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__27::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__27::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.InputAction <>2__current
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputAction*& UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__27::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__27::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputAction**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.InputSystem.InputActionAsset <>4__this
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::InputActionAsset*& UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__27::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__27::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::InputActionAsset**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <i>5__2
[[deprecated("Use field access instead!")]] int& UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__27::dyn_$i$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__27::dyn_$i$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<i>5__2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.InputSystem.Utilities.ReadOnlyArray`1<UnityEngine.InputSystem.InputAction> <actions>5__3
[[deprecated("Use field access instead!")]] ::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputAction*>& UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__27::dyn_$actions$5__3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__27::dyn_$actions$5__3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<actions>5__3"))->offset;
  return *reinterpret_cast<::UnityEngine::InputSystem::Utilities::ReadOnlyArray_1<::UnityEngine::InputSystem::InputAction*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <actionCount>5__4
[[deprecated("Use field access instead!")]] int& UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__27::dyn_$actionCount$5__4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__27::dyn_$actionCount$5__4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<actionCount>5__4"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <n>5__5
[[deprecated("Use field access instead!")]] int& UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__27::dyn_$n$5__5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__27::dyn_$n$5__5");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<n>5__5"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset/<GetEnumerator>d__27.System.IDisposable.Dispose
void UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__27::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__27::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__27*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset/<GetEnumerator>d__27.MoveNext
bool UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__27::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__27::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__27*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset/<GetEnumerator>d__27.System.Collections.Generic.IEnumerator<UnityEngine.InputSystem.InputAction>.get_Current
::UnityEngine::InputSystem::InputAction* UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__27::System_Collections_Generic_IEnumerator$UnityEngine_InputSystem_InputAction$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__27::System.Collections.Generic.IEnumerator<UnityEngine.InputSystem.InputAction>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__27*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::InputSystem::InputAction*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset/<GetEnumerator>d__27.System.Collections.IEnumerator.Reset
void UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__27::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__27::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__27*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.InputSystem.InputActionAsset/<GetEnumerator>d__27.System.Collections.IEnumerator.get_Current
::Il2CppObject* UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__27::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__27::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::UnityEngine::InputSystem::InputActionAsset::$GetEnumerator$d__27*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
