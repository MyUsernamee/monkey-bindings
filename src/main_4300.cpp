// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.VoiceClient/<>c__DisplayClass51_1
#include "Photon/Voice/VoiceClient_--c__DisplayClass51_1.hpp"
// Including type: Photon.Voice.LocalVoiceAudio`1
#include "Photon/Voice/LocalVoiceAudio_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Photon.Voice.LocalVoiceAudio`1<System.Single> localVoice
[[deprecated("Use field access instead!")]] ::Photon::Voice::LocalVoiceAudio_1<float>*& Photon::Voice::VoiceClient::$$c__DisplayClass51_1::dyn_localVoice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$$c__DisplayClass51_1::dyn_localVoice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localVoice"))->offset;
  return *reinterpret_cast<::Photon::Voice::LocalVoiceAudio_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.VoiceClient/<>c__DisplayClass51_1.<CreateLocalVoiceAudioFromSource>b__1
void Photon::Voice::VoiceClient::$$c__DisplayClass51_1::$CreateLocalVoiceAudioFromSource$b__1(::ArrayW<float> buf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$$c__DisplayClass51_1::<CreateLocalVoiceAudioFromSource>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateLocalVoiceAudioFromSource>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buf);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.VoiceClient/<>c__DisplayClass51_2
#include "Photon/Voice/VoiceClient_--c__DisplayClass51_2.hpp"
// Including type: Photon.Voice.LocalVoiceAudio`1
#include "Photon/Voice/LocalVoiceAudio_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Photon.Voice.LocalVoiceAudio`1<System.Single> localVoice
[[deprecated("Use field access instead!")]] ::Photon::Voice::LocalVoiceAudio_1<float>*& Photon::Voice::VoiceClient::$$c__DisplayClass51_2::dyn_localVoice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$$c__DisplayClass51_2::dyn_localVoice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localVoice"))->offset;
  return *reinterpret_cast<::Photon::Voice::LocalVoiceAudio_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.VoiceClient/<>c__DisplayClass51_2.<CreateLocalVoiceAudioFromSource>b__2
void Photon::Voice::VoiceClient::$$c__DisplayClass51_2::$CreateLocalVoiceAudioFromSource$b__2(::ArrayW<int16_t> buf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$$c__DisplayClass51_2::<CreateLocalVoiceAudioFromSource>b__2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateLocalVoiceAudioFromSource>b__2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buf);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.VoiceClient/<>c__DisplayClass51_3
#include "Photon/Voice/VoiceClient_--c__DisplayClass51_3.hpp"
// Including type: Photon.Voice.LocalVoiceAudio`1
#include "Photon/Voice/LocalVoiceAudio_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Photon.Voice.LocalVoiceAudio`1<System.Int16> localVoice
[[deprecated("Use field access instead!")]] ::Photon::Voice::LocalVoiceAudio_1<int16_t>*& Photon::Voice::VoiceClient::$$c__DisplayClass51_3::dyn_localVoice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$$c__DisplayClass51_3::dyn_localVoice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localVoice"))->offset;
  return *reinterpret_cast<::Photon::Voice::LocalVoiceAudio_1<int16_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.VoiceClient/<>c__DisplayClass51_3.<CreateLocalVoiceAudioFromSource>b__3
void Photon::Voice::VoiceClient::$$c__DisplayClass51_3::$CreateLocalVoiceAudioFromSource$b__3(::ArrayW<int16_t> buf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$$c__DisplayClass51_3::<CreateLocalVoiceAudioFromSource>b__3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CreateLocalVoiceAudioFromSource>b__3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buf)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buf);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.VoiceClient/<>c
#include "Photon/Voice/VoiceClient_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Photon.Voice.LocalVoice
#include "Photon/Voice/LocalVoice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Photon.Voice.VoiceClient/<>c <>9
::Photon::Voice::VoiceClient::$$c* Photon::Voice::VoiceClient::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Photon::Voice::VoiceClient::$$c*>("Photon.Voice", "VoiceClient/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Photon.Voice.VoiceClient/<>c <>9
void Photon::Voice::VoiceClient::$$c::_set_$$9(::Photon::Voice::VoiceClient::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Voice", "VoiceClient/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Photon.Voice.LocalVoice,System.Boolean> <>9__56_0
::System::Func_2<::Photon::Voice::LocalVoice*, bool>* Photon::Voice::VoiceClient::$$c::_get_$$9__56_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$$c::_get_$$9__56_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Photon::Voice::LocalVoice*, bool>*>("Photon.Voice", "VoiceClient/<>c", "<>9__56_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Photon.Voice.LocalVoice,System.Boolean> <>9__56_0
void Photon::Voice::VoiceClient::$$c::_set_$$9__56_0(::System::Func_2<::Photon::Voice::LocalVoice*, bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$$c::_set_$$9__56_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Voice", "VoiceClient/<>c", "<>9__56_0", value)));
}
// Autogenerated method: Photon.Voice.VoiceClient/<>c..cctor
void Photon::Voice::VoiceClient::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "VoiceClient/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceClient/<>c.<sendVoicesInfoAndConfigFrame>b__56_0
bool Photon::Voice::VoiceClient::$$c::$sendVoicesInfoAndConfigFrame$b__56_0(::Photon::Voice::LocalVoice* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceClient::$$c::<sendVoicesInfoAndConfigFrame>b__56_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<sendVoicesInfoAndConfigFrame>b__56_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.FrameFlags
#include "Photon/Voice/FrameFlags.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Voice.FrameFlags Config
::Photon::Voice::FrameFlags Photon::Voice::FrameFlags::_get_Config() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameFlags::_get_Config");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::FrameFlags>("Photon.Voice", "FrameFlags", "Config"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.FrameFlags Config
void Photon::Voice::FrameFlags::_set_Config(::Photon::Voice::FrameFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameFlags::_set_Config");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "FrameFlags", "Config", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.FrameFlags KeyFrame
::Photon::Voice::FrameFlags Photon::Voice::FrameFlags::_get_KeyFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameFlags::_get_KeyFrame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::FrameFlags>("Photon.Voice", "FrameFlags", "KeyFrame"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.FrameFlags KeyFrame
void Photon::Voice::FrameFlags::_set_KeyFrame(::Photon::Voice::FrameFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameFlags::_set_KeyFrame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "FrameFlags", "KeyFrame", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.FrameFlags PartialFrame
::Photon::Voice::FrameFlags Photon::Voice::FrameFlags::_get_PartialFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameFlags::_get_PartialFrame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::FrameFlags>("Photon.Voice", "FrameFlags", "PartialFrame"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.FrameFlags PartialFrame
void Photon::Voice::FrameFlags::_set_PartialFrame(::Photon::Voice::FrameFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameFlags::_set_PartialFrame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "FrameFlags", "PartialFrame", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.FrameFlags EndOfStream
::Photon::Voice::FrameFlags Photon::Voice::FrameFlags::_get_EndOfStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameFlags::_get_EndOfStream");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::FrameFlags>("Photon.Voice", "FrameFlags", "EndOfStream"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.FrameFlags EndOfStream
void Photon::Voice::FrameFlags::_set_EndOfStream(::Photon::Voice::FrameFlags value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameFlags::_set_EndOfStream");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "FrameFlags", "EndOfStream", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Photon::Voice::FrameFlags::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::FrameFlags::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.IEncoder
#include "Photon/Voice/IEncoder.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.IEncoder.get_Error
::StringW Photon::Voice::IEncoder::get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IEncoder::get_Error");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::IEncoder*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.IEncoder.set_Output
void Photon::Voice::IEncoder::set_Output(::System::Action_2<::System::ArraySegment_1<uint8_t>, ::Photon::Voice::FrameFlags>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IEncoder::set_Output");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::IEncoder*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.IEncoder.DequeueOutput
::System::ArraySegment_1<uint8_t> Photon::Voice::IEncoder::DequeueOutput(ByRef<::Photon::Voice::FrameFlags> flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IEncoder::DequeueOutput");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::IEncoder*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::ArraySegment_1<uint8_t>, false>(this, ___internal__method, byref(flags));
}
// Autogenerated method: Photon.Voice.IEncoder.EndOfStream
void Photon::Voice::IEncoder::EndOfStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IEncoder::EndOfStream");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::IEncoder*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.IEncoderDirectImage
#include "Photon/Voice/IEncoderDirectImage.hpp"
// Including type: Photon.Voice.ImageBufferNative
#include "Photon/Voice/ImageBufferNative.hpp"
// Including type: Photon.Voice.ImageFormat
#include "Photon/Voice/ImageFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.IEncoderDirectImage.get_ImageFormat
::Photon::Voice::ImageFormat Photon::Voice::IEncoderDirectImage::get_ImageFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IEncoderDirectImage::get_ImageFormat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::IEncoderDirectImage*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::ImageFormat, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.IDecoder
#include "Photon/Voice/IDecoder.hpp"
// Including type: Photon.Voice.VoiceInfo
#include "Photon/Voice/VoiceInfo.hpp"
// Including type: Photon.Voice.FrameBuffer
#include "Photon/Voice/FrameBuffer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.IDecoder.Open
void Photon::Voice::IDecoder::Open(::Photon::Voice::VoiceInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IDecoder::Open");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::IDecoder*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info);
}
// Autogenerated method: Photon.Voice.IDecoder.get_Error
::StringW Photon::Voice::IDecoder::get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IDecoder::get_Error");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::IDecoder*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.IDecoder.Input
void Photon::Voice::IDecoder::Input(ByRef<::Photon::Voice::FrameBuffer> buf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IDecoder::Input");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::IDecoder*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(buf));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.IDecoderQueuedOutputImageNative
#include "Photon/Voice/IDecoderQueuedOutputImageNative.hpp"
// Including type: System.Func`3
#include "System/Func_3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.IDecoderQueuedOutputImageNative.get_OutputImageFormat
::Photon::Voice::ImageFormat Photon::Voice::IDecoderQueuedOutputImageNative::get_OutputImageFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IDecoderQueuedOutputImageNative::get_OutputImageFormat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::IDecoderQueuedOutputImageNative*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::ImageFormat, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.IDecoderQueuedOutputImageNative.set_OutputImageFormat
void Photon::Voice::IDecoderQueuedOutputImageNative::set_OutputImageFormat(::Photon::Voice::ImageFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IDecoderQueuedOutputImageNative::set_OutputImageFormat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::IDecoderQueuedOutputImageNative*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.IDecoderQueuedOutputImageNative.get_OutputImageBufferGetter
::System::Func_3<int, int, ::System::IntPtr>* Photon::Voice::IDecoderQueuedOutputImageNative::get_OutputImageBufferGetter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IDecoderQueuedOutputImageNative::get_OutputImageBufferGetter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::IDecoderQueuedOutputImageNative*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_3<int, int, ::System::IntPtr>*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.IDecoderQueuedOutputImageNative.set_OutputImageBufferGetter
void Photon::Voice::IDecoderQueuedOutputImageNative::set_OutputImageBufferGetter(::System::Func_3<int, int, ::System::IntPtr>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IDecoderQueuedOutputImageNative::set_OutputImageBufferGetter");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::IDecoderQueuedOutputImageNative*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.UnsupportedSampleTypeException
#include "Photon/Voice/UnsupportedSampleTypeException.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.UnsupportedCodecException
#include "Photon/Voice/UnsupportedCodecException.hpp"
// Including type: Photon.Voice.ILogger
#include "Photon/Voice/ILogger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Codec
#include "Photon/Voice/Codec.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Voice.Codec Raw
::Photon::Voice::Codec Photon::Voice::Codec::_get_Raw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Codec::_get_Raw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::Codec>("Photon.Voice", "Codec", "Raw"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.Codec Raw
void Photon::Voice::Codec::_set_Raw(::Photon::Voice::Codec value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Codec::_set_Raw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "Codec", "Raw", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.Codec AudioOpus
::Photon::Voice::Codec Photon::Voice::Codec::_get_AudioOpus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Codec::_get_AudioOpus");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::Codec>("Photon.Voice", "Codec", "AudioOpus"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.Codec AudioOpus
void Photon::Voice::Codec::_set_AudioOpus(::Photon::Voice::Codec value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Codec::_set_AudioOpus");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "Codec", "AudioOpus", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Voice::Codec::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Codec::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.ImageFormat
#include "Photon/Voice/ImageFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Voice.ImageFormat Undefined
::Photon::Voice::ImageFormat Photon::Voice::ImageFormat::_get_Undefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageFormat::_get_Undefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::ImageFormat>("Photon.Voice", "ImageFormat", "Undefined"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.ImageFormat Undefined
void Photon::Voice::ImageFormat::_set_Undefined(::Photon::Voice::ImageFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageFormat::_set_Undefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "ImageFormat", "Undefined", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.ImageFormat I420
::Photon::Voice::ImageFormat Photon::Voice::ImageFormat::_get_I420() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageFormat::_get_I420");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::ImageFormat>("Photon.Voice", "ImageFormat", "I420"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.ImageFormat I420
void Photon::Voice::ImageFormat::_set_I420(::Photon::Voice::ImageFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageFormat::_set_I420");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "ImageFormat", "I420", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.ImageFormat YV12
::Photon::Voice::ImageFormat Photon::Voice::ImageFormat::_get_YV12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageFormat::_get_YV12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::ImageFormat>("Photon.Voice", "ImageFormat", "YV12"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.ImageFormat YV12
void Photon::Voice::ImageFormat::_set_YV12(::Photon::Voice::ImageFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageFormat::_set_YV12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "ImageFormat", "YV12", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.ImageFormat Android420
::Photon::Voice::ImageFormat Photon::Voice::ImageFormat::_get_Android420() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageFormat::_get_Android420");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::ImageFormat>("Photon.Voice", "ImageFormat", "Android420"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.ImageFormat Android420
void Photon::Voice::ImageFormat::_set_Android420(::Photon::Voice::ImageFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageFormat::_set_Android420");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "ImageFormat", "Android420", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.ImageFormat RGBA
::Photon::Voice::ImageFormat Photon::Voice::ImageFormat::_get_RGBA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageFormat::_get_RGBA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::ImageFormat>("Photon.Voice", "ImageFormat", "RGBA"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.ImageFormat RGBA
void Photon::Voice::ImageFormat::_set_RGBA(::Photon::Voice::ImageFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageFormat::_set_RGBA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "ImageFormat", "RGBA", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.ImageFormat ABGR
::Photon::Voice::ImageFormat Photon::Voice::ImageFormat::_get_ABGR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageFormat::_get_ABGR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::ImageFormat>("Photon.Voice", "ImageFormat", "ABGR"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.ImageFormat ABGR
void Photon::Voice::ImageFormat::_set_ABGR(::Photon::Voice::ImageFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageFormat::_set_ABGR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "ImageFormat", "ABGR", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.ImageFormat BGRA
::Photon::Voice::ImageFormat Photon::Voice::ImageFormat::_get_BGRA() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageFormat::_get_BGRA");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::ImageFormat>("Photon.Voice", "ImageFormat", "BGRA"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.ImageFormat BGRA
void Photon::Voice::ImageFormat::_set_BGRA(::Photon::Voice::ImageFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageFormat::_set_BGRA");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "ImageFormat", "BGRA", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.ImageFormat ARGB
::Photon::Voice::ImageFormat Photon::Voice::ImageFormat::_get_ARGB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageFormat::_get_ARGB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::ImageFormat>("Photon.Voice", "ImageFormat", "ARGB"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.ImageFormat ARGB
void Photon::Voice::ImageFormat::_set_ARGB(::Photon::Voice::ImageFormat value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageFormat::_set_ARGB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "ImageFormat", "ARGB", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Voice::ImageFormat::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageFormat::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Rotation
#include "Photon/Voice/Rotation.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Voice.Rotation Undefined
::Photon::Voice::Rotation Photon::Voice::Rotation::_get_Undefined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Rotation::_get_Undefined");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::Rotation>("Photon.Voice", "Rotation", "Undefined"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.Rotation Undefined
void Photon::Voice::Rotation::_set_Undefined(::Photon::Voice::Rotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Rotation::_set_Undefined");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "Rotation", "Undefined", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.Rotation Rotate0
::Photon::Voice::Rotation Photon::Voice::Rotation::_get_Rotate0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Rotation::_get_Rotate0");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::Rotation>("Photon.Voice", "Rotation", "Rotate0"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.Rotation Rotate0
void Photon::Voice::Rotation::_set_Rotate0(::Photon::Voice::Rotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Rotation::_set_Rotate0");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "Rotation", "Rotate0", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.Rotation Rotate90
::Photon::Voice::Rotation Photon::Voice::Rotation::_get_Rotate90() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Rotation::_get_Rotate90");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::Rotation>("Photon.Voice", "Rotation", "Rotate90"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.Rotation Rotate90
void Photon::Voice::Rotation::_set_Rotate90(::Photon::Voice::Rotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Rotation::_set_Rotate90");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "Rotation", "Rotate90", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.Rotation Rotate180
::Photon::Voice::Rotation Photon::Voice::Rotation::_get_Rotate180() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Rotation::_get_Rotate180");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::Rotation>("Photon.Voice", "Rotation", "Rotate180"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.Rotation Rotate180
void Photon::Voice::Rotation::_set_Rotate180(::Photon::Voice::Rotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Rotation::_set_Rotate180");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "Rotation", "Rotate180", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.Rotation Rotate270
::Photon::Voice::Rotation Photon::Voice::Rotation::_get_Rotate270() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Rotation::_get_Rotate270");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::Rotation>("Photon.Voice", "Rotation", "Rotate270"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.Rotation Rotate270
void Photon::Voice::Rotation::_set_Rotate270(::Photon::Voice::Rotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Rotation::_set_Rotate270");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "Rotation", "Rotate270", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Voice::Rotation::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Rotation::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Voice.Flip
#include "Photon/Voice/Flip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Voice.Flip None
::Photon::Voice::Flip Photon::Voice::Flip::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Flip::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::Flip>("Photon.Voice", "Flip", "None"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.Flip None
void Photon::Voice::Flip::_set_None(::Photon::Voice::Flip value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Flip::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "Flip", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.Flip Vertical
::Photon::Voice::Flip Photon::Voice::Flip::_get_Vertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Flip::_get_Vertical");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::Flip>("Photon.Voice", "Flip", "Vertical"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.Flip Vertical
void Photon::Voice::Flip::_set_Vertical(::Photon::Voice::Flip value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Flip::_set_Vertical");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "Flip", "Vertical", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.Flip Horizontal
::Photon::Voice::Flip Photon::Voice::Flip::_get_Horizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Flip::_get_Horizontal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::Flip>("Photon.Voice", "Flip", "Horizontal"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.Flip Horizontal
void Photon::Voice::Flip::_set_Horizontal(::Photon::Voice::Flip value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Flip::_set_Horizontal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "Flip", "Horizontal", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.Flip Both
::Photon::Voice::Flip Photon::Voice::Flip::_get_Both() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Flip::_get_Both");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::Flip>("Photon.Voice", "Flip", "Both"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.Flip Both
void Photon::Voice::Flip::_set_Both(::Photon::Voice::Flip value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Flip::_set_Both");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "Flip", "Both", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsVertical>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Flip::dyn_$IsVertical$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Flip::dyn_$IsVertical$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsVertical>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <IsHorizontal>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Flip::dyn_$IsHorizontal$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Flip::dyn_$IsHorizontal$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<IsHorizontal>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Flip.get_IsVertical
bool Photon::Voice::Flip::get_IsVertical() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Flip::get_IsVertical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Flip.set_IsVertical
void Photon::Voice::Flip::set_IsVertical(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Flip::set_IsVertical");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_IsVertical", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Flip.get_IsHorizontal
bool Photon::Voice::Flip::get_IsHorizontal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Flip::get_IsHorizontal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Flip.set_IsHorizontal
void Photon::Voice::Flip::set_IsHorizontal(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Flip::set_IsHorizontal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_IsHorizontal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Flip..cctor
void Photon::Voice::Flip::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Flip::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "Flip", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Voice.Flip.Equals
bool Photon::Voice::Flip::Equals(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Flip::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 0));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, obj);
}
// Autogenerated method: Photon.Voice.Flip.GetHashCode
int Photon::Voice::Flip::GetHashCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Flip::GetHashCode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 2));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Flip.op_Equality
bool Photon::Voice::operator ==(const ::Photon::Voice::Flip& f1, const ::Photon::Voice::Flip& f2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Flip::op_Equality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "Flip", "op_Equality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f1), ::il2cpp_utils::ExtractType(f2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f1, f2);
}
// Autogenerated method: Photon.Voice.Flip.op_Inequality
bool Photon::Voice::operator !=(const ::Photon::Voice::Flip& f1, const ::Photon::Voice::Flip& f2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Flip::op_Inequality");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "Flip", "op_Inequality", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f1), ::il2cpp_utils::ExtractType(f2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f1, f2);
}
// Autogenerated method: Photon.Voice.Flip.op_Multiply
::Photon::Voice::Flip Photon::Voice::operator*(const ::Photon::Voice::Flip& f1, const ::Photon::Voice::Flip& f2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Flip::op_Multiply");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "Flip", "op_Multiply", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f1), ::il2cpp_utils::ExtractType(f2)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::Flip, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, f1, f2);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.ImageBufferInfo
#include "Photon/Voice/ImageBufferInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <Width>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Voice::ImageBufferInfo::dyn_$Width$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageBufferInfo::dyn_$Width$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Width>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32 <Height>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Voice::ImageBufferInfo::dyn_$Height$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageBufferInfo::dyn_$Height$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Height>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int32[] <Stride>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<int>& Photon::Voice::ImageBufferInfo::dyn_$Stride$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageBufferInfo::dyn_$Stride$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Stride>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Photon.Voice.ImageFormat <Format>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Voice::ImageFormat& Photon::Voice::ImageBufferInfo::dyn_$Format$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageBufferInfo::dyn_$Format$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Format>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Voice::ImageFormat*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Rotation <Rotation>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Voice::Rotation& Photon::Voice::ImageBufferInfo::dyn_$Rotation$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageBufferInfo::dyn_$Rotation$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Rotation>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Voice::Rotation*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Flip <Flip>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Voice::Flip& Photon::Voice::ImageBufferInfo::dyn_$Flip$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageBufferInfo::dyn_$Flip$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Flip>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Voice::Flip*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.ImageBufferInfo.get_Width
int Photon::Voice::ImageBufferInfo::get_Width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageBufferInfo::get_Width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.ImageBufferInfo.get_Height
int Photon::Voice::ImageBufferInfo::get_Height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageBufferInfo::get_Height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.ImageBufferInfo.get_Stride
::ArrayW<int> Photon::Voice::ImageBufferInfo::get_Stride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageBufferInfo::get_Stride");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Stride", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int>, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.ImageBufferInfo.get_Format
::Photon::Voice::ImageFormat Photon::Voice::ImageBufferInfo::get_Format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageBufferInfo::get_Format");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Format", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::ImageFormat, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.ImageBufferInfo.get_Rotation
::Photon::Voice::Rotation Photon::Voice::ImageBufferInfo::get_Rotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageBufferInfo::get_Rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::Rotation, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.ImageBufferInfo.set_Rotation
void Photon::Voice::ImageBufferInfo::set_Rotation(::Photon::Voice::Rotation value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageBufferInfo::set_Rotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Rotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.ImageBufferInfo.get_Flip
::Photon::Voice::Flip Photon::Voice::ImageBufferInfo::get_Flip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageBufferInfo::get_Flip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Flip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::Flip, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.ImageBufferInfo.set_Flip
void Photon::Voice::ImageBufferInfo::set_Flip(::Photon::Voice::Flip value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageBufferInfo::set_Flip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Flip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.ImageBufferNative
#include "Photon/Voice/ImageBufferNative.hpp"
// Including type: Photon.Voice.ImageBufferInfo
#include "Photon/Voice/ImageBufferInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly Photon.Voice.ImageBufferInfo <Info>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Voice::ImageBufferInfo*& Photon::Voice::ImageBufferNative::dyn_$Info$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageBufferNative::dyn_$Info$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Info>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Voice::ImageBufferInfo**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr[] <Planes>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::System::IntPtr>& Photon::Voice::ImageBufferNative::dyn_$Planes$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageBufferNative::dyn_$Planes$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Planes>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::System::IntPtr>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.ImageBufferNative.get_Info
::Photon::Voice::ImageBufferInfo* Photon::Voice::ImageBufferNative::get_Info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageBufferNative::get_Info");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Info", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::ImageBufferInfo*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.ImageBufferNative.get_Planes
::ArrayW<::System::IntPtr> Photon::Voice::ImageBufferNative::get_Planes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageBufferNative::get_Planes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Planes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::System::IntPtr>, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.ImageBufferNative.set_Planes
void Photon::Voice::ImageBufferNative::set_Planes(::ArrayW<::System::IntPtr> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageBufferNative::set_Planes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Planes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.ImageBufferNative.Release
void Photon::Voice::ImageBufferNative::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageBufferNative::Release");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::ImageBufferNative*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.ImageBufferNative.Dispose
void Photon::Voice::ImageBufferNative::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageBufferNative::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::ImageBufferNative*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.ImageBufferNativeAlloc
#include "Photon/Voice/ImageBufferNativeAlloc.hpp"
// Including type: Photon.Voice.ImageBufferNativePool`1
#include "Photon/Voice/ImageBufferNativePool_1.hpp"
// Including type: Photon.Voice.ImageBufferInfo
#include "Photon/Voice/ImageBufferInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.ImageBufferNativePool`1<Photon.Voice.ImageBufferNativeAlloc> pool
[[deprecated("Use field access instead!")]] ::Photon::Voice::ImageBufferNativePool_1<::Photon::Voice::ImageBufferNativeAlloc*>*& Photon::Voice::ImageBufferNativeAlloc::dyn_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageBufferNativeAlloc::dyn_pool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pool"))->offset;
  return *reinterpret_cast<::Photon::Voice::ImageBufferNativePool_1<::Photon::Voice::ImageBufferNativeAlloc*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.ImageBufferNativeAlloc.Release
void Photon::Voice::ImageBufferNativeAlloc::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageBufferNativeAlloc::Release");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::ImageBufferNative*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.ImageBufferNativeAlloc.Dispose
void Photon::Voice::ImageBufferNativeAlloc::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageBufferNativeAlloc::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::ImageBufferNative*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.ImageBufferNativeGCHandleSinglePlane
#include "Photon/Voice/ImageBufferNativeGCHandleSinglePlane.hpp"
// Including type: Photon.Voice.ImageBufferNativePool`1
#include "Photon/Voice/ImageBufferNativePool_1.hpp"
// Including type: Photon.Voice.ImageBufferInfo
#include "Photon/Voice/ImageBufferInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.ImageBufferNativePool`1<Photon.Voice.ImageBufferNativeGCHandleSinglePlane> pool
[[deprecated("Use field access instead!")]] ::Photon::Voice::ImageBufferNativePool_1<::Photon::Voice::ImageBufferNativeGCHandleSinglePlane*>*& Photon::Voice::ImageBufferNativeGCHandleSinglePlane::dyn_pool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageBufferNativeGCHandleSinglePlane::dyn_pool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pool"))->offset;
  return *reinterpret_cast<::Photon::Voice::ImageBufferNativePool_1<::Photon::Voice::ImageBufferNativeGCHandleSinglePlane*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Runtime.InteropServices.GCHandle planeHandle
[[deprecated("Use field access instead!")]] ::System::Runtime::InteropServices::GCHandle& Photon::Voice::ImageBufferNativeGCHandleSinglePlane::dyn_planeHandle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageBufferNativeGCHandleSinglePlane::dyn_planeHandle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "planeHandle"))->offset;
  return *reinterpret_cast<::System::Runtime::InteropServices::GCHandle*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.ImageBufferNativeGCHandleSinglePlane.PinPlane
void Photon::Voice::ImageBufferNativeGCHandleSinglePlane::PinPlane(::ArrayW<uint8_t> plane) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageBufferNativeGCHandleSinglePlane::PinPlane");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PinPlane", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(plane)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, plane);
}
// Autogenerated method: Photon.Voice.ImageBufferNativeGCHandleSinglePlane.Release
void Photon::Voice::ImageBufferNativeGCHandleSinglePlane::Release() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageBufferNativeGCHandleSinglePlane::Release");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::ImageBufferNative*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.ImageBufferNativeGCHandleSinglePlane.Dispose
void Photon::Voice::ImageBufferNativeGCHandleSinglePlane::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::ImageBufferNativeGCHandleSinglePlane::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::ImageBufferNative*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.LocalVoiceFramedBase
#include "Photon/Voice/LocalVoiceFramedBase.hpp"
// Including type: Photon.Voice.VoiceClient
#include "Photon/Voice/VoiceClient.hpp"
// Including type: Photon.Voice.IEncoder
#include "Photon/Voice/IEncoder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <FrameSize>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Voice::LocalVoiceFramedBase::dyn_$FrameSize$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoiceFramedBase::dyn_$FrameSize$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FrameSize>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.LocalVoiceFramedBase.get_FrameSize
int Photon::Voice::LocalVoiceFramedBase::get_FrameSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoiceFramedBase::get_FrameSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FrameSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.LocalVoiceFramedBase.set_FrameSize
void Photon::Voice::LocalVoiceFramedBase::set_FrameSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LocalVoiceFramedBase::set_FrameSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FrameSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Voice.VoiceInfo
#include "Photon/Voice/VoiceInfo.hpp"
// Including type: POpusCodec.Enums.SamplingRate
#include "POpusCodec/Enums/SamplingRate.hpp"
// Including type: Photon.Voice.OpusCodec/FrameDuration
#include "Photon/Voice/OpusCodec_FrameDuration.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Codec <Codec>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Voice::Codec& Photon::Voice::VoiceInfo::dyn_$Codec$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::dyn_$Codec$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Codec>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Voice::Codec*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <SamplingRate>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Voice::VoiceInfo::dyn_$SamplingRate$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::dyn_$SamplingRate$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<SamplingRate>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Channels>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Voice::VoiceInfo::dyn_$Channels$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::dyn_$Channels$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Channels>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <FrameDurationUs>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Voice::VoiceInfo::dyn_$FrameDurationUs$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::dyn_$FrameDurationUs$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FrameDurationUs>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Bitrate>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Voice::VoiceInfo::dyn_$Bitrate$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::dyn_$Bitrate$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Bitrate>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Width>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Voice::VoiceInfo::dyn_$Width$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::dyn_$Width$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Width>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <Height>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Voice::VoiceInfo::dyn_$Height$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::dyn_$Height$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Height>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <FPS>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Voice::VoiceInfo::dyn_$FPS$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::dyn_$FPS$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FPS>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <KeyFrameInt>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Voice::VoiceInfo::dyn_$KeyFrameInt$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::dyn_$KeyFrameInt$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<KeyFrameInt>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <UserData>k__BackingField
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Photon::Voice::VoiceInfo::dyn_$UserData$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::dyn_$UserData$k__BackingField");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<UserData>k__BackingField"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.VoiceInfo.CreateAudioOpus
::Photon::Voice::VoiceInfo Photon::Voice::VoiceInfo::CreateAudioOpus(::POpusCodec::Enums::SamplingRate samplingRate, int channels, ::Photon::Voice::OpusCodec::FrameDuration frameDurationUs, int bitrate, ::Il2CppObject* userdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::CreateAudioOpus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "VoiceInfo", "CreateAudioOpus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(samplingRate), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(frameDurationUs), ::il2cpp_utils::ExtractType(bitrate), ::il2cpp_utils::ExtractType(userdata)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::VoiceInfo, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, samplingRate, channels, frameDurationUs, bitrate, userdata);
}
// Autogenerated method: Photon.Voice.VoiceInfo.CreateAudio
::Photon::Voice::VoiceInfo Photon::Voice::VoiceInfo::CreateAudio(::Photon::Voice::Codec codec, int samplingRate, int channels, int frameDurationUs, ::Il2CppObject* userdata) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::CreateAudio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "VoiceInfo", "CreateAudio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(codec), ::il2cpp_utils::ExtractType(samplingRate), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(frameDurationUs), ::il2cpp_utils::ExtractType(userdata)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::VoiceInfo, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, codec, samplingRate, channels, frameDurationUs, userdata);
}
// Autogenerated method: Photon.Voice.VoiceInfo.get_Codec
::Photon::Voice::Codec Photon::Voice::VoiceInfo::get_Codec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::get_Codec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Codec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::Codec, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceInfo.set_Codec
void Photon::Voice::VoiceInfo::set_Codec(::Photon::Voice::Codec value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::set_Codec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Codec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.VoiceInfo.get_SamplingRate
int Photon::Voice::VoiceInfo::get_SamplingRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::get_SamplingRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_SamplingRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceInfo.set_SamplingRate
void Photon::Voice::VoiceInfo::set_SamplingRate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::set_SamplingRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_SamplingRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.VoiceInfo.get_Channels
int Photon::Voice::VoiceInfo::get_Channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::get_Channels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Channels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceInfo.set_Channels
void Photon::Voice::VoiceInfo::set_Channels(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::set_Channels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Channels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.VoiceInfo.get_FrameDurationUs
int Photon::Voice::VoiceInfo::get_FrameDurationUs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::get_FrameDurationUs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_FrameDurationUs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceInfo.set_FrameDurationUs
void Photon::Voice::VoiceInfo::set_FrameDurationUs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::set_FrameDurationUs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_FrameDurationUs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.VoiceInfo.get_Bitrate
int Photon::Voice::VoiceInfo::get_Bitrate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::get_Bitrate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Bitrate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceInfo.set_Bitrate
void Photon::Voice::VoiceInfo::set_Bitrate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::set_Bitrate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Bitrate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.VoiceInfo.get_Width
int Photon::Voice::VoiceInfo::get_Width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::get_Width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceInfo.set_Width
void Photon::Voice::VoiceInfo::set_Width(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::set_Width");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Width", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.VoiceInfo.get_Height
int Photon::Voice::VoiceInfo::get_Height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::get_Height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceInfo.set_Height
void Photon::Voice::VoiceInfo::set_Height(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::set_Height");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Height", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.VoiceInfo.get_FPS
int Photon::Voice::VoiceInfo::get_FPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::get_FPS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_FPS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceInfo.set_FPS
void Photon::Voice::VoiceInfo::set_FPS(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::set_FPS");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_FPS", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.VoiceInfo.get_KeyFrameInt
int Photon::Voice::VoiceInfo::get_KeyFrameInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::get_KeyFrameInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_KeyFrameInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceInfo.set_KeyFrameInt
void Photon::Voice::VoiceInfo::set_KeyFrameInt(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::set_KeyFrameInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_KeyFrameInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.VoiceInfo.get_UserData
::Il2CppObject* Photon::Voice::VoiceInfo::get_UserData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::get_UserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_UserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceInfo.set_UserData
void Photon::Voice::VoiceInfo::set_UserData(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::set_UserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_UserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.VoiceInfo.get_FrameDurationSamples
int Photon::Voice::VoiceInfo::get_FrameDurationSamples() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::get_FrameDurationSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_FrameDurationSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceInfo.get_FrameSize
int Photon::Voice::VoiceInfo::get_FrameSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::get_FrameSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_FrameSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.VoiceInfo.ToString
::StringW Photon::Voice::VoiceInfo::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceInfo::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.RemoteVoiceInfo
#include "Photon/Voice/RemoteVoiceInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.VoiceInfo <Info>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Voice::VoiceInfo& Photon::Voice::RemoteVoiceInfo::dyn_$Info$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceInfo::dyn_$Info$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Info>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Voice::VoiceInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <ChannelId>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Voice::RemoteVoiceInfo::dyn_$ChannelId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceInfo::dyn_$ChannelId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<ChannelId>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <PlayerId>k__BackingField
[[deprecated("Use field access instead!")]] int& Photon::Voice::RemoteVoiceInfo::dyn_$PlayerId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceInfo::dyn_$PlayerId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PlayerId>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte <VoiceId>k__BackingField
[[deprecated("Use field access instead!")]] uint8_t& Photon::Voice::RemoteVoiceInfo::dyn_$VoiceId$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceInfo::dyn_$VoiceId$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<VoiceId>k__BackingField"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.RemoteVoiceInfo.get_Info
::Photon::Voice::VoiceInfo Photon::Voice::RemoteVoiceInfo::get_Info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceInfo::get_Info");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Info", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::VoiceInfo, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.RemoteVoiceInfo.set_Info
void Photon::Voice::RemoteVoiceInfo::set_Info(::Photon::Voice::VoiceInfo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceInfo::set_Info");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Info", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.RemoteVoiceInfo.get_ChannelId
int Photon::Voice::RemoteVoiceInfo::get_ChannelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceInfo::get_ChannelId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChannelId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.RemoteVoiceInfo.set_ChannelId
void Photon::Voice::RemoteVoiceInfo::set_ChannelId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceInfo::set_ChannelId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ChannelId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.RemoteVoiceInfo.get_PlayerId
int Photon::Voice::RemoteVoiceInfo::get_PlayerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceInfo::get_PlayerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlayerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.RemoteVoiceInfo.set_PlayerId
void Photon::Voice::RemoteVoiceInfo::set_PlayerId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceInfo::set_PlayerId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PlayerId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.RemoteVoiceInfo.get_VoiceId
uint8_t Photon::Voice::RemoteVoiceInfo::get_VoiceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceInfo::get_VoiceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VoiceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.RemoteVoiceInfo.set_VoiceId
void Photon::Voice::RemoteVoiceInfo::set_VoiceId(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::RemoteVoiceInfo::set_VoiceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VoiceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.BufferReaderPushAdapterAsyncPoolFloatToShort
#include "Photon/Voice/BufferReaderPushAdapterAsyncPoolFloatToShort.hpp"
// Including type: Photon.Voice.LocalVoice
#include "Photon/Voice/LocalVoice.hpp"
// Including type: Photon.Voice.IDataReader`1
#include "Photon/Voice/IDataReader_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Photon::Voice::BufferReaderPushAdapterAsyncPoolFloatToShort::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::BufferReaderPushAdapterAsyncPoolFloatToShort::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.BufferReaderPushAdapterAsyncPoolFloatToShort.Service
void Photon::Voice::BufferReaderPushAdapterAsyncPoolFloatToShort::Service(::Photon::Voice::LocalVoice* localVoice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::BufferReaderPushAdapterAsyncPoolFloatToShort::Service");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::BufferReaderPushAdapterBase_1<T>*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localVoice);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.BufferReaderPushAdapterAsyncPoolShortToFloat
#include "Photon/Voice/BufferReaderPushAdapterAsyncPoolShortToFloat.hpp"
// Including type: Photon.Voice.LocalVoice
#include "Photon/Voice/LocalVoice.hpp"
// Including type: Photon.Voice.IDataReader`1
#include "Photon/Voice/IDataReader_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int16[] buffer
[[deprecated("Use field access instead!")]] ::ArrayW<int16_t>& Photon::Voice::BufferReaderPushAdapterAsyncPoolShortToFloat::dyn_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::BufferReaderPushAdapterAsyncPoolShortToFloat::dyn_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buffer"))->offset;
  return *reinterpret_cast<::ArrayW<int16_t>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.BufferReaderPushAdapterAsyncPoolShortToFloat.Service
void Photon::Voice::BufferReaderPushAdapterAsyncPoolShortToFloat::Service(::Photon::Voice::LocalVoice* localVoice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::BufferReaderPushAdapterAsyncPoolShortToFloat::Service");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::BufferReaderPushAdapterBase_1<T>*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, localVoice);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.WebRTCAudioProcessor
#include "Photon/Voice/WebRTCAudioProcessor.hpp"
// Including type: System.Collections.Generic.Queue`1
#include "System/Collections/Generic/Queue_1.hpp"
// Including type: System.Threading.AutoResetEvent
#include "System/Threading/AutoResetEvent.hpp"
// Including type: Photon.Voice.FactoryPrimitiveArrayPool`1
#include "Photon/Voice/FactoryPrimitiveArrayPool_1.hpp"
// Including type: Photon.Voice.Framer`1
#include "Photon/Voice/Framer_1.hpp"
// Including type: Photon.Voice.ILogger
#include "Photon/Voice/ILogger.hpp"
// Including type: Photon.Voice.WebRTCAudioLib/Param
#include "Photon/Voice/WebRTCAudioLib_Param.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 REVERSE_BUFFER_POOL_CAPACITY
int Photon::Voice::WebRTCAudioProcessor::_get_REVERSE_BUFFER_POOL_CAPACITY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::_get_REVERSE_BUFFER_POOL_CAPACITY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Voice", "WebRTCAudioProcessor", "REVERSE_BUFFER_POOL_CAPACITY"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 REVERSE_BUFFER_POOL_CAPACITY
void Photon::Voice::WebRTCAudioProcessor::_set_REVERSE_BUFFER_POOL_CAPACITY(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::_set_REVERSE_BUFFER_POOL_CAPACITY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioProcessor", "REVERSE_BUFFER_POOL_CAPACITY", value));
}
// Autogenerated static field getter
// Get static field: static private System.Int32 supportedFrameLenMs
int Photon::Voice::WebRTCAudioProcessor::_get_supportedFrameLenMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::_get_supportedFrameLenMs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Voice", "WebRTCAudioProcessor", "supportedFrameLenMs"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 supportedFrameLenMs
void Photon::Voice::WebRTCAudioProcessor::_set_supportedFrameLenMs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::_set_supportedFrameLenMs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioProcessor", "supportedFrameLenMs", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Int32[] SupportedSamplingRates
::ArrayW<int> Photon::Voice::WebRTCAudioProcessor::_get_SupportedSamplingRates() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::_get_SupportedSamplingRates");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("Photon.Voice", "WebRTCAudioProcessor", "SupportedSamplingRates"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Int32[] SupportedSamplingRates
void Photon::Voice::WebRTCAudioProcessor::_set_SupportedSamplingRates(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::_set_SupportedSamplingRates");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioProcessor", "SupportedSamplingRates", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 reverseStreamDelayMs
[[deprecated("Use field access instead!")]] int& Photon::Voice::WebRTCAudioProcessor::dyn_reverseStreamDelayMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::dyn_reverseStreamDelayMs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverseStreamDelayMs"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean aec
[[deprecated("Use field access instead!")]] bool& Photon::Voice::WebRTCAudioProcessor::dyn_aec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::dyn_aec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aec"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean aecHighPass
[[deprecated("Use field access instead!")]] bool& Photon::Voice::WebRTCAudioProcessor::dyn_aecHighPass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::dyn_aecHighPass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aecHighPass"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean aecm
[[deprecated("Use field access instead!")]] bool& Photon::Voice::WebRTCAudioProcessor::dyn_aecm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::dyn_aecm");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aecm"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean highPass
[[deprecated("Use field access instead!")]] bool& Photon::Voice::WebRTCAudioProcessor::dyn_highPass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::dyn_highPass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "highPass"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ns
[[deprecated("Use field access instead!")]] bool& Photon::Voice::WebRTCAudioProcessor::dyn_ns() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::dyn_ns");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ns"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean agc
[[deprecated("Use field access instead!")]] bool& Photon::Voice::WebRTCAudioProcessor::dyn_agc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::dyn_agc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "agc"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 agcCompressionGain
[[deprecated("Use field access instead!")]] int& Photon::Voice::WebRTCAudioProcessor::dyn_agcCompressionGain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::dyn_agcCompressionGain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "agcCompressionGain"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 agcTargetLevel
[[deprecated("Use field access instead!")]] int& Photon::Voice::WebRTCAudioProcessor::dyn_agcTargetLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::dyn_agcTargetLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "agcTargetLevel"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean agc2
[[deprecated("Use field access instead!")]] bool& Photon::Voice::WebRTCAudioProcessor::dyn_agc2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::dyn_agc2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "agc2"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean vad
[[deprecated("Use field access instead!")]] bool& Photon::Voice::WebRTCAudioProcessor::dyn_vad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::dyn_vad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vad"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean reverseStreamThreadRunning
[[deprecated("Use field access instead!")]] bool& Photon::Voice::WebRTCAudioProcessor::dyn_reverseStreamThreadRunning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::dyn_reverseStreamThreadRunning");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverseStreamThreadRunning"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Queue`1<System.Int16[]> reverseStreamQueue
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Queue_1<::ArrayW<int16_t>>*& Photon::Voice::WebRTCAudioProcessor::dyn_reverseStreamQueue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::dyn_reverseStreamQueue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverseStreamQueue"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Queue_1<::ArrayW<int16_t>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.AutoResetEvent reverseStreamQueueReady
[[deprecated("Use field access instead!")]] ::System::Threading::AutoResetEvent*& Photon::Voice::WebRTCAudioProcessor::dyn_reverseStreamQueueReady() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::dyn_reverseStreamQueueReady");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverseStreamQueueReady"))->offset;
  return *reinterpret_cast<::System::Threading::AutoResetEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.FactoryPrimitiveArrayPool`1<System.Int16> reverseBufferFactory
[[deprecated("Use field access instead!")]] ::Photon::Voice::FactoryPrimitiveArrayPool_1<int16_t>*& Photon::Voice::WebRTCAudioProcessor::dyn_reverseBufferFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::dyn_reverseBufferFactory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverseBufferFactory"))->offset;
  return *reinterpret_cast<::Photon::Voice::FactoryPrimitiveArrayPool_1<int16_t>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean bypass
[[deprecated("Use field access instead!")]] bool& Photon::Voice::WebRTCAudioProcessor::dyn_bypass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::dyn_bypass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bypass"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 inFrameSize
[[deprecated("Use field access instead!")]] int& Photon::Voice::WebRTCAudioProcessor::dyn_inFrameSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::dyn_inFrameSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inFrameSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 processFrameSize
[[deprecated("Use field access instead!")]] int& Photon::Voice::WebRTCAudioProcessor::dyn_processFrameSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::dyn_processFrameSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "processFrameSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 samplingRate
[[deprecated("Use field access instead!")]] int& Photon::Voice::WebRTCAudioProcessor::dyn_samplingRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::dyn_samplingRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "samplingRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 channels
[[deprecated("Use field access instead!")]] int& Photon::Voice::WebRTCAudioProcessor::dyn_channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::dyn_channels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "channels"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr proc
[[deprecated("Use field access instead!")]] ::System::IntPtr& Photon::Voice::WebRTCAudioProcessor::dyn_proc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::dyn_proc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "proc"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean disposed
[[deprecated("Use field access instead!")]] bool& Photon::Voice::WebRTCAudioProcessor::dyn_disposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::dyn_disposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Framer`1<System.Single> reverseFramer
[[deprecated("Use field access instead!")]] ::Photon::Voice::Framer_1<float>*& Photon::Voice::WebRTCAudioProcessor::dyn_reverseFramer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::dyn_reverseFramer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverseFramer"))->offset;
  return *reinterpret_cast<::Photon::Voice::Framer_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 reverseSamplingRate
[[deprecated("Use field access instead!")]] int& Photon::Voice::WebRTCAudioProcessor::dyn_reverseSamplingRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::dyn_reverseSamplingRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverseSamplingRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 reverseChannels
[[deprecated("Use field access instead!")]] int& Photon::Voice::WebRTCAudioProcessor::dyn_reverseChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::dyn_reverseChannels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverseChannels"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.ILogger logger
[[deprecated("Use field access instead!")]] ::Photon::Voice::ILogger*& Photon::Voice::WebRTCAudioProcessor::dyn_logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::dyn_logger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "logger"))->offset;
  return *reinterpret_cast<::Photon::Voice::ILogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean aecInited
[[deprecated("Use field access instead!")]] bool& Photon::Voice::WebRTCAudioProcessor::dyn_aecInited() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::dyn_aecInited");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aecInited"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastProcessErr
[[deprecated("Use field access instead!")]] int& Photon::Voice::WebRTCAudioProcessor::dyn_lastProcessErr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::dyn_lastProcessErr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastProcessErr"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastProcessReverseErr
[[deprecated("Use field access instead!")]] int& Photon::Voice::WebRTCAudioProcessor::dyn_lastProcessReverseErr() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::dyn_lastProcessReverseErr");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastProcessReverseErr"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.WebRTCAudioProcessor.set_AECStreamDelayMs
void Photon::Voice::WebRTCAudioProcessor::set_AECStreamDelayMs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::set_AECStreamDelayMs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AECStreamDelayMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.WebRTCAudioProcessor.set_AEC
void Photon::Voice::WebRTCAudioProcessor::set_AEC(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::set_AEC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AEC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.WebRTCAudioProcessor.set_AECHighPass
void Photon::Voice::WebRTCAudioProcessor::set_AECHighPass(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::set_AECHighPass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AECHighPass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.WebRTCAudioProcessor.set_AECMobile
void Photon::Voice::WebRTCAudioProcessor::set_AECMobile(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::set_AECMobile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AECMobile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.WebRTCAudioProcessor.set_HighPass
void Photon::Voice::WebRTCAudioProcessor::set_HighPass(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::set_HighPass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HighPass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.WebRTCAudioProcessor.set_NoiseSuppression
void Photon::Voice::WebRTCAudioProcessor::set_NoiseSuppression(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::set_NoiseSuppression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NoiseSuppression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.WebRTCAudioProcessor.set_AGC
void Photon::Voice::WebRTCAudioProcessor::set_AGC(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::set_AGC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AGC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.WebRTCAudioProcessor.set_AGCCompressionGain
void Photon::Voice::WebRTCAudioProcessor::set_AGCCompressionGain(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::set_AGCCompressionGain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AGCCompressionGain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.WebRTCAudioProcessor.set_AGCTargetLevel
void Photon::Voice::WebRTCAudioProcessor::set_AGCTargetLevel(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::set_AGCTargetLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AGCTargetLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.WebRTCAudioProcessor.set_AGC2
void Photon::Voice::WebRTCAudioProcessor::set_AGC2(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::set_AGC2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AGC2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.WebRTCAudioProcessor.set_VAD
void Photon::Voice::WebRTCAudioProcessor::set_VAD(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::set_VAD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VAD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.WebRTCAudioProcessor.set_Bypass
void Photon::Voice::WebRTCAudioProcessor::set_Bypass(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::set_Bypass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Bypass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.WebRTCAudioProcessor.get_Bypass
bool Photon::Voice::WebRTCAudioProcessor::get_Bypass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::get_Bypass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Bypass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.WebRTCAudioProcessor.InitReverseStream
void Photon::Voice::WebRTCAudioProcessor::InitReverseStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::InitReverseStream");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitReverseStream", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.WebRTCAudioProcessor.Process
::ArrayW<int16_t> Photon::Voice::WebRTCAudioProcessor::Process(::ArrayW<int16_t> buf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::Process");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::WebRTCAudioProcessor*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int16_t>, false>(this, ___internal__method, buf);
}
// Autogenerated method: Photon.Voice.WebRTCAudioProcessor.OnAudioOutFrameFloat
void Photon::Voice::WebRTCAudioProcessor::OnAudioOutFrameFloat(::ArrayW<float> data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::OnAudioOutFrameFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAudioOutFrameFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Photon.Voice.WebRTCAudioProcessor.ReverseStreamThread
void Photon::Voice::WebRTCAudioProcessor::ReverseStreamThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::ReverseStreamThread");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReverseStreamThread", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.WebRTCAudioProcessor.setParam
int Photon::Voice::WebRTCAudioProcessor::setParam(::Photon::Voice::WebRTCAudioLib::Param param, int v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::setParam");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "setParam", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(param), ::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, param, v);
}
// Autogenerated method: Photon.Voice.WebRTCAudioProcessor.Dispose
void Photon::Voice::WebRTCAudioProcessor::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::WebRTCAudioProcessor*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.WebRTCAudioProcessor..cctor
void Photon::Voice::WebRTCAudioProcessor::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioProcessor::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "WebRTCAudioProcessor", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.WebRTCAudioLib
#include "Photon/Voice/WebRTCAudioLib.hpp"
// Including type: Photon.Voice.WebRTCAudioLib/Error
#include "Photon/Voice/WebRTCAudioLib_Error.hpp"
// Including type: Photon.Voice.WebRTCAudioLib/Param
#include "Photon/Voice/WebRTCAudioLib_Param.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.IntPtr
#include "System/IntPtr.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String lib_name
::StringW Photon::Voice::WebRTCAudioLib::_get_lib_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::_get_lib_name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Voice", "WebRTCAudioLib", "lib_name"));
}
// Autogenerated static field setter
// Set static field: static private System.String lib_name
void Photon::Voice::WebRTCAudioLib::_set_lib_name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::_set_lib_name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib", "lib_name", value));
}
// Autogenerated method: Photon.Voice.WebRTCAudioLib.webrtc_audio_processor_create
::System::IntPtr Photon::Voice::WebRTCAudioLib::webrtc_audio_processor_create(int samplingRate, int channels, int frameSize, int revSamplingRate, int revChannels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::webrtc_audio_processor_create");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "WebRTCAudioLib", "webrtc_audio_processor_create", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(samplingRate), ::il2cpp_utils::ExtractType(channels), ::il2cpp_utils::ExtractType(frameSize), ::il2cpp_utils::ExtractType(revSamplingRate), ::il2cpp_utils::ExtractType(revChannels)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IntPtr, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, samplingRate, channels, frameSize, revSamplingRate, revChannels);
}
// Autogenerated method: Photon.Voice.WebRTCAudioLib.webrtc_audio_processor_init
int Photon::Voice::WebRTCAudioLib::webrtc_audio_processor_init(::System::IntPtr proc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::webrtc_audio_processor_init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "WebRTCAudioLib", "webrtc_audio_processor_init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proc)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proc);
}
// Autogenerated method: Photon.Voice.WebRTCAudioLib.webrtc_audio_processor_set_param
int Photon::Voice::WebRTCAudioLib::webrtc_audio_processor_set_param(::System::IntPtr proc, int param, int v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::webrtc_audio_processor_set_param");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "WebRTCAudioLib", "webrtc_audio_processor_set_param", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proc), ::il2cpp_utils::ExtractType(param), ::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proc, param, v);
}
// Autogenerated method: Photon.Voice.WebRTCAudioLib.webrtc_audio_processor_process
int Photon::Voice::WebRTCAudioLib::webrtc_audio_processor_process(::System::IntPtr proc, ::ArrayW<int16_t> buffer, int offset, ByRef<bool> voiceDetected) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::webrtc_audio_processor_process");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "WebRTCAudioLib", "webrtc_audio_processor_process", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proc), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractIndependentType<bool&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proc, buffer, offset, byref(voiceDetected));
}
// Autogenerated method: Photon.Voice.WebRTCAudioLib.webrtc_audio_processor_process_reverse
int Photon::Voice::WebRTCAudioLib::webrtc_audio_processor_process_reverse(::System::IntPtr proc, ::ArrayW<int16_t> buffer, int bufferSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::webrtc_audio_processor_process_reverse");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "WebRTCAudioLib", "webrtc_audio_processor_process_reverse", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proc), ::il2cpp_utils::ExtractType(buffer), ::il2cpp_utils::ExtractType(bufferSize)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proc, buffer, bufferSize);
}
// Autogenerated method: Photon.Voice.WebRTCAudioLib.webrtc_audio_processor_destroy
void Photon::Voice::WebRTCAudioLib::webrtc_audio_processor_destroy(::System::IntPtr proc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::webrtc_audio_processor_destroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "WebRTCAudioLib", "webrtc_audio_processor_destroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(proc)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, proc);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.WebRTCAudioLib/Error
#include "Photon/Voice/WebRTCAudioLib_Error.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Voice.WebRTCAudioLib/Error kNoError
::Photon::Voice::WebRTCAudioLib::Error Photon::Voice::WebRTCAudioLib::Error::_get_kNoError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Error::_get_kNoError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::WebRTCAudioLib::Error>("Photon.Voice", "WebRTCAudioLib/Error", "kNoError"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.WebRTCAudioLib/Error kNoError
void Photon::Voice::WebRTCAudioLib::Error::_set_kNoError(::Photon::Voice::WebRTCAudioLib::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Error::_set_kNoError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib/Error", "kNoError", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.WebRTCAudioLib/Error kUnspecifiedError
::Photon::Voice::WebRTCAudioLib::Error Photon::Voice::WebRTCAudioLib::Error::_get_kUnspecifiedError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Error::_get_kUnspecifiedError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::WebRTCAudioLib::Error>("Photon.Voice", "WebRTCAudioLib/Error", "kUnspecifiedError"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.WebRTCAudioLib/Error kUnspecifiedError
void Photon::Voice::WebRTCAudioLib::Error::_set_kUnspecifiedError(::Photon::Voice::WebRTCAudioLib::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Error::_set_kUnspecifiedError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib/Error", "kUnspecifiedError", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.WebRTCAudioLib/Error kCreationFailedError
::Photon::Voice::WebRTCAudioLib::Error Photon::Voice::WebRTCAudioLib::Error::_get_kCreationFailedError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Error::_get_kCreationFailedError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::WebRTCAudioLib::Error>("Photon.Voice", "WebRTCAudioLib/Error", "kCreationFailedError"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.WebRTCAudioLib/Error kCreationFailedError
void Photon::Voice::WebRTCAudioLib::Error::_set_kCreationFailedError(::Photon::Voice::WebRTCAudioLib::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Error::_set_kCreationFailedError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib/Error", "kCreationFailedError", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.WebRTCAudioLib/Error kUnsupportedComponentError
::Photon::Voice::WebRTCAudioLib::Error Photon::Voice::WebRTCAudioLib::Error::_get_kUnsupportedComponentError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Error::_get_kUnsupportedComponentError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::WebRTCAudioLib::Error>("Photon.Voice", "WebRTCAudioLib/Error", "kUnsupportedComponentError"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.WebRTCAudioLib/Error kUnsupportedComponentError
void Photon::Voice::WebRTCAudioLib::Error::_set_kUnsupportedComponentError(::Photon::Voice::WebRTCAudioLib::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Error::_set_kUnsupportedComponentError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib/Error", "kUnsupportedComponentError", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.WebRTCAudioLib/Error kUnsupportedFunctionError
::Photon::Voice::WebRTCAudioLib::Error Photon::Voice::WebRTCAudioLib::Error::_get_kUnsupportedFunctionError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Error::_get_kUnsupportedFunctionError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::WebRTCAudioLib::Error>("Photon.Voice", "WebRTCAudioLib/Error", "kUnsupportedFunctionError"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.WebRTCAudioLib/Error kUnsupportedFunctionError
void Photon::Voice::WebRTCAudioLib::Error::_set_kUnsupportedFunctionError(::Photon::Voice::WebRTCAudioLib::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Error::_set_kUnsupportedFunctionError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib/Error", "kUnsupportedFunctionError", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.WebRTCAudioLib/Error kNullPointerError
::Photon::Voice::WebRTCAudioLib::Error Photon::Voice::WebRTCAudioLib::Error::_get_kNullPointerError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Error::_get_kNullPointerError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::WebRTCAudioLib::Error>("Photon.Voice", "WebRTCAudioLib/Error", "kNullPointerError"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.WebRTCAudioLib/Error kNullPointerError
void Photon::Voice::WebRTCAudioLib::Error::_set_kNullPointerError(::Photon::Voice::WebRTCAudioLib::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Error::_set_kNullPointerError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib/Error", "kNullPointerError", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.WebRTCAudioLib/Error kBadParameterError
::Photon::Voice::WebRTCAudioLib::Error Photon::Voice::WebRTCAudioLib::Error::_get_kBadParameterError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Error::_get_kBadParameterError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::WebRTCAudioLib::Error>("Photon.Voice", "WebRTCAudioLib/Error", "kBadParameterError"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.WebRTCAudioLib/Error kBadParameterError
void Photon::Voice::WebRTCAudioLib::Error::_set_kBadParameterError(::Photon::Voice::WebRTCAudioLib::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Error::_set_kBadParameterError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib/Error", "kBadParameterError", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.WebRTCAudioLib/Error kBadSampleRateError
::Photon::Voice::WebRTCAudioLib::Error Photon::Voice::WebRTCAudioLib::Error::_get_kBadSampleRateError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Error::_get_kBadSampleRateError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::WebRTCAudioLib::Error>("Photon.Voice", "WebRTCAudioLib/Error", "kBadSampleRateError"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.WebRTCAudioLib/Error kBadSampleRateError
void Photon::Voice::WebRTCAudioLib::Error::_set_kBadSampleRateError(::Photon::Voice::WebRTCAudioLib::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Error::_set_kBadSampleRateError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib/Error", "kBadSampleRateError", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.WebRTCAudioLib/Error kBadDataLengthError
::Photon::Voice::WebRTCAudioLib::Error Photon::Voice::WebRTCAudioLib::Error::_get_kBadDataLengthError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Error::_get_kBadDataLengthError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::WebRTCAudioLib::Error>("Photon.Voice", "WebRTCAudioLib/Error", "kBadDataLengthError"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.WebRTCAudioLib/Error kBadDataLengthError
void Photon::Voice::WebRTCAudioLib::Error::_set_kBadDataLengthError(::Photon::Voice::WebRTCAudioLib::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Error::_set_kBadDataLengthError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib/Error", "kBadDataLengthError", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.WebRTCAudioLib/Error kBadNumberChannelsError
::Photon::Voice::WebRTCAudioLib::Error Photon::Voice::WebRTCAudioLib::Error::_get_kBadNumberChannelsError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Error::_get_kBadNumberChannelsError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::WebRTCAudioLib::Error>("Photon.Voice", "WebRTCAudioLib/Error", "kBadNumberChannelsError"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.WebRTCAudioLib/Error kBadNumberChannelsError
void Photon::Voice::WebRTCAudioLib::Error::_set_kBadNumberChannelsError(::Photon::Voice::WebRTCAudioLib::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Error::_set_kBadNumberChannelsError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib/Error", "kBadNumberChannelsError", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.WebRTCAudioLib/Error kFileError
::Photon::Voice::WebRTCAudioLib::Error Photon::Voice::WebRTCAudioLib::Error::_get_kFileError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Error::_get_kFileError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::WebRTCAudioLib::Error>("Photon.Voice", "WebRTCAudioLib/Error", "kFileError"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.WebRTCAudioLib/Error kFileError
void Photon::Voice::WebRTCAudioLib::Error::_set_kFileError(::Photon::Voice::WebRTCAudioLib::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Error::_set_kFileError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib/Error", "kFileError", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.WebRTCAudioLib/Error kStreamParameterNotSetError
::Photon::Voice::WebRTCAudioLib::Error Photon::Voice::WebRTCAudioLib::Error::_get_kStreamParameterNotSetError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Error::_get_kStreamParameterNotSetError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::WebRTCAudioLib::Error>("Photon.Voice", "WebRTCAudioLib/Error", "kStreamParameterNotSetError"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.WebRTCAudioLib/Error kStreamParameterNotSetError
void Photon::Voice::WebRTCAudioLib::Error::_set_kStreamParameterNotSetError(::Photon::Voice::WebRTCAudioLib::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Error::_set_kStreamParameterNotSetError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib/Error", "kStreamParameterNotSetError", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.WebRTCAudioLib/Error kNotEnabledError
::Photon::Voice::WebRTCAudioLib::Error Photon::Voice::WebRTCAudioLib::Error::_get_kNotEnabledError() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Error::_get_kNotEnabledError");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::WebRTCAudioLib::Error>("Photon.Voice", "WebRTCAudioLib/Error", "kNotEnabledError"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.WebRTCAudioLib/Error kNotEnabledError
void Photon::Voice::WebRTCAudioLib::Error::_set_kNotEnabledError(::Photon::Voice::WebRTCAudioLib::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Error::_set_kNotEnabledError");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib/Error", "kNotEnabledError", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.WebRTCAudioLib/Error kBadStreamParameterWarning
::Photon::Voice::WebRTCAudioLib::Error Photon::Voice::WebRTCAudioLib::Error::_get_kBadStreamParameterWarning() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Error::_get_kBadStreamParameterWarning");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::WebRTCAudioLib::Error>("Photon.Voice", "WebRTCAudioLib/Error", "kBadStreamParameterWarning"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.WebRTCAudioLib/Error kBadStreamParameterWarning
void Photon::Voice::WebRTCAudioLib::Error::_set_kBadStreamParameterWarning(::Photon::Voice::WebRTCAudioLib::Error value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Error::_set_kBadStreamParameterWarning");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib/Error", "kBadStreamParameterWarning", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Voice::WebRTCAudioLib::Error::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Error::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.WebRTCAudioLib/Param
#include "Photon/Voice/WebRTCAudioLib_Param.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Voice.WebRTCAudioLib/Param REVERSE_STREAM_DELAY_MS
::Photon::Voice::WebRTCAudioLib::Param Photon::Voice::WebRTCAudioLib::Param::_get_REVERSE_STREAM_DELAY_MS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_get_REVERSE_STREAM_DELAY_MS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::WebRTCAudioLib::Param>("Photon.Voice", "WebRTCAudioLib/Param", "REVERSE_STREAM_DELAY_MS"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.WebRTCAudioLib/Param REVERSE_STREAM_DELAY_MS
void Photon::Voice::WebRTCAudioLib::Param::_set_REVERSE_STREAM_DELAY_MS(::Photon::Voice::WebRTCAudioLib::Param value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_set_REVERSE_STREAM_DELAY_MS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib/Param", "REVERSE_STREAM_DELAY_MS", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.WebRTCAudioLib/Param AEC
::Photon::Voice::WebRTCAudioLib::Param Photon::Voice::WebRTCAudioLib::Param::_get_AEC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_get_AEC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::WebRTCAudioLib::Param>("Photon.Voice", "WebRTCAudioLib/Param", "AEC"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.WebRTCAudioLib/Param AEC
void Photon::Voice::WebRTCAudioLib::Param::_set_AEC(::Photon::Voice::WebRTCAudioLib::Param value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_set_AEC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib/Param", "AEC", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.WebRTCAudioLib/Param AEC_HIGH_PASS_FILTER
::Photon::Voice::WebRTCAudioLib::Param Photon::Voice::WebRTCAudioLib::Param::_get_AEC_HIGH_PASS_FILTER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_get_AEC_HIGH_PASS_FILTER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::WebRTCAudioLib::Param>("Photon.Voice", "WebRTCAudioLib/Param", "AEC_HIGH_PASS_FILTER"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.WebRTCAudioLib/Param AEC_HIGH_PASS_FILTER
void Photon::Voice::WebRTCAudioLib::Param::_set_AEC_HIGH_PASS_FILTER(::Photon::Voice::WebRTCAudioLib::Param value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_set_AEC_HIGH_PASS_FILTER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib/Param", "AEC_HIGH_PASS_FILTER", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.WebRTCAudioLib/Param AECM
::Photon::Voice::WebRTCAudioLib::Param Photon::Voice::WebRTCAudioLib::Param::_get_AECM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_get_AECM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::WebRTCAudioLib::Param>("Photon.Voice", "WebRTCAudioLib/Param", "AECM"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.WebRTCAudioLib/Param AECM
void Photon::Voice::WebRTCAudioLib::Param::_set_AECM(::Photon::Voice::WebRTCAudioLib::Param value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_set_AECM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib/Param", "AECM", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.WebRTCAudioLib/Param HIGH_PASS_FILTER
::Photon::Voice::WebRTCAudioLib::Param Photon::Voice::WebRTCAudioLib::Param::_get_HIGH_PASS_FILTER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_get_HIGH_PASS_FILTER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::WebRTCAudioLib::Param>("Photon.Voice", "WebRTCAudioLib/Param", "HIGH_PASS_FILTER"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.WebRTCAudioLib/Param HIGH_PASS_FILTER
void Photon::Voice::WebRTCAudioLib::Param::_set_HIGH_PASS_FILTER(::Photon::Voice::WebRTCAudioLib::Param value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_set_HIGH_PASS_FILTER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib/Param", "HIGH_PASS_FILTER", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.WebRTCAudioLib/Param NS
::Photon::Voice::WebRTCAudioLib::Param Photon::Voice::WebRTCAudioLib::Param::_get_NS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_get_NS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::WebRTCAudioLib::Param>("Photon.Voice", "WebRTCAudioLib/Param", "NS"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.WebRTCAudioLib/Param NS
void Photon::Voice::WebRTCAudioLib::Param::_set_NS(::Photon::Voice::WebRTCAudioLib::Param value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_set_NS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib/Param", "NS", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.WebRTCAudioLib/Param NS_LEVEL
::Photon::Voice::WebRTCAudioLib::Param Photon::Voice::WebRTCAudioLib::Param::_get_NS_LEVEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_get_NS_LEVEL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::WebRTCAudioLib::Param>("Photon.Voice", "WebRTCAudioLib/Param", "NS_LEVEL"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.WebRTCAudioLib/Param NS_LEVEL
void Photon::Voice::WebRTCAudioLib::Param::_set_NS_LEVEL(::Photon::Voice::WebRTCAudioLib::Param value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_set_NS_LEVEL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib/Param", "NS_LEVEL", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.WebRTCAudioLib/Param AGC
::Photon::Voice::WebRTCAudioLib::Param Photon::Voice::WebRTCAudioLib::Param::_get_AGC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_get_AGC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::WebRTCAudioLib::Param>("Photon.Voice", "WebRTCAudioLib/Param", "AGC"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.WebRTCAudioLib/Param AGC
void Photon::Voice::WebRTCAudioLib::Param::_set_AGC(::Photon::Voice::WebRTCAudioLib::Param value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_set_AGC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib/Param", "AGC", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.WebRTCAudioLib/Param AGC_TARGET_LEVEL_DBFS
::Photon::Voice::WebRTCAudioLib::Param Photon::Voice::WebRTCAudioLib::Param::_get_AGC_TARGET_LEVEL_DBFS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_get_AGC_TARGET_LEVEL_DBFS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::WebRTCAudioLib::Param>("Photon.Voice", "WebRTCAudioLib/Param", "AGC_TARGET_LEVEL_DBFS"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.WebRTCAudioLib/Param AGC_TARGET_LEVEL_DBFS
void Photon::Voice::WebRTCAudioLib::Param::_set_AGC_TARGET_LEVEL_DBFS(::Photon::Voice::WebRTCAudioLib::Param value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_set_AGC_TARGET_LEVEL_DBFS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib/Param", "AGC_TARGET_LEVEL_DBFS", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.WebRTCAudioLib/Param AGC_COMPRESSION_GAIN
::Photon::Voice::WebRTCAudioLib::Param Photon::Voice::WebRTCAudioLib::Param::_get_AGC_COMPRESSION_GAIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_get_AGC_COMPRESSION_GAIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::WebRTCAudioLib::Param>("Photon.Voice", "WebRTCAudioLib/Param", "AGC_COMPRESSION_GAIN"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.WebRTCAudioLib/Param AGC_COMPRESSION_GAIN
void Photon::Voice::WebRTCAudioLib::Param::_set_AGC_COMPRESSION_GAIN(::Photon::Voice::WebRTCAudioLib::Param value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_set_AGC_COMPRESSION_GAIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib/Param", "AGC_COMPRESSION_GAIN", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.WebRTCAudioLib/Param AGC_LIMITER
::Photon::Voice::WebRTCAudioLib::Param Photon::Voice::WebRTCAudioLib::Param::_get_AGC_LIMITER() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_get_AGC_LIMITER");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::WebRTCAudioLib::Param>("Photon.Voice", "WebRTCAudioLib/Param", "AGC_LIMITER"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.WebRTCAudioLib/Param AGC_LIMITER
void Photon::Voice::WebRTCAudioLib::Param::_set_AGC_LIMITER(::Photon::Voice::WebRTCAudioLib::Param value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_set_AGC_LIMITER");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib/Param", "AGC_LIMITER", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.WebRTCAudioLib/Param VAD
::Photon::Voice::WebRTCAudioLib::Param Photon::Voice::WebRTCAudioLib::Param::_get_VAD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_get_VAD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::WebRTCAudioLib::Param>("Photon.Voice", "WebRTCAudioLib/Param", "VAD"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.WebRTCAudioLib/Param VAD
void Photon::Voice::WebRTCAudioLib::Param::_set_VAD(::Photon::Voice::WebRTCAudioLib::Param value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_set_VAD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib/Param", "VAD", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.WebRTCAudioLib/Param VAD_FRAME_SIZE_MS
::Photon::Voice::WebRTCAudioLib::Param Photon::Voice::WebRTCAudioLib::Param::_get_VAD_FRAME_SIZE_MS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_get_VAD_FRAME_SIZE_MS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::WebRTCAudioLib::Param>("Photon.Voice", "WebRTCAudioLib/Param", "VAD_FRAME_SIZE_MS"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.WebRTCAudioLib/Param VAD_FRAME_SIZE_MS
void Photon::Voice::WebRTCAudioLib::Param::_set_VAD_FRAME_SIZE_MS(::Photon::Voice::WebRTCAudioLib::Param value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_set_VAD_FRAME_SIZE_MS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib/Param", "VAD_FRAME_SIZE_MS", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.WebRTCAudioLib/Param VAD_LIKELIHOOD
::Photon::Voice::WebRTCAudioLib::Param Photon::Voice::WebRTCAudioLib::Param::_get_VAD_LIKELIHOOD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_get_VAD_LIKELIHOOD");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::WebRTCAudioLib::Param>("Photon.Voice", "WebRTCAudioLib/Param", "VAD_LIKELIHOOD"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.WebRTCAudioLib/Param VAD_LIKELIHOOD
void Photon::Voice::WebRTCAudioLib::Param::_set_VAD_LIKELIHOOD(::Photon::Voice::WebRTCAudioLib::Param value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_set_VAD_LIKELIHOOD");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib/Param", "VAD_LIKELIHOOD", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.WebRTCAudioLib/Param AGC2
::Photon::Voice::WebRTCAudioLib::Param Photon::Voice::WebRTCAudioLib::Param::_get_AGC2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_get_AGC2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::WebRTCAudioLib::Param>("Photon.Voice", "WebRTCAudioLib/Param", "AGC2"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.WebRTCAudioLib/Param AGC2
void Photon::Voice::WebRTCAudioLib::Param::_set_AGC2(::Photon::Voice::WebRTCAudioLib::Param value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::_set_AGC2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "WebRTCAudioLib/Param", "AGC2", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Voice::WebRTCAudioLib::Param::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::WebRTCAudioLib::Param::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.VoiceEvent
#include "Photon/Voice/VoiceEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Byte Code
uint8_t Photon::Voice::VoiceEvent::_get_Code() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceEvent::_get_Code");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Voice", "VoiceEvent", "Code"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte Code
void Photon::Voice::VoiceEvent::_set_Code(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceEvent::_set_Code");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "VoiceEvent", "Code", value));
}
// Autogenerated static field getter
// Get static field: static public System.Byte FrameCode
uint8_t Photon::Voice::VoiceEvent::_get_FrameCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceEvent::_get_FrameCode");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<uint8_t>("Photon.Voice", "VoiceEvent", "FrameCode"));
}
// Autogenerated static field setter
// Set static field: static public System.Byte FrameCode
void Photon::Voice::VoiceEvent::_set_FrameCode(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::VoiceEvent::_set_FrameCode");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "VoiceEvent", "FrameCode", value));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Voice.LoadBalancingTransport
#include "Photon/Voice/LoadBalancingTransport.hpp"
// Including type: Photon.Voice.LoadBalancingTransport/<>c
#include "Photon/Voice/LoadBalancingTransport_--c.hpp"
// Including type: Photon.Voice.VoiceClient
#include "Photon/Voice/VoiceClient.hpp"
// Including type: Photon.Voice.PhotonTransportProtocol
#include "Photon/Voice/PhotonTransportProtocol.hpp"
// Including type: Photon.Voice.Codec
#include "Photon/Voice/Codec.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Photon.Voice.LocalVoice
#include "Photon/Voice/LocalVoice.hpp"
// Including type: System.ArraySegment`1
#include "System/ArraySegment_1.hpp"
// Including type: Photon.Voice.FrameFlags
#include "Photon/Voice/FrameFlags.hpp"
// Including type: ExitGames.Client.Photon.EventData
#include "ExitGames/Client/Photon/EventData.hpp"
// Including type: Photon.Realtime.ClientState
#include "Photon/Realtime/ClientState.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 VOICE_CHANNEL
int Photon::Voice::LoadBalancingTransport::_get_VOICE_CHANNEL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::_get_VOICE_CHANNEL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Voice", "LoadBalancingTransport", "VOICE_CHANNEL"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 VOICE_CHANNEL
void Photon::Voice::LoadBalancingTransport::_set_VOICE_CHANNEL(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::_set_VOICE_CHANNEL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "LoadBalancingTransport", "VOICE_CHANNEL", value));
}
// Autogenerated instance field getter
// Get instance field: protected Photon.Voice.VoiceClient voiceClient
[[deprecated("Use field access instead!")]] ::Photon::Voice::VoiceClient*& Photon::Voice::LoadBalancingTransport::dyn_voiceClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::dyn_voiceClient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceClient"))->offset;
  return *reinterpret_cast<::Photon::Voice::VoiceClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.PhotonTransportProtocol protocol
[[deprecated("Use field access instead!")]] ::Photon::Voice::PhotonTransportProtocol*& Photon::Voice::LoadBalancingTransport::dyn_protocol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::dyn_protocol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "protocol"))->offset;
  return *reinterpret_cast<::Photon::Voice::PhotonTransportProtocol**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object sendLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Photon::Voice::LoadBalancingTransport::dyn_sendLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::dyn_sendLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sendLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.LoadBalancingTransport.get_VoiceClient
::Photon::Voice::VoiceClient* Photon::Voice::LoadBalancingTransport::get_VoiceClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::get_VoiceClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VoiceClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::VoiceClient*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.LoadBalancingTransport.LogError
void Photon::Voice::LoadBalancingTransport::LogError(::StringW fmt, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::LogError");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::LoadBalancingTransport*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fmt, args);
}
// Autogenerated method: Photon.Voice.LoadBalancingTransport.LogWarning
void Photon::Voice::LoadBalancingTransport::LogWarning(::StringW fmt, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::LogWarning");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::LoadBalancingTransport*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fmt, args);
}
// Autogenerated method: Photon.Voice.LoadBalancingTransport.LogInfo
void Photon::Voice::LoadBalancingTransport::LogInfo(::StringW fmt, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::LogInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::LoadBalancingTransport*), 27));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fmt, args);
}
// Autogenerated method: Photon.Voice.LoadBalancingTransport.LogDebug
void Photon::Voice::LoadBalancingTransport::LogDebug(::StringW fmt, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::LogDebug");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::LoadBalancingTransport*), 28));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fmt, args);
}
// Autogenerated method: Photon.Voice.LoadBalancingTransport.photonChannelForCodec
uint8_t Photon::Voice::LoadBalancingTransport::photonChannelForCodec(::Photon::Voice::Codec c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::photonChannelForCodec");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "photonChannelForCodec", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method, c);
}
// Autogenerated method: Photon.Voice.LoadBalancingTransport.IsChannelJoined
bool Photon::Voice::LoadBalancingTransport::IsChannelJoined(int channelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::IsChannelJoined");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::LoadBalancingTransport*), 19));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, channelId);
}
// Autogenerated method: Photon.Voice.LoadBalancingTransport.Service
void Photon::Voice::LoadBalancingTransport::Service() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::Service");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Service", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.LoadBalancingTransport.ChangeAudioGroups
bool Photon::Voice::LoadBalancingTransport::ChangeAudioGroups(::ArrayW<uint8_t> groupsToRemove, ::ArrayW<uint8_t> groupsToAdd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::ChangeAudioGroups");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::LoadBalancingTransport*), 30));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, groupsToRemove, groupsToAdd);
}
// Autogenerated method: Photon.Voice.LoadBalancingTransport.get_GlobalAudioGroup
uint8_t Photon::Voice::LoadBalancingTransport::get_GlobalAudioGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::get_GlobalAudioGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GlobalAudioGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.LoadBalancingTransport.set_GlobalAudioGroup
void Photon::Voice::LoadBalancingTransport::set_GlobalAudioGroup(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::set_GlobalAudioGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GlobalAudioGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.LoadBalancingTransport.get_GlobalInterestGroup
uint8_t Photon::Voice::LoadBalancingTransport::get_GlobalInterestGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::get_GlobalInterestGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GlobalInterestGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.LoadBalancingTransport.set_GlobalInterestGroup
void Photon::Voice::LoadBalancingTransport::set_GlobalInterestGroup(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::set_GlobalInterestGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GlobalInterestGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.LoadBalancingTransport.SendVoicesInfo
void Photon::Voice::LoadBalancingTransport::SendVoicesInfo(::System::Collections::Generic::IEnumerable_1<::Photon::Voice::LocalVoice*>* voices, int channelId, int targetPlayerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::SendVoicesInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::LoadBalancingTransport*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, voices, channelId, targetPlayerId);
}
// Autogenerated method: Photon.Voice.LoadBalancingTransport.SendVoiceRemove
void Photon::Voice::LoadBalancingTransport::SendVoiceRemove(::Photon::Voice::LocalVoice* voice, int channelId, int targetPlayerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::SendVoiceRemove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::LoadBalancingTransport*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, voice, channelId, targetPlayerId);
}
// Autogenerated method: Photon.Voice.LoadBalancingTransport.SendFrame
void Photon::Voice::LoadBalancingTransport::SendFrame(::System::ArraySegment_1<uint8_t> data, ::Photon::Voice::FrameFlags flags, uint8_t evNumber, uint8_t voiceId, int channelId, int targetPlayerId, bool reliable, ::Photon::Voice::LocalVoice* localVoice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::SendFrame");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::LoadBalancingTransport*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, flags, evNumber, voiceId, channelId, targetPlayerId, reliable, localVoice);
}
// Autogenerated method: Photon.Voice.LoadBalancingTransport.ChannelIdStr
::StringW Photon::Voice::LoadBalancingTransport::ChannelIdStr(int channelId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::ChannelIdStr");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::LoadBalancingTransport*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, channelId);
}
// Autogenerated method: Photon.Voice.LoadBalancingTransport.PlayerIdStr
::StringW Photon::Voice::LoadBalancingTransport::PlayerIdStr(int playerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::PlayerIdStr");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::LoadBalancingTransport*), 24));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, playerId);
}
// Autogenerated method: Photon.Voice.LoadBalancingTransport.onEventActionVoiceClient
void Photon::Voice::LoadBalancingTransport::onEventActionVoiceClient(::ExitGames::Client::Photon::EventData* ev) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::onEventActionVoiceClient");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::LoadBalancingTransport*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ev);
}
// Autogenerated method: Photon.Voice.LoadBalancingTransport.onStateChangeVoiceClient
void Photon::Voice::LoadBalancingTransport::onStateChangeVoiceClient(::Photon::Realtime::ClientState fromState, ::Photon::Realtime::ClientState state) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::onStateChangeVoiceClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onStateChangeVoiceClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fromState), ::il2cpp_utils::ExtractType(state)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fromState, state);
}
// Autogenerated method: Photon.Voice.LoadBalancingTransport.Dispose
void Photon::Voice::LoadBalancingTransport::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::LoadBalancingTransport*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.LoadBalancingTransport/<>c
#include "Photon/Voice/LoadBalancingTransport_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: Photon.Voice.LocalVoice
#include "Photon/Voice/LocalVoice.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly Photon.Voice.LoadBalancingTransport/<>c <>9
::Photon::Voice::LoadBalancingTransport::$$c* Photon::Voice::LoadBalancingTransport::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::Photon::Voice::LoadBalancingTransport::$$c*>("Photon.Voice", "LoadBalancingTransport/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly Photon.Voice.LoadBalancingTransport/<>c <>9
void Photon::Voice::LoadBalancingTransport::$$c::_set_$$9(::Photon::Voice::LoadBalancingTransport::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Voice", "LoadBalancingTransport/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<Photon.Voice.LocalVoice,Photon.Voice.Codec> <>9__21_0
::System::Func_2<::Photon::Voice::LocalVoice*, ::Photon::Voice::Codec>* Photon::Voice::LoadBalancingTransport::$$c::_get_$$9__21_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::$$c::_get_$$9__21_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::Photon::Voice::LocalVoice*, ::Photon::Voice::Codec>*>("Photon.Voice", "LoadBalancingTransport/<>c", "<>9__21_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<Photon.Voice.LocalVoice,Photon.Voice.Codec> <>9__21_0
void Photon::Voice::LoadBalancingTransport::$$c::_set_$$9__21_0(::System::Func_2<::Photon::Voice::LocalVoice*, ::Photon::Voice::Codec>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::$$c::_set_$$9__21_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("Photon.Voice", "LoadBalancingTransport/<>c", "<>9__21_0", value)));
}
// Autogenerated method: Photon.Voice.LoadBalancingTransport/<>c..cctor
void Photon::Voice::LoadBalancingTransport::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice", "LoadBalancingTransport/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Voice.LoadBalancingTransport/<>c.<SendVoicesInfo>b__21_0
::Photon::Voice::Codec Photon::Voice::LoadBalancingTransport::$$c::$SendVoicesInfo$b__21_0(::Photon::Voice::LocalVoice* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport::$$c::<SendVoicesInfo>b__21_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<SendVoicesInfo>b__21_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::Codec, false>(this, ___internal__method, v);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Voice.LoadBalancingTransport2
#include "Photon/Voice/LoadBalancingTransport2.hpp"
// Including type: System.ArraySegment`1
#include "System/ArraySegment_1.hpp"
// Including type: Photon.Voice.FrameFlags
#include "Photon/Voice/FrameFlags.hpp"
// Including type: Photon.Voice.LocalVoice
#include "Photon/Voice/LocalVoice.hpp"
// Including type: ExitGames.Client.Photon.EventData
#include "ExitGames/Client/Photon/EventData.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 DATA_OFFSET
int Photon::Voice::LoadBalancingTransport2::_get_DATA_OFFSET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport2::_get_DATA_OFFSET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Voice", "LoadBalancingTransport2", "DATA_OFFSET"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 DATA_OFFSET
void Photon::Voice::LoadBalancingTransport2::_set_DATA_OFFSET(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport2::_set_DATA_OFFSET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "LoadBalancingTransport2", "DATA_OFFSET", value));
}
// Autogenerated method: Photon.Voice.LoadBalancingTransport2.onVoiceFrameEvent
void Photon::Voice::LoadBalancingTransport2::onVoiceFrameEvent(::Il2CppObject* content0, int channelId, int playerId, int localPlayerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport2::onVoiceFrameEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onVoiceFrameEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(content0), ::il2cpp_utils::ExtractType(channelId), ::il2cpp_utils::ExtractType(playerId), ::il2cpp_utils::ExtractType(localPlayerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, content0, channelId, playerId, localPlayerId);
}
// Autogenerated method: Photon.Voice.LoadBalancingTransport2.SendFrame
void Photon::Voice::LoadBalancingTransport2::SendFrame(::System::ArraySegment_1<uint8_t> data, ::Photon::Voice::FrameFlags flags, uint8_t evNumber, uint8_t voiceId, int channelId, int targetPlayerId, bool reliable, ::Photon::Voice::LocalVoice* localVoice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport2::SendFrame");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::LoadBalancingTransport*), 31));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, flags, evNumber, voiceId, channelId, targetPlayerId, reliable, localVoice);
}
// Autogenerated method: Photon.Voice.LoadBalancingTransport2.onEventActionVoiceClient
void Photon::Voice::LoadBalancingTransport2::onEventActionVoiceClient(::ExitGames::Client::Photon::EventData* ev) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::LoadBalancingTransport2::onEventActionVoiceClient");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::LoadBalancingTransport*), 32));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ev);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Voice.PhotonTransportProtocol
#include "Photon/Voice/PhotonTransportProtocol.hpp"
// Including type: Photon.Voice.PhotonTransportProtocol/EventSubcode
#include "Photon/Voice/PhotonTransportProtocol_EventSubcode.hpp"
// Including type: Photon.Voice.PhotonTransportProtocol/EventParam
#include "Photon/Voice/PhotonTransportProtocol_EventParam.hpp"
// Including type: Photon.Voice.VoiceClient
#include "Photon/Voice/VoiceClient.hpp"
// Including type: Photon.Voice.ILogger
#include "Photon/Voice/ILogger.hpp"
// Including type: System.Collections.Generic.IEnumerable`1
#include "System/Collections/Generic/IEnumerable_1.hpp"
// Including type: Photon.Voice.LocalVoice
#include "Photon/Voice/LocalVoice.hpp"
// Including type: System.ArraySegment`1
#include "System/ArraySegment_1.hpp"
// Including type: Photon.Voice.FrameFlags
#include "Photon/Voice/FrameFlags.hpp"
// Including type: Photon.Voice.VoiceInfo
#include "Photon/Voice/VoiceInfo.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.VoiceClient voiceClient
[[deprecated("Use field access instead!")]] ::Photon::Voice::VoiceClient*& Photon::Voice::PhotonTransportProtocol::dyn_voiceClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::dyn_voiceClient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceClient"))->offset;
  return *reinterpret_cast<::Photon::Voice::VoiceClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.ILogger logger
[[deprecated("Use field access instead!")]] ::Photon::Voice::ILogger*& Photon::Voice::PhotonTransportProtocol::dyn_logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::dyn_logger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "logger"))->offset;
  return *reinterpret_cast<::Photon::Voice::ILogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.PhotonTransportProtocol.buildVoicesInfo
::ArrayW<::Il2CppObject*> Photon::Voice::PhotonTransportProtocol::buildVoicesInfo(::System::Collections::Generic::IEnumerable_1<::Photon::Voice::LocalVoice*>* voicesToSend, bool logInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::buildVoicesInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "buildVoicesInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(voicesToSend), ::il2cpp_utils::ExtractType(logInfo)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, voicesToSend, logInfo);
}
// Autogenerated method: Photon.Voice.PhotonTransportProtocol.buildVoiceRemoveMessage
::ArrayW<::Il2CppObject*> Photon::Voice::PhotonTransportProtocol::buildVoiceRemoveMessage(::Photon::Voice::LocalVoice* v) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::buildVoiceRemoveMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "buildVoiceRemoveMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(v)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, v);
}
// Autogenerated method: Photon.Voice.PhotonTransportProtocol.buildFrameMessage
::ArrayW<::Il2CppObject*> Photon::Voice::PhotonTransportProtocol::buildFrameMessage(uint8_t voiceId, uint8_t evNumber, ::System::ArraySegment_1<uint8_t> data, ::Photon::Voice::FrameFlags flags) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::buildFrameMessage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "buildFrameMessage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(voiceId), ::il2cpp_utils::ExtractType(evNumber), ::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(flags)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Il2CppObject*>, false>(this, ___internal__method, voiceId, evNumber, data, flags);
}
// Autogenerated method: Photon.Voice.PhotonTransportProtocol.onVoiceEvent
void Photon::Voice::PhotonTransportProtocol::onVoiceEvent(::Il2CppObject* content0, int channelId, int playerId, int localPlayerId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::onVoiceEvent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onVoiceEvent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(content0), ::il2cpp_utils::ExtractType(channelId), ::il2cpp_utils::ExtractType(playerId), ::il2cpp_utils::ExtractType(localPlayerId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, content0, channelId, playerId, localPlayerId);
}
// Autogenerated method: Photon.Voice.PhotonTransportProtocol.onVoiceInfo
void Photon::Voice::PhotonTransportProtocol::onVoiceInfo(int channelId, int playerId, ::Il2CppObject* payload) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::onVoiceInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onVoiceInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channelId), ::il2cpp_utils::ExtractType(playerId), ::il2cpp_utils::ExtractType(payload)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, channelId, playerId, payload);
}
// Autogenerated method: Photon.Voice.PhotonTransportProtocol.onVoiceRemove
void Photon::Voice::PhotonTransportProtocol::onVoiceRemove(int channelId, int playerId, ::Il2CppObject* payload) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::onVoiceRemove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onVoiceRemove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channelId), ::il2cpp_utils::ExtractType(playerId), ::il2cpp_utils::ExtractType(payload)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, channelId, playerId, payload);
}
// Autogenerated method: Photon.Voice.PhotonTransportProtocol.createVoiceInfoFromEventPayload
::Photon::Voice::VoiceInfo Photon::Voice::PhotonTransportProtocol::createVoiceInfoFromEventPayload(::System::Collections::Generic::Dictionary_2<uint8_t, ::Il2CppObject*>* h) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::createVoiceInfoFromEventPayload");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "createVoiceInfoFromEventPayload", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(h)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::VoiceInfo, false>(this, ___internal__method, h);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.PhotonTransportProtocol/EventSubcode
#include "Photon/Voice/PhotonTransportProtocol_EventSubcode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Voice.PhotonTransportProtocol/EventSubcode VoiceInfo
::Photon::Voice::PhotonTransportProtocol::EventSubcode Photon::Voice::PhotonTransportProtocol::EventSubcode::_get_VoiceInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventSubcode::_get_VoiceInfo");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::PhotonTransportProtocol::EventSubcode>("Photon.Voice", "PhotonTransportProtocol/EventSubcode", "VoiceInfo"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.PhotonTransportProtocol/EventSubcode VoiceInfo
void Photon::Voice::PhotonTransportProtocol::EventSubcode::_set_VoiceInfo(::Photon::Voice::PhotonTransportProtocol::EventSubcode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventSubcode::_set_VoiceInfo");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "PhotonTransportProtocol/EventSubcode", "VoiceInfo", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.PhotonTransportProtocol/EventSubcode VoiceRemove
::Photon::Voice::PhotonTransportProtocol::EventSubcode Photon::Voice::PhotonTransportProtocol::EventSubcode::_get_VoiceRemove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventSubcode::_get_VoiceRemove");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::PhotonTransportProtocol::EventSubcode>("Photon.Voice", "PhotonTransportProtocol/EventSubcode", "VoiceRemove"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.PhotonTransportProtocol/EventSubcode VoiceRemove
void Photon::Voice::PhotonTransportProtocol::EventSubcode::_set_VoiceRemove(::Photon::Voice::PhotonTransportProtocol::EventSubcode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventSubcode::_set_VoiceRemove");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "PhotonTransportProtocol/EventSubcode", "VoiceRemove", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.PhotonTransportProtocol/EventSubcode Frame
::Photon::Voice::PhotonTransportProtocol::EventSubcode Photon::Voice::PhotonTransportProtocol::EventSubcode::_get_Frame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventSubcode::_get_Frame");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::PhotonTransportProtocol::EventSubcode>("Photon.Voice", "PhotonTransportProtocol/EventSubcode", "Frame"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.PhotonTransportProtocol/EventSubcode Frame
void Photon::Voice::PhotonTransportProtocol::EventSubcode::_set_Frame(::Photon::Voice::PhotonTransportProtocol::EventSubcode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventSubcode::_set_Frame");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "PhotonTransportProtocol/EventSubcode", "Frame", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Photon::Voice::PhotonTransportProtocol::EventSubcode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventSubcode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.PhotonTransportProtocol/EventParam
#include "Photon/Voice/PhotonTransportProtocol_EventParam.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Voice.PhotonTransportProtocol/EventParam VoiceId
::Photon::Voice::PhotonTransportProtocol::EventParam Photon::Voice::PhotonTransportProtocol::EventParam::_get_VoiceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventParam::_get_VoiceId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::PhotonTransportProtocol::EventParam>("Photon.Voice", "PhotonTransportProtocol/EventParam", "VoiceId"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.PhotonTransportProtocol/EventParam VoiceId
void Photon::Voice::PhotonTransportProtocol::EventParam::_set_VoiceId(::Photon::Voice::PhotonTransportProtocol::EventParam value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventParam::_set_VoiceId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "PhotonTransportProtocol/EventParam", "VoiceId", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.PhotonTransportProtocol/EventParam SamplingRate
::Photon::Voice::PhotonTransportProtocol::EventParam Photon::Voice::PhotonTransportProtocol::EventParam::_get_SamplingRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventParam::_get_SamplingRate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::PhotonTransportProtocol::EventParam>("Photon.Voice", "PhotonTransportProtocol/EventParam", "SamplingRate"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.PhotonTransportProtocol/EventParam SamplingRate
void Photon::Voice::PhotonTransportProtocol::EventParam::_set_SamplingRate(::Photon::Voice::PhotonTransportProtocol::EventParam value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventParam::_set_SamplingRate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "PhotonTransportProtocol/EventParam", "SamplingRate", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.PhotonTransportProtocol/EventParam Channels
::Photon::Voice::PhotonTransportProtocol::EventParam Photon::Voice::PhotonTransportProtocol::EventParam::_get_Channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventParam::_get_Channels");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::PhotonTransportProtocol::EventParam>("Photon.Voice", "PhotonTransportProtocol/EventParam", "Channels"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.PhotonTransportProtocol/EventParam Channels
void Photon::Voice::PhotonTransportProtocol::EventParam::_set_Channels(::Photon::Voice::PhotonTransportProtocol::EventParam value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventParam::_set_Channels");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "PhotonTransportProtocol/EventParam", "Channels", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.PhotonTransportProtocol/EventParam FrameDurationUs
::Photon::Voice::PhotonTransportProtocol::EventParam Photon::Voice::PhotonTransportProtocol::EventParam::_get_FrameDurationUs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventParam::_get_FrameDurationUs");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::PhotonTransportProtocol::EventParam>("Photon.Voice", "PhotonTransportProtocol/EventParam", "FrameDurationUs"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.PhotonTransportProtocol/EventParam FrameDurationUs
void Photon::Voice::PhotonTransportProtocol::EventParam::_set_FrameDurationUs(::Photon::Voice::PhotonTransportProtocol::EventParam value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventParam::_set_FrameDurationUs");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "PhotonTransportProtocol/EventParam", "FrameDurationUs", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.PhotonTransportProtocol/EventParam Bitrate
::Photon::Voice::PhotonTransportProtocol::EventParam Photon::Voice::PhotonTransportProtocol::EventParam::_get_Bitrate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventParam::_get_Bitrate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::PhotonTransportProtocol::EventParam>("Photon.Voice", "PhotonTransportProtocol/EventParam", "Bitrate"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.PhotonTransportProtocol/EventParam Bitrate
void Photon::Voice::PhotonTransportProtocol::EventParam::_set_Bitrate(::Photon::Voice::PhotonTransportProtocol::EventParam value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventParam::_set_Bitrate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "PhotonTransportProtocol/EventParam", "Bitrate", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.PhotonTransportProtocol/EventParam Width
::Photon::Voice::PhotonTransportProtocol::EventParam Photon::Voice::PhotonTransportProtocol::EventParam::_get_Width() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventParam::_get_Width");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::PhotonTransportProtocol::EventParam>("Photon.Voice", "PhotonTransportProtocol/EventParam", "Width"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.PhotonTransportProtocol/EventParam Width
void Photon::Voice::PhotonTransportProtocol::EventParam::_set_Width(::Photon::Voice::PhotonTransportProtocol::EventParam value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventParam::_set_Width");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "PhotonTransportProtocol/EventParam", "Width", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.PhotonTransportProtocol/EventParam Height
::Photon::Voice::PhotonTransportProtocol::EventParam Photon::Voice::PhotonTransportProtocol::EventParam::_get_Height() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventParam::_get_Height");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::PhotonTransportProtocol::EventParam>("Photon.Voice", "PhotonTransportProtocol/EventParam", "Height"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.PhotonTransportProtocol/EventParam Height
void Photon::Voice::PhotonTransportProtocol::EventParam::_set_Height(::Photon::Voice::PhotonTransportProtocol::EventParam value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventParam::_set_Height");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "PhotonTransportProtocol/EventParam", "Height", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.PhotonTransportProtocol/EventParam FPS
::Photon::Voice::PhotonTransportProtocol::EventParam Photon::Voice::PhotonTransportProtocol::EventParam::_get_FPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventParam::_get_FPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::PhotonTransportProtocol::EventParam>("Photon.Voice", "PhotonTransportProtocol/EventParam", "FPS"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.PhotonTransportProtocol/EventParam FPS
void Photon::Voice::PhotonTransportProtocol::EventParam::_set_FPS(::Photon::Voice::PhotonTransportProtocol::EventParam value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventParam::_set_FPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "PhotonTransportProtocol/EventParam", "FPS", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.PhotonTransportProtocol/EventParam KeyFrameInt
::Photon::Voice::PhotonTransportProtocol::EventParam Photon::Voice::PhotonTransportProtocol::EventParam::_get_KeyFrameInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventParam::_get_KeyFrameInt");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::PhotonTransportProtocol::EventParam>("Photon.Voice", "PhotonTransportProtocol/EventParam", "KeyFrameInt"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.PhotonTransportProtocol/EventParam KeyFrameInt
void Photon::Voice::PhotonTransportProtocol::EventParam::_set_KeyFrameInt(::Photon::Voice::PhotonTransportProtocol::EventParam value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventParam::_set_KeyFrameInt");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "PhotonTransportProtocol/EventParam", "KeyFrameInt", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.PhotonTransportProtocol/EventParam UserData
::Photon::Voice::PhotonTransportProtocol::EventParam Photon::Voice::PhotonTransportProtocol::EventParam::_get_UserData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventParam::_get_UserData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::PhotonTransportProtocol::EventParam>("Photon.Voice", "PhotonTransportProtocol/EventParam", "UserData"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.PhotonTransportProtocol/EventParam UserData
void Photon::Voice::PhotonTransportProtocol::EventParam::_set_UserData(::Photon::Voice::PhotonTransportProtocol::EventParam value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventParam::_set_UserData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "PhotonTransportProtocol/EventParam", "UserData", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.PhotonTransportProtocol/EventParam EventNumber
::Photon::Voice::PhotonTransportProtocol::EventParam Photon::Voice::PhotonTransportProtocol::EventParam::_get_EventNumber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventParam::_get_EventNumber");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::PhotonTransportProtocol::EventParam>("Photon.Voice", "PhotonTransportProtocol/EventParam", "EventNumber"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.PhotonTransportProtocol/EventParam EventNumber
void Photon::Voice::PhotonTransportProtocol::EventParam::_set_EventNumber(::Photon::Voice::PhotonTransportProtocol::EventParam value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventParam::_set_EventNumber");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "PhotonTransportProtocol/EventParam", "EventNumber", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.PhotonTransportProtocol/EventParam Codec
::Photon::Voice::PhotonTransportProtocol::EventParam Photon::Voice::PhotonTransportProtocol::EventParam::_get_Codec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventParam::_get_Codec");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::PhotonTransportProtocol::EventParam>("Photon.Voice", "PhotonTransportProtocol/EventParam", "Codec"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.PhotonTransportProtocol/EventParam Codec
void Photon::Voice::PhotonTransportProtocol::EventParam::_set_Codec(::Photon::Voice::PhotonTransportProtocol::EventParam value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventParam::_set_Codec");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice", "PhotonTransportProtocol/EventParam", "Codec", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Byte value__
[[deprecated("Use field access instead!")]] uint8_t& Photon::Voice::PhotonTransportProtocol::EventParam::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::PhotonTransportProtocol::EventParam::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.AndroidAudioInAEC
#include "Photon/Voice/Unity/AndroidAudioInAEC.hpp"
// Including type: Photon.Voice.Unity.AndroidAudioInAEC/DataCallback
#include "Photon/Voice/Unity/AndroidAudioInAEC_DataCallback.hpp"
// Including type: UnityEngine.AndroidJavaObject
#include "UnityEngine/AndroidJavaObject.hpp"
// Including type: Photon.Voice.ILogger
#include "Photon/Voice/ILogger.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Photon.Voice.ObjectFactory`2
#include "Photon/Voice/ObjectFactory_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AndroidJavaObject audioIn
[[deprecated("Use field access instead!")]] ::UnityEngine::AndroidJavaObject*& Photon::Voice::Unity::AndroidAudioInAEC::dyn_audioIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AndroidAudioInAEC::dyn_audioIn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioIn"))->offset;
  return *reinterpret_cast<::UnityEngine::AndroidJavaObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr javaBuf
[[deprecated("Use field access instead!")]] ::System::IntPtr& Photon::Voice::Unity::AndroidAudioInAEC::dyn_javaBuf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AndroidAudioInAEC::dyn_javaBuf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "javaBuf"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.ILogger logger
[[deprecated("Use field access instead!")]] ::Photon::Voice::ILogger*& Photon::Voice::Unity::AndroidAudioInAEC::dyn_logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AndroidAudioInAEC::dyn_logger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "logger"))->offset;
  return *reinterpret_cast<::Photon::Voice::ILogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 audioInSampleRate
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::AndroidAudioInAEC::dyn_audioInSampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AndroidAudioInAEC::dyn_audioInSampleRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioInSampleRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.AndroidAudioInAEC/DataCallback callback
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::AndroidAudioInAEC::DataCallback*& Photon::Voice::Unity::AndroidAudioInAEC::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AndroidAudioInAEC::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::AndroidAudioInAEC::DataCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Error>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Voice::Unity::AndroidAudioInAEC::dyn_$Error$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AndroidAudioInAEC::dyn_$Error$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Error>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.AndroidAudioInAEC.SetCallback
void Photon::Voice::Unity::AndroidAudioInAEC::SetCallback(::System::Action_1<::ArrayW<int16_t>>* callback, ::Photon::Voice::ObjectFactory_2<::ArrayW<int16_t>, int>* bufferFactory) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AndroidAudioInAEC::SetCallback");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::AndroidAudioInAEC*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback, bufferFactory);
}
// Autogenerated method: Photon.Voice.Unity.AndroidAudioInAEC.get_Channels
int Photon::Voice::Unity::AndroidAudioInAEC::get_Channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AndroidAudioInAEC::get_Channels");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::AndroidAudioInAEC*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.AndroidAudioInAEC.get_SamplingRate
int Photon::Voice::Unity::AndroidAudioInAEC::get_SamplingRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AndroidAudioInAEC::get_SamplingRate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::AndroidAudioInAEC*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.AndroidAudioInAEC.get_Error
::StringW Photon::Voice::Unity::AndroidAudioInAEC::get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AndroidAudioInAEC::get_Error");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::AndroidAudioInAEC*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.AndroidAudioInAEC.set_Error
void Photon::Voice::Unity::AndroidAudioInAEC::set_Error(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AndroidAudioInAEC::set_Error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.AndroidAudioInAEC.Reset
void Photon::Voice::Unity::AndroidAudioInAEC::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AndroidAudioInAEC::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::AndroidAudioInAEC*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.AndroidAudioInAEC.Dispose
void Photon::Voice::Unity::AndroidAudioInAEC::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AndroidAudioInAEC::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::AndroidAudioInAEC*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.AndroidAudioInAEC/DataCallback
#include "Photon/Voice/Unity/AndroidAudioInAEC_DataCallback.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Int16[]> callback
[[deprecated("Use field access instead!")]] ::System::Action_1<::ArrayW<int16_t>>*& Photon::Voice::Unity::AndroidAudioInAEC::DataCallback::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AndroidAudioInAEC::DataCallback::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::System::Action_1<::ArrayW<int16_t>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IntPtr javaBuf
[[deprecated("Use field access instead!")]] ::System::IntPtr& Photon::Voice::Unity::AndroidAudioInAEC::DataCallback::dyn_javaBuf() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AndroidAudioInAEC::DataCallback::dyn_javaBuf");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "javaBuf"))->offset;
  return *reinterpret_cast<::System::IntPtr*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 cntFrame
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::AndroidAudioInAEC::DataCallback::dyn_cntFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AndroidAudioInAEC::DataCallback::dyn_cntFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cntFrame"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 cntShort
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::AndroidAudioInAEC::DataCallback::dyn_cntShort() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AndroidAudioInAEC::DataCallback::dyn_cntShort");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cntShort"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.AndroidAudioInAEC/DataCallback.SetCallback
void Photon::Voice::Unity::AndroidAudioInAEC::DataCallback::SetCallback(::System::Action_1<::ArrayW<int16_t>>* callback, ::System::IntPtr javaBuf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AndroidAudioInAEC::DataCallback::SetCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(javaBuf)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback, javaBuf);
}
// Autogenerated method: Photon.Voice.Unity.AndroidAudioInAEC/DataCallback.OnData
void Photon::Voice::Unity::AndroidAudioInAEC::DataCallback::OnData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AndroidAudioInAEC::DataCallback::OnData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.AndroidAudioInAEC/DataCallback.OnStop
void Photon::Voice::Unity::AndroidAudioInAEC::DataCallback::OnStop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AndroidAudioInAEC::DataCallback::OnStop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnStop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.AudioClipWrapper
#include "Photon/Voice/Unity/AudioClipWrapper.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip audioClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& Photon::Voice::Unity::AudioClipWrapper::dyn_audioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AudioClipWrapper::dyn_audioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 readPos
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::AudioClipWrapper::dyn_readPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AudioClipWrapper::dyn_readPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single startTime
[[deprecated("Use field access instead!")]] float& Photon::Voice::Unity::AudioClipWrapper::dyn_startTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AudioClipWrapper::dyn_startTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Loop>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::AudioClipWrapper::dyn_$Loop$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AudioClipWrapper::dyn_$Loop$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Loop>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean playing
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::AudioClipWrapper::dyn_playing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AudioClipWrapper::dyn_playing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Error>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Voice::Unity::AudioClipWrapper::dyn_$Error$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AudioClipWrapper::dyn_$Error$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Error>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.AudioClipWrapper.get_Loop
bool Photon::Voice::Unity::AudioClipWrapper::get_Loop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AudioClipWrapper::get_Loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.AudioClipWrapper.set_Loop
void Photon::Voice::Unity::AudioClipWrapper::set_Loop(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AudioClipWrapper::set_Loop");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Loop", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.AudioClipWrapper.Read
bool Photon::Voice::Unity::AudioClipWrapper::Read(::ArrayW<float> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AudioClipWrapper::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::AudioClipWrapper*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, buffer);
}
// Autogenerated method: Photon.Voice.Unity.AudioClipWrapper.get_SamplingRate
int Photon::Voice::Unity::AudioClipWrapper::get_SamplingRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AudioClipWrapper::get_SamplingRate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::AudioClipWrapper*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.AudioClipWrapper.get_Channels
int Photon::Voice::Unity::AudioClipWrapper::get_Channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AudioClipWrapper::get_Channels");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::AudioClipWrapper*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.AudioClipWrapper.get_Error
::StringW Photon::Voice::Unity::AudioClipWrapper::get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AudioClipWrapper::get_Error");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::AudioClipWrapper*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.AudioClipWrapper.set_Error
void Photon::Voice::Unity::AudioClipWrapper::set_Error(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AudioClipWrapper::set_Error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.AudioClipWrapper.Dispose
void Photon::Voice::Unity::AudioClipWrapper::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AudioClipWrapper::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::AudioClipWrapper*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.AudioOutCapture
#include "Photon/Voice/Unity/AudioOutCapture.hpp"
// Including type: System.Action`2
#include "System/Action_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Action`2<System.Single[],System.Int32> OnAudioFrame
[[deprecated("Use field access instead!")]] ::System::Action_2<::ArrayW<float>, int>*& Photon::Voice::Unity::AudioOutCapture::dyn_OnAudioFrame() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AudioOutCapture::dyn_OnAudioFrame");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "OnAudioFrame"))->offset;
  return *reinterpret_cast<::System::Action_2<::ArrayW<float>, int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.AudioOutCapture.add_OnAudioFrame
void Photon::Voice::Unity::AudioOutCapture::add_OnAudioFrame(::System::Action_2<::ArrayW<float>, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AudioOutCapture::add_OnAudioFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_OnAudioFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.AudioOutCapture.remove_OnAudioFrame
void Photon::Voice::Unity::AudioOutCapture::remove_OnAudioFrame(::System::Action_2<::ArrayW<float>, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AudioOutCapture::remove_OnAudioFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_OnAudioFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.AudioOutCapture.OnAudioFilterRead
void Photon::Voice::Unity::AudioOutCapture::OnAudioFilterRead(::ArrayW<float> frame, int channels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AudioOutCapture::OnAudioFilterRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAudioFilterRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame), ::il2cpp_utils::ExtractType(channels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frame, channels);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.PhotonVoiceCreatedParams
#include "Photon/Voice/Unity/PhotonVoiceCreatedParams.hpp"
// Including type: Photon.Voice.LocalVoice
#include "Photon/Voice/LocalVoice.hpp"
// Including type: Photon.Voice.IAudioDesc
#include "Photon/Voice/IAudioDesc.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.LocalVoice <Voice>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Voice::LocalVoice*& Photon::Voice::Unity::PhotonVoiceCreatedParams::dyn_$Voice$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::PhotonVoiceCreatedParams::dyn_$Voice$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Voice>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Voice::LocalVoice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.IAudioDesc <AudioDesc>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Voice::IAudioDesc*& Photon::Voice::Unity::PhotonVoiceCreatedParams::dyn_$AudioDesc$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::PhotonVoiceCreatedParams::dyn_$AudioDesc$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AudioDesc>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Voice::IAudioDesc**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.PhotonVoiceCreatedParams.get_Voice
::Photon::Voice::LocalVoice* Photon::Voice::Unity::PhotonVoiceCreatedParams::get_Voice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::PhotonVoiceCreatedParams::get_Voice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Voice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::LocalVoice*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.PhotonVoiceCreatedParams.set_Voice
void Photon::Voice::Unity::PhotonVoiceCreatedParams::set_Voice(::Photon::Voice::LocalVoice* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::PhotonVoiceCreatedParams::set_Voice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Voice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.PhotonVoiceCreatedParams.get_AudioDesc
::Photon::Voice::IAudioDesc* Photon::Voice::Unity::PhotonVoiceCreatedParams::get_AudioDesc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::PhotonVoiceCreatedParams::get_AudioDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::IAudioDesc*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.PhotonVoiceCreatedParams.set_AudioDesc
void Photon::Voice::Unity::PhotonVoiceCreatedParams::set_AudioDesc(::Photon::Voice::IAudioDesc* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::PhotonVoiceCreatedParams::set_AudioDesc");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioDesc", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.AudioInEnumerator
#include "Photon/Voice/Unity/AudioInEnumerator.hpp"
// Including type: Photon.Voice.ILogger
#include "Photon/Voice/ILogger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.Unity.AudioInEnumerator.Refresh
void Photon::Voice::Unity::AudioInEnumerator::Refresh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AudioInEnumerator::Refresh");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::DeviceEnumeratorBase*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.AudioInEnumerator.get_Error
::StringW Photon::Voice::Unity::AudioInEnumerator::get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AudioInEnumerator::get_Error");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::DeviceEnumeratorBase*), 11));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.AudioInEnumerator.Dispose
void Photon::Voice::Unity::AudioInEnumerator::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AudioInEnumerator::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::DeviceEnumeratorBase*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Voice.Unity.Logger
#include "Photon/Voice/Unity/Logger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.Unity.Logger.LogError
void Photon::Voice::Unity::Logger::LogError(::StringW fmt, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Logger::LogError");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::Logger*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fmt, args);
}
// Autogenerated method: Photon.Voice.Unity.Logger.LogWarning
void Photon::Voice::Unity::Logger::LogWarning(::StringW fmt, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Logger::LogWarning");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::Logger*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fmt, args);
}
// Autogenerated method: Photon.Voice.Unity.Logger.LogInfo
void Photon::Voice::Unity::Logger::LogInfo(::StringW fmt, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Logger::LogInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::Logger*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fmt, args);
}
// Autogenerated method: Photon.Voice.Unity.Logger.LogDebug
void Photon::Voice::Unity::Logger::LogDebug(::StringW fmt, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Logger::LogDebug");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::Logger*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fmt, args);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.MicWrapper
#include "Photon/Voice/Unity/MicWrapper.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: Photon.Voice.ILogger
#include "Photon/Voice/ILogger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip mic
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& Photon::Voice::Unity::MicWrapper::dyn_mic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapper::dyn_mic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mic"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String device
[[deprecated("Use field access instead!")]] ::StringW& Photon::Voice::Unity::MicWrapper::dyn_device() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapper::dyn_device");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "device"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.ILogger logger
[[deprecated("Use field access instead!")]] ::Photon::Voice::ILogger*& Photon::Voice::Unity::MicWrapper::dyn_logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapper::dyn_logger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "logger"))->offset;
  return *reinterpret_cast<::Photon::Voice::ILogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Error>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Voice::Unity::MicWrapper::dyn_$Error$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapper::dyn_$Error$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Error>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 micPrevPos
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::MicWrapper::dyn_micPrevPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapper::dyn_micPrevPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micPrevPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 micLoopCnt
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::MicWrapper::dyn_micLoopCnt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapper::dyn_micLoopCnt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "micLoopCnt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 readAbsPos
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::MicWrapper::dyn_readAbsPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapper::dyn_readAbsPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "readAbsPos"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.MicWrapper.get_SamplingRate
int Photon::Voice::Unity::MicWrapper::get_SamplingRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapper::get_SamplingRate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::MicWrapper*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.MicWrapper.get_Channels
int Photon::Voice::Unity::MicWrapper::get_Channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapper::get_Channels");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::MicWrapper*), 7));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.MicWrapper.get_Error
::StringW Photon::Voice::Unity::MicWrapper::get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapper::get_Error");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::MicWrapper*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.MicWrapper.set_Error
void Photon::Voice::Unity::MicWrapper::set_Error(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapper::set_Error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.MicWrapper.Dispose
void Photon::Voice::Unity::MicWrapper::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapper::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::MicWrapper*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.MicWrapper.Read
bool Photon::Voice::Unity::MicWrapper::Read(::ArrayW<float> buffer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapper::Read");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::MicWrapper*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, buffer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.MicWrapperPusher
#include "Photon/Voice/Unity/MicWrapperPusher.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: Photon.Voice.ILogger
#include "Photon/Voice/ILogger.hpp"
// Including type: Photon.Voice.Unity.AudioOutCapture
#include "Photon/Voice/Unity/AudioOutCapture.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: Photon.Voice.ObjectFactory`2
#include "Photon/Voice/ObjectFactory_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& Photon::Voice::Unity::MicWrapperPusher::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapperPusher::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip mic
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& Photon::Voice::Unity::MicWrapperPusher::dyn_mic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapperPusher::dyn_mic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mic"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String device
[[deprecated("Use field access instead!")]] ::StringW& Photon::Voice::Unity::MicWrapperPusher::dyn_device() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapperPusher::dyn_device");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "device"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.ILogger logger
[[deprecated("Use field access instead!")]] ::Photon::Voice::ILogger*& Photon::Voice::Unity::MicWrapperPusher::dyn_logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapperPusher::dyn_logger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "logger"))->offset;
  return *reinterpret_cast<::Photon::Voice::ILogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.AudioOutCapture audioOutCapture
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::AudioOutCapture*& Photon::Voice::Unity::MicWrapperPusher::dyn_audioOutCapture() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapperPusher::dyn_audioOutCapture");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioOutCapture"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::AudioOutCapture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 sampleRate
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::MicWrapperPusher::dyn_sampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapperPusher::dyn_sampleRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sampleRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 channels
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::MicWrapperPusher::dyn_channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapperPusher::dyn_channels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "channels"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean destroyGameObjectOnStop
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::MicWrapperPusher::dyn_destroyGameObjectOnStop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapperPusher::dyn_destroyGameObjectOnStop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "destroyGameObjectOnStop"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] frame2
[[deprecated("Use field access instead!")]] ::ArrayW<float>& Photon::Voice::Unity::MicWrapperPusher::dyn_frame2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapperPusher::dyn_frame2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frame2"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<System.Single[]> pushCallback
[[deprecated("Use field access instead!")]] ::System::Action_1<::ArrayW<float>>*& Photon::Voice::Unity::MicWrapperPusher::dyn_pushCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapperPusher::dyn_pushCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pushCallback"))->offset;
  return *reinterpret_cast<::System::Action_1<::ArrayW<float>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <Error>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Voice::Unity::MicWrapperPusher::dyn_$Error$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapperPusher::dyn_$Error$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Error>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.MicWrapperPusher.AudioOutCaptureOnOnAudioFrame
void Photon::Voice::Unity::MicWrapperPusher::AudioOutCaptureOnOnAudioFrame(::ArrayW<float> frame, int channelsNumber) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapperPusher::AudioOutCaptureOnOnAudioFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AudioOutCaptureOnOnAudioFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame), ::il2cpp_utils::ExtractType(channelsNumber)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frame, channelsNumber);
}
// Autogenerated method: Photon.Voice.Unity.MicWrapperPusher.SetCallback
void Photon::Voice::Unity::MicWrapperPusher::SetCallback(::System::Action_1<::ArrayW<float>>* callback, ::Photon::Voice::ObjectFactory_2<::ArrayW<float>, int>* bufferFactory) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapperPusher::SetCallback");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::MicWrapperPusher*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, callback, bufferFactory);
}
// Autogenerated method: Photon.Voice.Unity.MicWrapperPusher.Dispose
void Photon::Voice::Unity::MicWrapperPusher::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapperPusher::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::MicWrapperPusher*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.MicWrapperPusher.get_SamplingRate
int Photon::Voice::Unity::MicWrapperPusher::get_SamplingRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapperPusher::get_SamplingRate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::MicWrapperPusher*), 5));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.MicWrapperPusher.get_Channels
int Photon::Voice::Unity::MicWrapperPusher::get_Channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapperPusher::get_Channels");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::MicWrapperPusher*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.MicWrapperPusher.get_Error
::StringW Photon::Voice::Unity::MicWrapperPusher::get_Error() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapperPusher::get_Error");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::MicWrapperPusher*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.MicWrapperPusher.set_Error
void Photon::Voice::Unity::MicWrapperPusher::set_Error(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::MicWrapperPusher::set_Error");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Error", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.UnityAudioOut
#include "Photon/Voice/Unity/UnityAudioOut.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: Photon.Voice.ILogger
#include "Photon/Voice/ILogger.hpp"
// Including type: Photon.Voice.AudioOutDelayControl/PlayDelayConfig
#include "Photon/Voice/AudioOutDelayControl_PlayDelayConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.AudioSource source
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& Photon::Voice::Unity::UnityAudioOut::dyn_source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UnityAudioOut::dyn_source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "source"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.UnityAudioOut.OutWrite
void Photon::Voice::Unity::UnityAudioOut::OutWrite(::ArrayW<float> data, int offsetSamples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UnityAudioOut::OutWrite");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::UnityAudioOut*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, offsetSamples);
}
// Autogenerated method: Photon.Voice.Unity.UnityAudioOut.get_OutPos
int Photon::Voice::Unity::UnityAudioOut::get_OutPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UnityAudioOut::get_OutPos");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioOutDelayControl_1<T>*), 11));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UnityAudioOut.OutCreate
void Photon::Voice::Unity::UnityAudioOut::OutCreate(int frequency, int channels, int bufferSamples) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UnityAudioOut::OutCreate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioOutDelayControl_1<T>*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frequency, channels, bufferSamples);
}
// Autogenerated method: Photon.Voice.Unity.UnityAudioOut.OutStart
void Photon::Voice::Unity::UnityAudioOut::OutStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UnityAudioOut::OutStart");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioOutDelayControl_1<T>*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UnityAudioOut.Stop
void Photon::Voice::Unity::UnityAudioOut::Stop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UnityAudioOut::Stop");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::AudioOutDelayControl_1<T>*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.UnityMicrophone
#include "Photon/Voice/Unity/UnityMicrophone.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.Unity.UnityMicrophone.get_devices
::ArrayW<::StringW> Photon::Voice::Unity::UnityMicrophone::get_devices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UnityMicrophone::get_devices");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice.Unity", "UnityMicrophone", "get_devices", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UnityMicrophone.End
void Photon::Voice::Unity::UnityMicrophone::End(::StringW deviceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UnityMicrophone::End");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice.Unity", "UnityMicrophone", "End", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceName);
}
// Autogenerated method: Photon.Voice.Unity.UnityMicrophone.GetDeviceCaps
void Photon::Voice::Unity::UnityMicrophone::GetDeviceCaps(::StringW deviceName, ByRef<int> minFreq, ByRef<int> maxFreq) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UnityMicrophone::GetDeviceCaps");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice.Unity", "UnityMicrophone", "GetDeviceCaps", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceName), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractIndependentType<int&>()})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceName, byref(minFreq), byref(maxFreq));
}
// Autogenerated method: Photon.Voice.Unity.UnityMicrophone.GetPosition
int Photon::Voice::Unity::UnityMicrophone::GetPosition(::StringW deviceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UnityMicrophone::GetPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice.Unity", "UnityMicrophone", "GetPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceName)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceName);
}
// Autogenerated method: Photon.Voice.Unity.UnityMicrophone.IsRecording
bool Photon::Voice::Unity::UnityMicrophone::IsRecording(::StringW deviceName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UnityMicrophone::IsRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice.Unity", "UnityMicrophone", "IsRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceName);
}
// Autogenerated method: Photon.Voice.Unity.UnityMicrophone.Start
::UnityEngine::AudioClip* Photon::Voice::Unity::UnityMicrophone::Start(::StringW deviceName, bool loop, int lengthSec, int frequency) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UnityMicrophone::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice.Unity", "UnityMicrophone", "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceName), ::il2cpp_utils::ExtractType(loop), ::il2cpp_utils::ExtractType(lengthSec), ::il2cpp_utils::ExtractType(frequency)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, deviceName, loop, lengthSec, frequency);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.IOS.AudioSessionCategory
#include "Photon/Voice/IOS/AudioSessionCategory.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Voice.IOS.AudioSessionCategory Ambient
::Photon::Voice::IOS::AudioSessionCategory Photon::Voice::IOS::AudioSessionCategory::_get_Ambient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionCategory::_get_Ambient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::IOS::AudioSessionCategory>("Photon.Voice.IOS", "AudioSessionCategory", "Ambient"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.IOS.AudioSessionCategory Ambient
void Photon::Voice::IOS::AudioSessionCategory::_set_Ambient(::Photon::Voice::IOS::AudioSessionCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionCategory::_set_Ambient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.IOS", "AudioSessionCategory", "Ambient", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.IOS.AudioSessionCategory SoloAmbient
::Photon::Voice::IOS::AudioSessionCategory Photon::Voice::IOS::AudioSessionCategory::_get_SoloAmbient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionCategory::_get_SoloAmbient");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::IOS::AudioSessionCategory>("Photon.Voice.IOS", "AudioSessionCategory", "SoloAmbient"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.IOS.AudioSessionCategory SoloAmbient
void Photon::Voice::IOS::AudioSessionCategory::_set_SoloAmbient(::Photon::Voice::IOS::AudioSessionCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionCategory::_set_SoloAmbient");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.IOS", "AudioSessionCategory", "SoloAmbient", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.IOS.AudioSessionCategory Playback
::Photon::Voice::IOS::AudioSessionCategory Photon::Voice::IOS::AudioSessionCategory::_get_Playback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionCategory::_get_Playback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::IOS::AudioSessionCategory>("Photon.Voice.IOS", "AudioSessionCategory", "Playback"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.IOS.AudioSessionCategory Playback
void Photon::Voice::IOS::AudioSessionCategory::_set_Playback(::Photon::Voice::IOS::AudioSessionCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionCategory::_set_Playback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.IOS", "AudioSessionCategory", "Playback", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.IOS.AudioSessionCategory Record
::Photon::Voice::IOS::AudioSessionCategory Photon::Voice::IOS::AudioSessionCategory::_get_Record() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionCategory::_get_Record");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::IOS::AudioSessionCategory>("Photon.Voice.IOS", "AudioSessionCategory", "Record"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.IOS.AudioSessionCategory Record
void Photon::Voice::IOS::AudioSessionCategory::_set_Record(::Photon::Voice::IOS::AudioSessionCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionCategory::_set_Record");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.IOS", "AudioSessionCategory", "Record", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.IOS.AudioSessionCategory PlayAndRecord
::Photon::Voice::IOS::AudioSessionCategory Photon::Voice::IOS::AudioSessionCategory::_get_PlayAndRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionCategory::_get_PlayAndRecord");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::IOS::AudioSessionCategory>("Photon.Voice.IOS", "AudioSessionCategory", "PlayAndRecord"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.IOS.AudioSessionCategory PlayAndRecord
void Photon::Voice::IOS::AudioSessionCategory::_set_PlayAndRecord(::Photon::Voice::IOS::AudioSessionCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionCategory::_set_PlayAndRecord");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.IOS", "AudioSessionCategory", "PlayAndRecord", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.IOS.AudioSessionCategory AudioProcessing
::Photon::Voice::IOS::AudioSessionCategory Photon::Voice::IOS::AudioSessionCategory::_get_AudioProcessing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionCategory::_get_AudioProcessing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::IOS::AudioSessionCategory>("Photon.Voice.IOS", "AudioSessionCategory", "AudioProcessing"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.IOS.AudioSessionCategory AudioProcessing
void Photon::Voice::IOS::AudioSessionCategory::_set_AudioProcessing(::Photon::Voice::IOS::AudioSessionCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionCategory::_set_AudioProcessing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.IOS", "AudioSessionCategory", "AudioProcessing", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.IOS.AudioSessionCategory MultiRoute
::Photon::Voice::IOS::AudioSessionCategory Photon::Voice::IOS::AudioSessionCategory::_get_MultiRoute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionCategory::_get_MultiRoute");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::IOS::AudioSessionCategory>("Photon.Voice.IOS", "AudioSessionCategory", "MultiRoute"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.IOS.AudioSessionCategory MultiRoute
void Photon::Voice::IOS::AudioSessionCategory::_set_MultiRoute(::Photon::Voice::IOS::AudioSessionCategory value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionCategory::_set_MultiRoute");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.IOS", "AudioSessionCategory", "MultiRoute", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Voice::IOS::AudioSessionCategory::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionCategory::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.IOS.AudioSessionMode
#include "Photon/Voice/IOS/AudioSessionMode.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Voice.IOS.AudioSessionMode Default
::Photon::Voice::IOS::AudioSessionMode Photon::Voice::IOS::AudioSessionMode::_get_Default() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionMode::_get_Default");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::IOS::AudioSessionMode>("Photon.Voice.IOS", "AudioSessionMode", "Default"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.IOS.AudioSessionMode Default
void Photon::Voice::IOS::AudioSessionMode::_set_Default(::Photon::Voice::IOS::AudioSessionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionMode::_set_Default");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.IOS", "AudioSessionMode", "Default", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.IOS.AudioSessionMode VoiceChat
::Photon::Voice::IOS::AudioSessionMode Photon::Voice::IOS::AudioSessionMode::_get_VoiceChat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionMode::_get_VoiceChat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::IOS::AudioSessionMode>("Photon.Voice.IOS", "AudioSessionMode", "VoiceChat"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.IOS.AudioSessionMode VoiceChat
void Photon::Voice::IOS::AudioSessionMode::_set_VoiceChat(::Photon::Voice::IOS::AudioSessionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionMode::_set_VoiceChat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.IOS", "AudioSessionMode", "VoiceChat", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.IOS.AudioSessionMode VideoRecording
::Photon::Voice::IOS::AudioSessionMode Photon::Voice::IOS::AudioSessionMode::_get_VideoRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionMode::_get_VideoRecording");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::IOS::AudioSessionMode>("Photon.Voice.IOS", "AudioSessionMode", "VideoRecording"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.IOS.AudioSessionMode VideoRecording
void Photon::Voice::IOS::AudioSessionMode::_set_VideoRecording(::Photon::Voice::IOS::AudioSessionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionMode::_set_VideoRecording");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.IOS", "AudioSessionMode", "VideoRecording", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.IOS.AudioSessionMode Measurement
::Photon::Voice::IOS::AudioSessionMode Photon::Voice::IOS::AudioSessionMode::_get_Measurement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionMode::_get_Measurement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::IOS::AudioSessionMode>("Photon.Voice.IOS", "AudioSessionMode", "Measurement"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.IOS.AudioSessionMode Measurement
void Photon::Voice::IOS::AudioSessionMode::_set_Measurement(::Photon::Voice::IOS::AudioSessionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionMode::_set_Measurement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.IOS", "AudioSessionMode", "Measurement", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.IOS.AudioSessionMode MoviePlayback
::Photon::Voice::IOS::AudioSessionMode Photon::Voice::IOS::AudioSessionMode::_get_MoviePlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionMode::_get_MoviePlayback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::IOS::AudioSessionMode>("Photon.Voice.IOS", "AudioSessionMode", "MoviePlayback"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.IOS.AudioSessionMode MoviePlayback
void Photon::Voice::IOS::AudioSessionMode::_set_MoviePlayback(::Photon::Voice::IOS::AudioSessionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionMode::_set_MoviePlayback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.IOS", "AudioSessionMode", "MoviePlayback", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.IOS.AudioSessionMode VideoChat
::Photon::Voice::IOS::AudioSessionMode Photon::Voice::IOS::AudioSessionMode::_get_VideoChat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionMode::_get_VideoChat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::IOS::AudioSessionMode>("Photon.Voice.IOS", "AudioSessionMode", "VideoChat"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.IOS.AudioSessionMode VideoChat
void Photon::Voice::IOS::AudioSessionMode::_set_VideoChat(::Photon::Voice::IOS::AudioSessionMode value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionMode::_set_VideoChat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.IOS", "AudioSessionMode", "VideoChat", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Voice::IOS::AudioSessionMode::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionMode::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.IOS.AudioSessionCategoryOption
#include "Photon/Voice/IOS/AudioSessionCategoryOption.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Voice.IOS.AudioSessionCategoryOption MixWithOthers
::Photon::Voice::IOS::AudioSessionCategoryOption Photon::Voice::IOS::AudioSessionCategoryOption::_get_MixWithOthers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionCategoryOption::_get_MixWithOthers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::IOS::AudioSessionCategoryOption>("Photon.Voice.IOS", "AudioSessionCategoryOption", "MixWithOthers"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.IOS.AudioSessionCategoryOption MixWithOthers
void Photon::Voice::IOS::AudioSessionCategoryOption::_set_MixWithOthers(::Photon::Voice::IOS::AudioSessionCategoryOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionCategoryOption::_set_MixWithOthers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.IOS", "AudioSessionCategoryOption", "MixWithOthers", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.IOS.AudioSessionCategoryOption DuckOthers
::Photon::Voice::IOS::AudioSessionCategoryOption Photon::Voice::IOS::AudioSessionCategoryOption::_get_DuckOthers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionCategoryOption::_get_DuckOthers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::IOS::AudioSessionCategoryOption>("Photon.Voice.IOS", "AudioSessionCategoryOption", "DuckOthers"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.IOS.AudioSessionCategoryOption DuckOthers
void Photon::Voice::IOS::AudioSessionCategoryOption::_set_DuckOthers(::Photon::Voice::IOS::AudioSessionCategoryOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionCategoryOption::_set_DuckOthers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.IOS", "AudioSessionCategoryOption", "DuckOthers", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.IOS.AudioSessionCategoryOption AllowBluetooth
::Photon::Voice::IOS::AudioSessionCategoryOption Photon::Voice::IOS::AudioSessionCategoryOption::_get_AllowBluetooth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionCategoryOption::_get_AllowBluetooth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::IOS::AudioSessionCategoryOption>("Photon.Voice.IOS", "AudioSessionCategoryOption", "AllowBluetooth"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.IOS.AudioSessionCategoryOption AllowBluetooth
void Photon::Voice::IOS::AudioSessionCategoryOption::_set_AllowBluetooth(::Photon::Voice::IOS::AudioSessionCategoryOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionCategoryOption::_set_AllowBluetooth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.IOS", "AudioSessionCategoryOption", "AllowBluetooth", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.IOS.AudioSessionCategoryOption DefaultToSpeaker
::Photon::Voice::IOS::AudioSessionCategoryOption Photon::Voice::IOS::AudioSessionCategoryOption::_get_DefaultToSpeaker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionCategoryOption::_get_DefaultToSpeaker");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::IOS::AudioSessionCategoryOption>("Photon.Voice.IOS", "AudioSessionCategoryOption", "DefaultToSpeaker"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.IOS.AudioSessionCategoryOption DefaultToSpeaker
void Photon::Voice::IOS::AudioSessionCategoryOption::_set_DefaultToSpeaker(::Photon::Voice::IOS::AudioSessionCategoryOption value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionCategoryOption::_set_DefaultToSpeaker");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.IOS", "AudioSessionCategoryOption", "DefaultToSpeaker", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Voice::IOS::AudioSessionCategoryOption::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionCategoryOption::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.IOS.AudioSessionParameters
#include "Photon/Voice/IOS/AudioSessionParameters.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Photon.Voice.IOS.AudioSessionCategory Category
[[deprecated("Use field access instead!")]] ::Photon::Voice::IOS::AudioSessionCategory& Photon::Voice::IOS::AudioSessionParameters::dyn_Category() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionParameters::dyn_Category");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Category"))->offset;
  return *reinterpret_cast<::Photon::Voice::IOS::AudioSessionCategory*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Voice.IOS.AudioSessionMode Mode
[[deprecated("Use field access instead!")]] ::Photon::Voice::IOS::AudioSessionMode& Photon::Voice::IOS::AudioSessionParameters::dyn_Mode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionParameters::dyn_Mode");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Mode"))->offset;
  return *reinterpret_cast<::Photon::Voice::IOS::AudioSessionMode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Voice.IOS.AudioSessionCategoryOption[] CategoryOptions
[[deprecated("Use field access instead!")]] ::ArrayW<::Photon::Voice::IOS::AudioSessionCategoryOption>& Photon::Voice::IOS::AudioSessionParameters::dyn_CategoryOptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionParameters::dyn_CategoryOptions");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "CategoryOptions"))->offset;
  return *reinterpret_cast<::ArrayW<::Photon::Voice::IOS::AudioSessionCategoryOption>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.IOS.AudioSessionParameters.CategoryOptionsToInt
int Photon::Voice::IOS::AudioSessionParameters::CategoryOptionsToInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionParameters::CategoryOptionsToInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "CategoryOptionsToInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.IOS.AudioSessionParameters.ToString
::StringW Photon::Voice::IOS::AudioSessionParameters::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionParameters::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.IOS.AudioSessionParametersPresets
#include "Photon/Voice/IOS/AudioSessionParametersPresets.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Voice.IOS.AudioSessionParameters Game
::Photon::Voice::IOS::AudioSessionParameters Photon::Voice::IOS::AudioSessionParametersPresets::_get_Game() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionParametersPresets::_get_Game");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::IOS::AudioSessionParameters>("Photon.Voice.IOS", "AudioSessionParametersPresets", "Game"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.IOS.AudioSessionParameters Game
void Photon::Voice::IOS::AudioSessionParametersPresets::_set_Game(::Photon::Voice::IOS::AudioSessionParameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionParametersPresets::_set_Game");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.IOS", "AudioSessionParametersPresets", "Game", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.IOS.AudioSessionParameters VoIP
::Photon::Voice::IOS::AudioSessionParameters Photon::Voice::IOS::AudioSessionParametersPresets::_get_VoIP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionParametersPresets::_get_VoIP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::IOS::AudioSessionParameters>("Photon.Voice.IOS", "AudioSessionParametersPresets", "VoIP"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.IOS.AudioSessionParameters VoIP
void Photon::Voice::IOS::AudioSessionParametersPresets::_set_VoIP(::Photon::Voice::IOS::AudioSessionParameters value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionParametersPresets::_set_VoIP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.IOS", "AudioSessionParametersPresets", "VoIP", value));
}
// Autogenerated method: Photon.Voice.IOS.AudioSessionParametersPresets..cctor
void Photon::Voice::IOS::AudioSessionParametersPresets::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::IOS::AudioSessionParametersPresets::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice.IOS", "AudioSessionParametersPresets", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CSCore.AudioEncoding
#include "CSCore/AudioEncoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding Unknown
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding Unknown
void CSCore::AudioEncoding::_set_Unknown(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding Pcm
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_Pcm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_Pcm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "Pcm"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding Pcm
void CSCore::AudioEncoding::_set_Pcm(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_Pcm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "Pcm", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding Adpcm
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_Adpcm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_Adpcm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "Adpcm"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding Adpcm
void CSCore::AudioEncoding::_set_Adpcm(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_Adpcm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "Adpcm", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding IeeeFloat
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_IeeeFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_IeeeFloat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "IeeeFloat"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding IeeeFloat
void CSCore::AudioEncoding::_set_IeeeFloat(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_IeeeFloat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "IeeeFloat", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding Vselp
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_Vselp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_Vselp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "Vselp"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding Vselp
void CSCore::AudioEncoding::_set_Vselp(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_Vselp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "Vselp", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding IbmCvsd
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_IbmCvsd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_IbmCvsd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "IbmCvsd"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding IbmCvsd
void CSCore::AudioEncoding::_set_IbmCvsd(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_IbmCvsd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "IbmCvsd", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding ALaw
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_ALaw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_ALaw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "ALaw"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding ALaw
void CSCore::AudioEncoding::_set_ALaw(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_ALaw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "ALaw", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding MuLaw
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_MuLaw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_MuLaw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "MuLaw"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding MuLaw
void CSCore::AudioEncoding::_set_MuLaw(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_MuLaw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "MuLaw", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding Dts
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_Dts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_Dts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "Dts"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding Dts
void CSCore::AudioEncoding::_set_Dts(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_Dts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "Dts", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding Drm
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_Drm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_Drm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "Drm"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding Drm
void CSCore::AudioEncoding::_set_Drm(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_Drm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "Drm", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WmaVoice9
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WmaVoice9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WmaVoice9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WmaVoice9"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WmaVoice9
void CSCore::AudioEncoding::_set_WmaVoice9(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WmaVoice9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WmaVoice9", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding OkiAdpcm
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_OkiAdpcm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_OkiAdpcm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "OkiAdpcm"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding OkiAdpcm
void CSCore::AudioEncoding::_set_OkiAdpcm(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_OkiAdpcm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "OkiAdpcm", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding DviAdpcm
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_DviAdpcm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_DviAdpcm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "DviAdpcm"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding DviAdpcm
void CSCore::AudioEncoding::_set_DviAdpcm(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_DviAdpcm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "DviAdpcm", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding ImaAdpcm
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_ImaAdpcm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_ImaAdpcm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "ImaAdpcm"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding ImaAdpcm
void CSCore::AudioEncoding::_set_ImaAdpcm(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_ImaAdpcm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "ImaAdpcm", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding MediaspaceAdpcm
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_MediaspaceAdpcm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_MediaspaceAdpcm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "MediaspaceAdpcm"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding MediaspaceAdpcm
void CSCore::AudioEncoding::_set_MediaspaceAdpcm(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_MediaspaceAdpcm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "MediaspaceAdpcm", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding SierraAdpcm
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_SierraAdpcm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_SierraAdpcm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "SierraAdpcm"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding SierraAdpcm
void CSCore::AudioEncoding::_set_SierraAdpcm(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_SierraAdpcm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "SierraAdpcm", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding G723Adpcm
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_G723Adpcm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_G723Adpcm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "G723Adpcm"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding G723Adpcm
void CSCore::AudioEncoding::_set_G723Adpcm(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_G723Adpcm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "G723Adpcm", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding DigiStd
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_DigiStd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_DigiStd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "DigiStd"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding DigiStd
void CSCore::AudioEncoding::_set_DigiStd(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_DigiStd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "DigiStd", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding DigiFix
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_DigiFix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_DigiFix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "DigiFix"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding DigiFix
void CSCore::AudioEncoding::_set_DigiFix(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_DigiFix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "DigiFix", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding DialogicOkiAdpcm
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_DialogicOkiAdpcm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_DialogicOkiAdpcm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "DialogicOkiAdpcm"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding DialogicOkiAdpcm
void CSCore::AudioEncoding::_set_DialogicOkiAdpcm(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_DialogicOkiAdpcm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "DialogicOkiAdpcm", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding MediaVisionAdpcm
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_MediaVisionAdpcm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_MediaVisionAdpcm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "MediaVisionAdpcm"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding MediaVisionAdpcm
void CSCore::AudioEncoding::_set_MediaVisionAdpcm(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_MediaVisionAdpcm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "MediaVisionAdpcm", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding CUCodec
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_CUCodec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_CUCodec");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "CUCodec"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding CUCodec
void CSCore::AudioEncoding::_set_CUCodec(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_CUCodec");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "CUCodec", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding YamahaAdpcm
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_YamahaAdpcm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_YamahaAdpcm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "YamahaAdpcm"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding YamahaAdpcm
void CSCore::AudioEncoding::_set_YamahaAdpcm(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_YamahaAdpcm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "YamahaAdpcm", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding SonarC
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_SonarC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_SonarC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "SonarC"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding SonarC
void CSCore::AudioEncoding::_set_SonarC(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_SonarC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "SonarC", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding DspGroupTrueSpeech
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_DspGroupTrueSpeech() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_DspGroupTrueSpeech");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "DspGroupTrueSpeech"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding DspGroupTrueSpeech
void CSCore::AudioEncoding::_set_DspGroupTrueSpeech(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_DspGroupTrueSpeech");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "DspGroupTrueSpeech", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding EchoSpeechCorporation1
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_EchoSpeechCorporation1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_EchoSpeechCorporation1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "EchoSpeechCorporation1"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding EchoSpeechCorporation1
void CSCore::AudioEncoding::_set_EchoSpeechCorporation1(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_EchoSpeechCorporation1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "EchoSpeechCorporation1", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding AudioFileAf36
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_AudioFileAf36() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_AudioFileAf36");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "AudioFileAf36"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding AudioFileAf36
void CSCore::AudioEncoding::_set_AudioFileAf36(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_AudioFileAf36");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "AudioFileAf36", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding Aptx
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_Aptx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_Aptx");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "Aptx"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding Aptx
void CSCore::AudioEncoding::_set_Aptx(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_Aptx");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "Aptx", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding AudioFileAf10
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_AudioFileAf10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_AudioFileAf10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "AudioFileAf10"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding AudioFileAf10
void CSCore::AudioEncoding::_set_AudioFileAf10(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_AudioFileAf10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "AudioFileAf10", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding Prosody1612
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_Prosody1612() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_Prosody1612");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "Prosody1612"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding Prosody1612
void CSCore::AudioEncoding::_set_Prosody1612(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_Prosody1612");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "Prosody1612", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding Lrc
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_Lrc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_Lrc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "Lrc"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding Lrc
void CSCore::AudioEncoding::_set_Lrc(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_Lrc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "Lrc", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding DolbyAc2
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_DolbyAc2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_DolbyAc2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "DolbyAc2"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding DolbyAc2
void CSCore::AudioEncoding::_set_DolbyAc2(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_DolbyAc2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "DolbyAc2", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding Gsm610
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_Gsm610() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_Gsm610");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "Gsm610"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding Gsm610
void CSCore::AudioEncoding::_set_Gsm610(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_Gsm610");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "Gsm610", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding MsnAudio
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_MsnAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_MsnAudio");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "MsnAudio"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding MsnAudio
void CSCore::AudioEncoding::_set_MsnAudio(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_MsnAudio");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "MsnAudio", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding AntexAdpcme
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_AntexAdpcme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_AntexAdpcme");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "AntexAdpcme"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding AntexAdpcme
void CSCore::AudioEncoding::_set_AntexAdpcme(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_AntexAdpcme");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "AntexAdpcme", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding ControlResVqlpc
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_ControlResVqlpc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_ControlResVqlpc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "ControlResVqlpc"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding ControlResVqlpc
void CSCore::AudioEncoding::_set_ControlResVqlpc(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_ControlResVqlpc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "ControlResVqlpc", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding DigiReal
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_DigiReal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_DigiReal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "DigiReal"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding DigiReal
void CSCore::AudioEncoding::_set_DigiReal(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_DigiReal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "DigiReal", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding DigiAdpcm
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_DigiAdpcm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_DigiAdpcm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "DigiAdpcm"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding DigiAdpcm
void CSCore::AudioEncoding::_set_DigiAdpcm(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_DigiAdpcm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "DigiAdpcm", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding ControlResCr10
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_ControlResCr10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_ControlResCr10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "ControlResCr10"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding ControlResCr10
void CSCore::AudioEncoding::_set_ControlResCr10(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_ControlResCr10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "ControlResCr10", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_NMS_VBXADPCM
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_NMS_VBXADPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_NMS_VBXADPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_NMS_VBXADPCM"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_NMS_VBXADPCM
void CSCore::AudioEncoding::_set_WAVE_FORMAT_NMS_VBXADPCM(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_NMS_VBXADPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_NMS_VBXADPCM", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_CS_IMAADPCM
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_CS_IMAADPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_CS_IMAADPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_CS_IMAADPCM"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_CS_IMAADPCM
void CSCore::AudioEncoding::_set_WAVE_FORMAT_CS_IMAADPCM(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_CS_IMAADPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_CS_IMAADPCM", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_ECHOSC3
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_ECHOSC3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_ECHOSC3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_ECHOSC3"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_ECHOSC3
void CSCore::AudioEncoding::_set_WAVE_FORMAT_ECHOSC3(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_ECHOSC3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_ECHOSC3", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_ROCKWELL_ADPCM
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_ROCKWELL_ADPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_ROCKWELL_ADPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_ROCKWELL_ADPCM"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_ROCKWELL_ADPCM
void CSCore::AudioEncoding::_set_WAVE_FORMAT_ROCKWELL_ADPCM(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_ROCKWELL_ADPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_ROCKWELL_ADPCM", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_ROCKWELL_DIGITALK
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_ROCKWELL_DIGITALK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_ROCKWELL_DIGITALK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_ROCKWELL_DIGITALK"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_ROCKWELL_DIGITALK
void CSCore::AudioEncoding::_set_WAVE_FORMAT_ROCKWELL_DIGITALK(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_ROCKWELL_DIGITALK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_ROCKWELL_DIGITALK", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_XEBEC
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_XEBEC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_XEBEC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_XEBEC"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_XEBEC
void CSCore::AudioEncoding::_set_WAVE_FORMAT_XEBEC(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_XEBEC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_XEBEC", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_G721_ADPCM
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_G721_ADPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_G721_ADPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_G721_ADPCM"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_G721_ADPCM
void CSCore::AudioEncoding::_set_WAVE_FORMAT_G721_ADPCM(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_G721_ADPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_G721_ADPCM", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_G728_CELP
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_G728_CELP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_G728_CELP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_G728_CELP"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_G728_CELP
void CSCore::AudioEncoding::_set_WAVE_FORMAT_G728_CELP(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_G728_CELP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_G728_CELP", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_MSG723
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_MSG723() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_MSG723");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_MSG723"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_MSG723
void CSCore::AudioEncoding::_set_WAVE_FORMAT_MSG723(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_MSG723");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_MSG723", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding Mpeg
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_Mpeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_Mpeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "Mpeg"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding Mpeg
void CSCore::AudioEncoding::_set_Mpeg(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_Mpeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "Mpeg", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_RT24
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_RT24() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_RT24");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_RT24"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_RT24
void CSCore::AudioEncoding::_set_WAVE_FORMAT_RT24(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_RT24");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_RT24", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_PAC
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_PAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_PAC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_PAC"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_PAC
void CSCore::AudioEncoding::_set_WAVE_FORMAT_PAC(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_PAC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_PAC", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding MpegLayer3
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_MpegLayer3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_MpegLayer3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "MpegLayer3"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding MpegLayer3
void CSCore::AudioEncoding::_set_MpegLayer3(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_MpegLayer3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "MpegLayer3", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_LUCENT_G723
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_LUCENT_G723() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_LUCENT_G723");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_LUCENT_G723"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_LUCENT_G723
void CSCore::AudioEncoding::_set_WAVE_FORMAT_LUCENT_G723(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_LUCENT_G723");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_LUCENT_G723", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_CIRRUS
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_CIRRUS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_CIRRUS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_CIRRUS"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_CIRRUS
void CSCore::AudioEncoding::_set_WAVE_FORMAT_CIRRUS(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_CIRRUS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_CIRRUS", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_ESPCM
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_ESPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_ESPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_ESPCM"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_ESPCM
void CSCore::AudioEncoding::_set_WAVE_FORMAT_ESPCM(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_ESPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_ESPCM", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_VOXWARE
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_VOXWARE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_VOXWARE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_VOXWARE"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_VOXWARE
void CSCore::AudioEncoding::_set_WAVE_FORMAT_VOXWARE(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_VOXWARE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_VOXWARE", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_CANOPUS_ATRAC
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_CANOPUS_ATRAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_CANOPUS_ATRAC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_CANOPUS_ATRAC"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_CANOPUS_ATRAC
void CSCore::AudioEncoding::_set_WAVE_FORMAT_CANOPUS_ATRAC(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_CANOPUS_ATRAC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_CANOPUS_ATRAC", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_G726_ADPCM
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_G726_ADPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_G726_ADPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_G726_ADPCM"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_G726_ADPCM
void CSCore::AudioEncoding::_set_WAVE_FORMAT_G726_ADPCM(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_G726_ADPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_G726_ADPCM", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_G722_ADPCM
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_G722_ADPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_G722_ADPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_G722_ADPCM"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_G722_ADPCM
void CSCore::AudioEncoding::_set_WAVE_FORMAT_G722_ADPCM(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_G722_ADPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_G722_ADPCM", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_DSAT_DISPLAY
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_DSAT_DISPLAY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_DSAT_DISPLAY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_DSAT_DISPLAY"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_DSAT_DISPLAY
void CSCore::AudioEncoding::_set_WAVE_FORMAT_DSAT_DISPLAY(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_DSAT_DISPLAY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_DSAT_DISPLAY", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_VOXWARE_BYTE_ALIGNED
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_VOXWARE_BYTE_ALIGNED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_VOXWARE_BYTE_ALIGNED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_VOXWARE_BYTE_ALIGNED"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_VOXWARE_BYTE_ALIGNED
void CSCore::AudioEncoding::_set_WAVE_FORMAT_VOXWARE_BYTE_ALIGNED(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_VOXWARE_BYTE_ALIGNED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_VOXWARE_BYTE_ALIGNED", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_VOXWARE_AC8
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_VOXWARE_AC8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_VOXWARE_AC8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_VOXWARE_AC8"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_VOXWARE_AC8
void CSCore::AudioEncoding::_set_WAVE_FORMAT_VOXWARE_AC8(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_VOXWARE_AC8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_VOXWARE_AC8", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_VOXWARE_AC10
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_VOXWARE_AC10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_VOXWARE_AC10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_VOXWARE_AC10"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_VOXWARE_AC10
void CSCore::AudioEncoding::_set_WAVE_FORMAT_VOXWARE_AC10(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_VOXWARE_AC10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_VOXWARE_AC10", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_VOXWARE_AC16
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_VOXWARE_AC16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_VOXWARE_AC16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_VOXWARE_AC16"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_VOXWARE_AC16
void CSCore::AudioEncoding::_set_WAVE_FORMAT_VOXWARE_AC16(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_VOXWARE_AC16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_VOXWARE_AC16", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_VOXWARE_AC20
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_VOXWARE_AC20() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_VOXWARE_AC20");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_VOXWARE_AC20"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_VOXWARE_AC20
void CSCore::AudioEncoding::_set_WAVE_FORMAT_VOXWARE_AC20(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_VOXWARE_AC20");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_VOXWARE_AC20", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_VOXWARE_RT24
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_VOXWARE_RT24() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_VOXWARE_RT24");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_VOXWARE_RT24"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_VOXWARE_RT24
void CSCore::AudioEncoding::_set_WAVE_FORMAT_VOXWARE_RT24(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_VOXWARE_RT24");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_VOXWARE_RT24", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_VOXWARE_RT29
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_VOXWARE_RT29() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_VOXWARE_RT29");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_VOXWARE_RT29"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_VOXWARE_RT29
void CSCore::AudioEncoding::_set_WAVE_FORMAT_VOXWARE_RT29(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_VOXWARE_RT29");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_VOXWARE_RT29", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_VOXWARE_RT29HW
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_VOXWARE_RT29HW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_VOXWARE_RT29HW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_VOXWARE_RT29HW"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_VOXWARE_RT29HW
void CSCore::AudioEncoding::_set_WAVE_FORMAT_VOXWARE_RT29HW(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_VOXWARE_RT29HW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_VOXWARE_RT29HW", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_VOXWARE_VR12
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_VOXWARE_VR12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_VOXWARE_VR12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_VOXWARE_VR12"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_VOXWARE_VR12
void CSCore::AudioEncoding::_set_WAVE_FORMAT_VOXWARE_VR12(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_VOXWARE_VR12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_VOXWARE_VR12", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_VOXWARE_VR18
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_VOXWARE_VR18() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_VOXWARE_VR18");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_VOXWARE_VR18"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_VOXWARE_VR18
void CSCore::AudioEncoding::_set_WAVE_FORMAT_VOXWARE_VR18(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_VOXWARE_VR18");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_VOXWARE_VR18", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_VOXWARE_TQ40
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_VOXWARE_TQ40() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_VOXWARE_TQ40");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_VOXWARE_TQ40"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_VOXWARE_TQ40
void CSCore::AudioEncoding::_set_WAVE_FORMAT_VOXWARE_TQ40(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_VOXWARE_TQ40");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_VOXWARE_TQ40", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_SOFTSOUND
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_SOFTSOUND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_SOFTSOUND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_SOFTSOUND"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_SOFTSOUND
void CSCore::AudioEncoding::_set_WAVE_FORMAT_SOFTSOUND(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_SOFTSOUND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_SOFTSOUND", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_VOXWARE_TQ60
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_VOXWARE_TQ60() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_VOXWARE_TQ60");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_VOXWARE_TQ60"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_VOXWARE_TQ60
void CSCore::AudioEncoding::_set_WAVE_FORMAT_VOXWARE_TQ60(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_VOXWARE_TQ60");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_VOXWARE_TQ60", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_MSRT24
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_MSRT24() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_MSRT24");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_MSRT24"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_MSRT24
void CSCore::AudioEncoding::_set_WAVE_FORMAT_MSRT24(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_MSRT24");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_MSRT24", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_G729A
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_G729A() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_G729A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_G729A"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_G729A
void CSCore::AudioEncoding::_set_WAVE_FORMAT_G729A(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_G729A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_G729A", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_MVI_MVI2
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_MVI_MVI2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_MVI_MVI2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_MVI_MVI2"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_MVI_MVI2
void CSCore::AudioEncoding::_set_WAVE_FORMAT_MVI_MVI2(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_MVI_MVI2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_MVI_MVI2", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_DF_G726
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_DF_G726() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_DF_G726");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_DF_G726"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_DF_G726
void CSCore::AudioEncoding::_set_WAVE_FORMAT_DF_G726(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_DF_G726");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_DF_G726", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_DF_GSM610
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_DF_GSM610() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_DF_GSM610");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_DF_GSM610"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_DF_GSM610
void CSCore::AudioEncoding::_set_WAVE_FORMAT_DF_GSM610(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_DF_GSM610");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_DF_GSM610", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_ISIAUDIO
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_ISIAUDIO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_ISIAUDIO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_ISIAUDIO"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_ISIAUDIO
void CSCore::AudioEncoding::_set_WAVE_FORMAT_ISIAUDIO(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_ISIAUDIO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_ISIAUDIO", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_ONLIVE
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_ONLIVE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_ONLIVE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_ONLIVE"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_ONLIVE
void CSCore::AudioEncoding::_set_WAVE_FORMAT_ONLIVE(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_ONLIVE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_ONLIVE", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_SBC24
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_SBC24() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_SBC24");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_SBC24"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_SBC24
void CSCore::AudioEncoding::_set_WAVE_FORMAT_SBC24(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_SBC24");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_SBC24", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_DOLBY_AC3_SPDIF
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_DOLBY_AC3_SPDIF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_DOLBY_AC3_SPDIF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_DOLBY_AC3_SPDIF"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_DOLBY_AC3_SPDIF
void CSCore::AudioEncoding::_set_WAVE_FORMAT_DOLBY_AC3_SPDIF(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_DOLBY_AC3_SPDIF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_DOLBY_AC3_SPDIF", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_MEDIASONIC_G723
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_MEDIASONIC_G723() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_MEDIASONIC_G723");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_MEDIASONIC_G723"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_MEDIASONIC_G723
void CSCore::AudioEncoding::_set_WAVE_FORMAT_MEDIASONIC_G723(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_MEDIASONIC_G723");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_MEDIASONIC_G723", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_PROSODY_8KBPS
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_PROSODY_8KBPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_PROSODY_8KBPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_PROSODY_8KBPS"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_PROSODY_8KBPS
void CSCore::AudioEncoding::_set_WAVE_FORMAT_PROSODY_8KBPS(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_PROSODY_8KBPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_PROSODY_8KBPS", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_ZYXEL_ADPCM
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_ZYXEL_ADPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_ZYXEL_ADPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_ZYXEL_ADPCM"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_ZYXEL_ADPCM
void CSCore::AudioEncoding::_set_WAVE_FORMAT_ZYXEL_ADPCM(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_ZYXEL_ADPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_ZYXEL_ADPCM", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_PHILIPS_LPCBB
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_PHILIPS_LPCBB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_PHILIPS_LPCBB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_PHILIPS_LPCBB"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_PHILIPS_LPCBB
void CSCore::AudioEncoding::_set_WAVE_FORMAT_PHILIPS_LPCBB(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_PHILIPS_LPCBB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_PHILIPS_LPCBB", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_PACKED
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_PACKED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_PACKED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_PACKED"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_PACKED
void CSCore::AudioEncoding::_set_WAVE_FORMAT_PACKED(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_PACKED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_PACKED", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_MALDEN_PHONYTALK
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_MALDEN_PHONYTALK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_MALDEN_PHONYTALK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_MALDEN_PHONYTALK"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_MALDEN_PHONYTALK
void CSCore::AudioEncoding::_set_WAVE_FORMAT_MALDEN_PHONYTALK(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_MALDEN_PHONYTALK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_MALDEN_PHONYTALK", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding Gsm
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_Gsm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_Gsm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "Gsm"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding Gsm
void CSCore::AudioEncoding::_set_Gsm(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_Gsm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "Gsm", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding G729
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_G729() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_G729");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "G729"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding G729
void CSCore::AudioEncoding::_set_G729(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_G729");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "G729", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding G723
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_G723() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_G723");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "G723"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding G723
void CSCore::AudioEncoding::_set_G723(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_G723");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "G723", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding Acelp
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_Acelp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_Acelp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "Acelp"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding Acelp
void CSCore::AudioEncoding::_set_Acelp(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_Acelp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "Acelp", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding RawAac
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_RawAac() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_RawAac");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "RawAac"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding RawAac
void CSCore::AudioEncoding::_set_RawAac(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_RawAac");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "RawAac", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_RHETOREX_ADPCM
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_RHETOREX_ADPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_RHETOREX_ADPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_RHETOREX_ADPCM"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_RHETOREX_ADPCM
void CSCore::AudioEncoding::_set_WAVE_FORMAT_RHETOREX_ADPCM(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_RHETOREX_ADPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_RHETOREX_ADPCM", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_IRAT
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_IRAT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_IRAT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_IRAT"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_IRAT
void CSCore::AudioEncoding::_set_WAVE_FORMAT_IRAT(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_IRAT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_IRAT", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_VIVO_G723
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_VIVO_G723() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_VIVO_G723");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_VIVO_G723"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_VIVO_G723
void CSCore::AudioEncoding::_set_WAVE_FORMAT_VIVO_G723(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_VIVO_G723");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_VIVO_G723", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_VIVO_SIREN
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_VIVO_SIREN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_VIVO_SIREN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_VIVO_SIREN"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_VIVO_SIREN
void CSCore::AudioEncoding::_set_WAVE_FORMAT_VIVO_SIREN(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_VIVO_SIREN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_VIVO_SIREN", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_DIGITAL_G723
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_DIGITAL_G723() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_DIGITAL_G723");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_DIGITAL_G723"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_DIGITAL_G723
void CSCore::AudioEncoding::_set_WAVE_FORMAT_DIGITAL_G723(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_DIGITAL_G723");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_DIGITAL_G723", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_SANYO_LD_ADPCM
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_SANYO_LD_ADPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_SANYO_LD_ADPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_SANYO_LD_ADPCM"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_SANYO_LD_ADPCM
void CSCore::AudioEncoding::_set_WAVE_FORMAT_SANYO_LD_ADPCM(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_SANYO_LD_ADPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_SANYO_LD_ADPCM", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_SIPROLAB_ACEPLNET
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_SIPROLAB_ACEPLNET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_SIPROLAB_ACEPLNET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_SIPROLAB_ACEPLNET"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_SIPROLAB_ACEPLNET
void CSCore::AudioEncoding::_set_WAVE_FORMAT_SIPROLAB_ACEPLNET(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_SIPROLAB_ACEPLNET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_SIPROLAB_ACEPLNET", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_SIPROLAB_ACELP4800
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_SIPROLAB_ACELP4800() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_SIPROLAB_ACELP4800");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_SIPROLAB_ACELP4800"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_SIPROLAB_ACELP4800
void CSCore::AudioEncoding::_set_WAVE_FORMAT_SIPROLAB_ACELP4800(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_SIPROLAB_ACELP4800");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_SIPROLAB_ACELP4800", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_SIPROLAB_ACELP8V3
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_SIPROLAB_ACELP8V3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_SIPROLAB_ACELP8V3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_SIPROLAB_ACELP8V3"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_SIPROLAB_ACELP8V3
void CSCore::AudioEncoding::_set_WAVE_FORMAT_SIPROLAB_ACELP8V3(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_SIPROLAB_ACELP8V3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_SIPROLAB_ACELP8V3", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_SIPROLAB_G729
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_SIPROLAB_G729() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_SIPROLAB_G729");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_SIPROLAB_G729"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_SIPROLAB_G729
void CSCore::AudioEncoding::_set_WAVE_FORMAT_SIPROLAB_G729(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_SIPROLAB_G729");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_SIPROLAB_G729", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_SIPROLAB_G729A
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_SIPROLAB_G729A() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_SIPROLAB_G729A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_SIPROLAB_G729A"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_SIPROLAB_G729A
void CSCore::AudioEncoding::_set_WAVE_FORMAT_SIPROLAB_G729A(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_SIPROLAB_G729A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_SIPROLAB_G729A", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_SIPROLAB_KELVIN
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_SIPROLAB_KELVIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_SIPROLAB_KELVIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_SIPROLAB_KELVIN"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_SIPROLAB_KELVIN
void CSCore::AudioEncoding::_set_WAVE_FORMAT_SIPROLAB_KELVIN(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_SIPROLAB_KELVIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_SIPROLAB_KELVIN", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_G726ADPCM
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_G726ADPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_G726ADPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_G726ADPCM"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_G726ADPCM
void CSCore::AudioEncoding::_set_WAVE_FORMAT_G726ADPCM(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_G726ADPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_G726ADPCM", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_QUALCOMM_PUREVOICE
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_QUALCOMM_PUREVOICE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_QUALCOMM_PUREVOICE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_QUALCOMM_PUREVOICE"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_QUALCOMM_PUREVOICE
void CSCore::AudioEncoding::_set_WAVE_FORMAT_QUALCOMM_PUREVOICE(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_QUALCOMM_PUREVOICE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_QUALCOMM_PUREVOICE", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_QUALCOMM_HALFRATE
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_QUALCOMM_HALFRATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_QUALCOMM_HALFRATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_QUALCOMM_HALFRATE"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_QUALCOMM_HALFRATE
void CSCore::AudioEncoding::_set_WAVE_FORMAT_QUALCOMM_HALFRATE(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_QUALCOMM_HALFRATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_QUALCOMM_HALFRATE", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_TUBGSM
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_TUBGSM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_TUBGSM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_TUBGSM"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_TUBGSM
void CSCore::AudioEncoding::_set_WAVE_FORMAT_TUBGSM(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_TUBGSM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_TUBGSM", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_MSAUDIO1
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_MSAUDIO1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_MSAUDIO1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_MSAUDIO1"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_MSAUDIO1
void CSCore::AudioEncoding::_set_WAVE_FORMAT_MSAUDIO1(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_MSAUDIO1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_MSAUDIO1", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WindowsMediaAudio
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WindowsMediaAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WindowsMediaAudio");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WindowsMediaAudio"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WindowsMediaAudio
void CSCore::AudioEncoding::_set_WindowsMediaAudio(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WindowsMediaAudio");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WindowsMediaAudio", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WindowsMediaAudioProfessional
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WindowsMediaAudioProfessional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WindowsMediaAudioProfessional");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WindowsMediaAudioProfessional"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WindowsMediaAudioProfessional
void CSCore::AudioEncoding::_set_WindowsMediaAudioProfessional(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WindowsMediaAudioProfessional");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WindowsMediaAudioProfessional", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WindowsMediaAudioLosseless
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WindowsMediaAudioLosseless() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WindowsMediaAudioLosseless");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WindowsMediaAudioLosseless"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WindowsMediaAudioLosseless
void CSCore::AudioEncoding::_set_WindowsMediaAudioLosseless(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WindowsMediaAudioLosseless");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WindowsMediaAudioLosseless", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WindowsMediaAudioSpdif
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WindowsMediaAudioSpdif() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WindowsMediaAudioSpdif");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WindowsMediaAudioSpdif"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WindowsMediaAudioSpdif
void CSCore::AudioEncoding::_set_WindowsMediaAudioSpdif(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WindowsMediaAudioSpdif");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WindowsMediaAudioSpdif", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_UNISYS_NAP_ADPCM
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_UNISYS_NAP_ADPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_UNISYS_NAP_ADPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_UNISYS_NAP_ADPCM"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_UNISYS_NAP_ADPCM
void CSCore::AudioEncoding::_set_WAVE_FORMAT_UNISYS_NAP_ADPCM(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_UNISYS_NAP_ADPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_UNISYS_NAP_ADPCM", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_UNISYS_NAP_ULAW
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_UNISYS_NAP_ULAW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_UNISYS_NAP_ULAW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_UNISYS_NAP_ULAW"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_UNISYS_NAP_ULAW
void CSCore::AudioEncoding::_set_WAVE_FORMAT_UNISYS_NAP_ULAW(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_UNISYS_NAP_ULAW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_UNISYS_NAP_ULAW", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_UNISYS_NAP_ALAW
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_UNISYS_NAP_ALAW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_UNISYS_NAP_ALAW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_UNISYS_NAP_ALAW"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_UNISYS_NAP_ALAW
void CSCore::AudioEncoding::_set_WAVE_FORMAT_UNISYS_NAP_ALAW(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_UNISYS_NAP_ALAW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_UNISYS_NAP_ALAW", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_UNISYS_NAP_16K
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_UNISYS_NAP_16K() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_UNISYS_NAP_16K");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_UNISYS_NAP_16K"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_UNISYS_NAP_16K
void CSCore::AudioEncoding::_set_WAVE_FORMAT_UNISYS_NAP_16K(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_UNISYS_NAP_16K");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_UNISYS_NAP_16K", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_CREATIVE_ADPCM
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_CREATIVE_ADPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_CREATIVE_ADPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_CREATIVE_ADPCM"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_CREATIVE_ADPCM
void CSCore::AudioEncoding::_set_WAVE_FORMAT_CREATIVE_ADPCM(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_CREATIVE_ADPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_CREATIVE_ADPCM", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_CREATIVE_FASTSPEECH8
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_CREATIVE_FASTSPEECH8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_CREATIVE_FASTSPEECH8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_CREATIVE_FASTSPEECH8"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_CREATIVE_FASTSPEECH8
void CSCore::AudioEncoding::_set_WAVE_FORMAT_CREATIVE_FASTSPEECH8(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_CREATIVE_FASTSPEECH8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_CREATIVE_FASTSPEECH8", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_CREATIVE_FASTSPEECH10
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_CREATIVE_FASTSPEECH10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_CREATIVE_FASTSPEECH10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_CREATIVE_FASTSPEECH10"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_CREATIVE_FASTSPEECH10
void CSCore::AudioEncoding::_set_WAVE_FORMAT_CREATIVE_FASTSPEECH10(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_CREATIVE_FASTSPEECH10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_CREATIVE_FASTSPEECH10", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_UHER_ADPCM
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_UHER_ADPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_UHER_ADPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_UHER_ADPCM"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_UHER_ADPCM
void CSCore::AudioEncoding::_set_WAVE_FORMAT_UHER_ADPCM(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_UHER_ADPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_UHER_ADPCM", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_QUARTERDECK
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_QUARTERDECK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_QUARTERDECK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_QUARTERDECK"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_QUARTERDECK
void CSCore::AudioEncoding::_set_WAVE_FORMAT_QUARTERDECK(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_QUARTERDECK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_QUARTERDECK", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_ILINK_VC
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_ILINK_VC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_ILINK_VC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_ILINK_VC"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_ILINK_VC
void CSCore::AudioEncoding::_set_WAVE_FORMAT_ILINK_VC(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_ILINK_VC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_ILINK_VC", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_RAW_SPORT
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_RAW_SPORT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_RAW_SPORT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_RAW_SPORT"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_RAW_SPORT
void CSCore::AudioEncoding::_set_WAVE_FORMAT_RAW_SPORT(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_RAW_SPORT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_RAW_SPORT", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_ESST_AC3
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_ESST_AC3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_ESST_AC3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_ESST_AC3"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_ESST_AC3
void CSCore::AudioEncoding::_set_WAVE_FORMAT_ESST_AC3(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_ESST_AC3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_ESST_AC3", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_IPI_HSX
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_IPI_HSX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_IPI_HSX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_IPI_HSX"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_IPI_HSX
void CSCore::AudioEncoding::_set_WAVE_FORMAT_IPI_HSX(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_IPI_HSX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_IPI_HSX", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_IPI_RPELP
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_IPI_RPELP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_IPI_RPELP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_IPI_RPELP"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_IPI_RPELP
void CSCore::AudioEncoding::_set_WAVE_FORMAT_IPI_RPELP(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_IPI_RPELP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_IPI_RPELP", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_CS2
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_CS2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_CS2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_CS2"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_CS2
void CSCore::AudioEncoding::_set_WAVE_FORMAT_CS2(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_CS2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_CS2", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_SONY_SCX
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_SONY_SCX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_SONY_SCX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_SONY_SCX"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_SONY_SCX
void CSCore::AudioEncoding::_set_WAVE_FORMAT_SONY_SCX(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_SONY_SCX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_SONY_SCX", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_FM_TOWNS_SND
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_FM_TOWNS_SND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_FM_TOWNS_SND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_FM_TOWNS_SND"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_FM_TOWNS_SND
void CSCore::AudioEncoding::_set_WAVE_FORMAT_FM_TOWNS_SND(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_FM_TOWNS_SND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_FM_TOWNS_SND", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_BTV_DIGITAL
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_BTV_DIGITAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_BTV_DIGITAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_BTV_DIGITAL"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_BTV_DIGITAL
void CSCore::AudioEncoding::_set_WAVE_FORMAT_BTV_DIGITAL(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_BTV_DIGITAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_BTV_DIGITAL", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_QDESIGN_MUSIC
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_QDESIGN_MUSIC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_QDESIGN_MUSIC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_QDESIGN_MUSIC"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_QDESIGN_MUSIC
void CSCore::AudioEncoding::_set_WAVE_FORMAT_QDESIGN_MUSIC(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_QDESIGN_MUSIC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_QDESIGN_MUSIC", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_VME_VMPCM
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_VME_VMPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_VME_VMPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_VME_VMPCM"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_VME_VMPCM
void CSCore::AudioEncoding::_set_WAVE_FORMAT_VME_VMPCM(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_VME_VMPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_VME_VMPCM", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_TPC
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_TPC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_TPC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_TPC"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_TPC
void CSCore::AudioEncoding::_set_WAVE_FORMAT_TPC(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_TPC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_TPC", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_OLIGSM
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_OLIGSM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_OLIGSM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_OLIGSM"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_OLIGSM
void CSCore::AudioEncoding::_set_WAVE_FORMAT_OLIGSM(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_OLIGSM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_OLIGSM", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_OLIADPCM
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_OLIADPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_OLIADPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_OLIADPCM"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_OLIADPCM
void CSCore::AudioEncoding::_set_WAVE_FORMAT_OLIADPCM(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_OLIADPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_OLIADPCM", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_OLICELP
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_OLICELP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_OLICELP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_OLICELP"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_OLICELP
void CSCore::AudioEncoding::_set_WAVE_FORMAT_OLICELP(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_OLICELP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_OLICELP", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_OLISBC
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_OLISBC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_OLISBC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_OLISBC"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_OLISBC
void CSCore::AudioEncoding::_set_WAVE_FORMAT_OLISBC(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_OLISBC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_OLISBC", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_OLIOPR
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_OLIOPR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_OLIOPR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_OLIOPR"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_OLIOPR
void CSCore::AudioEncoding::_set_WAVE_FORMAT_OLIOPR(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_OLIOPR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_OLIOPR", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_LH_CODEC
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_LH_CODEC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_LH_CODEC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_LH_CODEC"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_LH_CODEC
void CSCore::AudioEncoding::_set_WAVE_FORMAT_LH_CODEC(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_LH_CODEC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_LH_CODEC", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_NORRIS
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_NORRIS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_NORRIS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_NORRIS"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_NORRIS
void CSCore::AudioEncoding::_set_WAVE_FORMAT_NORRIS(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_NORRIS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_NORRIS", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS
void CSCore::AudioEncoding::_set_WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding MPEG_ADTS_AAC
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_MPEG_ADTS_AAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_MPEG_ADTS_AAC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "MPEG_ADTS_AAC"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding MPEG_ADTS_AAC
void CSCore::AudioEncoding::_set_MPEG_ADTS_AAC(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_MPEG_ADTS_AAC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "MPEG_ADTS_AAC", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding MPEG_RAW_AAC
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_MPEG_RAW_AAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_MPEG_RAW_AAC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "MPEG_RAW_AAC"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding MPEG_RAW_AAC
void CSCore::AudioEncoding::_set_MPEG_RAW_AAC(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_MPEG_RAW_AAC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "MPEG_RAW_AAC", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding MPEG_LOAS
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_MPEG_LOAS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_MPEG_LOAS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "MPEG_LOAS"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding MPEG_LOAS
void CSCore::AudioEncoding::_set_MPEG_LOAS(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_MPEG_LOAS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "MPEG_LOAS", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding NOKIA_MPEG_ADTS_AAC
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_NOKIA_MPEG_ADTS_AAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_NOKIA_MPEG_ADTS_AAC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "NOKIA_MPEG_ADTS_AAC"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding NOKIA_MPEG_ADTS_AAC
void CSCore::AudioEncoding::_set_NOKIA_MPEG_ADTS_AAC(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_NOKIA_MPEG_ADTS_AAC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "NOKIA_MPEG_ADTS_AAC", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding NOKIA_MPEG_RAW_AAC
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_NOKIA_MPEG_RAW_AAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_NOKIA_MPEG_RAW_AAC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "NOKIA_MPEG_RAW_AAC"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding NOKIA_MPEG_RAW_AAC
void CSCore::AudioEncoding::_set_NOKIA_MPEG_RAW_AAC(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_NOKIA_MPEG_RAW_AAC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "NOKIA_MPEG_RAW_AAC", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding VODAFONE_MPEG_ADTS_AAC
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_VODAFONE_MPEG_ADTS_AAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_VODAFONE_MPEG_ADTS_AAC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "VODAFONE_MPEG_ADTS_AAC"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding VODAFONE_MPEG_ADTS_AAC
void CSCore::AudioEncoding::_set_VODAFONE_MPEG_ADTS_AAC(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_VODAFONE_MPEG_ADTS_AAC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "VODAFONE_MPEG_ADTS_AAC", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding VODAFONE_MPEG_RAW_AAC
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_VODAFONE_MPEG_RAW_AAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_VODAFONE_MPEG_RAW_AAC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "VODAFONE_MPEG_RAW_AAC"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding VODAFONE_MPEG_RAW_AAC
void CSCore::AudioEncoding::_set_VODAFONE_MPEG_RAW_AAC(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_VODAFONE_MPEG_RAW_AAC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "VODAFONE_MPEG_RAW_AAC", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding MPEG_HEAAC
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_MPEG_HEAAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_MPEG_HEAAC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "MPEG_HEAAC"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding MPEG_HEAAC
void CSCore::AudioEncoding::_set_MPEG_HEAAC(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_MPEG_HEAAC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "MPEG_HEAAC", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_DVM
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_DVM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_DVM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_DVM"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_DVM
void CSCore::AudioEncoding::_set_WAVE_FORMAT_DVM(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_DVM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_DVM", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding Vorbis1
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_Vorbis1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_Vorbis1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "Vorbis1"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding Vorbis1
void CSCore::AudioEncoding::_set_Vorbis1(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_Vorbis1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "Vorbis1", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding Vorbis2
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_Vorbis2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_Vorbis2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "Vorbis2"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding Vorbis2
void CSCore::AudioEncoding::_set_Vorbis2(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_Vorbis2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "Vorbis2", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding Vorbis3
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_Vorbis3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_Vorbis3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "Vorbis3"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding Vorbis3
void CSCore::AudioEncoding::_set_Vorbis3(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_Vorbis3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "Vorbis3", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding Vorbis1P
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_Vorbis1P() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_Vorbis1P");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "Vorbis1P"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding Vorbis1P
void CSCore::AudioEncoding::_set_Vorbis1P(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_Vorbis1P");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "Vorbis1P", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding Vorbis2P
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_Vorbis2P() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_Vorbis2P");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "Vorbis2P"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding Vorbis2P
void CSCore::AudioEncoding::_set_Vorbis2P(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_Vorbis2P");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "Vorbis2P", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding Vorbis3P
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_Vorbis3P() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_Vorbis3P");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "Vorbis3P"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding Vorbis3P
void CSCore::AudioEncoding::_set_Vorbis3P(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_Vorbis3P");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "Vorbis3P", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_RAW_AAC1
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_RAW_AAC1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_RAW_AAC1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_RAW_AAC1"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_RAW_AAC1
void CSCore::AudioEncoding::_set_WAVE_FORMAT_RAW_AAC1(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_RAW_AAC1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_RAW_AAC1", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_WMAVOICE9
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_WMAVOICE9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_WMAVOICE9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_WMAVOICE9"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_WMAVOICE9
void CSCore::AudioEncoding::_set_WAVE_FORMAT_WMAVOICE9(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_WMAVOICE9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_WMAVOICE9", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding Extensible
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_Extensible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_Extensible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "Extensible"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding Extensible
void CSCore::AudioEncoding::_set_Extensible(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_Extensible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "Extensible", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_DEVELOPMENT
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_DEVELOPMENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_DEVELOPMENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_DEVELOPMENT"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_DEVELOPMENT
void CSCore::AudioEncoding::_set_WAVE_FORMAT_DEVELOPMENT(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_DEVELOPMENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_DEVELOPMENT", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.AudioEncoding WAVE_FORMAT_FLAC
::CSCore::AudioEncoding CSCore::AudioEncoding::_get_WAVE_FORMAT_FLAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_get_WAVE_FORMAT_FLAC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::AudioEncoding>("CSCore", "AudioEncoding", "WAVE_FORMAT_FLAC"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.AudioEncoding WAVE_FORMAT_FLAC
void CSCore::AudioEncoding::_set_WAVE_FORMAT_FLAC(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::_set_WAVE_FORMAT_FLAC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioEncoding", "WAVE_FORMAT_FLAC", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int16 value__
[[deprecated("Use field access instead!")]] int16_t& CSCore::AudioEncoding::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioEncoding::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CSCore.AudioSubTypes
#include "CSCore/AudioSubTypes.hpp"
// Including type: CSCore.AudioEncoding
#include "CSCore/AudioEncoding.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly System.Guid MediaTypeAudio
::System::Guid CSCore::AudioSubTypes::_get_MediaTypeAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_MediaTypeAudio");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "MediaTypeAudio"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid MediaTypeAudio
void CSCore::AudioSubTypes::_set_MediaTypeAudio(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_MediaTypeAudio");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "MediaTypeAudio", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid Unknown
::System::Guid CSCore::AudioSubTypes::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid Unknown
void CSCore::AudioSubTypes::_set_Unknown(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid Pcm
::System::Guid CSCore::AudioSubTypes::_get_Pcm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_Pcm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "Pcm"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid Pcm
void CSCore::AudioSubTypes::_set_Pcm(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_Pcm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "Pcm", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid Adpcm
::System::Guid CSCore::AudioSubTypes::_get_Adpcm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_Adpcm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "Adpcm"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid Adpcm
void CSCore::AudioSubTypes::_set_Adpcm(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_Adpcm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "Adpcm", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid IeeeFloat
::System::Guid CSCore::AudioSubTypes::_get_IeeeFloat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_IeeeFloat");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "IeeeFloat"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid IeeeFloat
void CSCore::AudioSubTypes::_set_IeeeFloat(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_IeeeFloat");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "IeeeFloat", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid Vselp
::System::Guid CSCore::AudioSubTypes::_get_Vselp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_Vselp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "Vselp"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid Vselp
void CSCore::AudioSubTypes::_set_Vselp(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_Vselp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "Vselp", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid IbmCvsd
::System::Guid CSCore::AudioSubTypes::_get_IbmCvsd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_IbmCvsd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "IbmCvsd"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid IbmCvsd
void CSCore::AudioSubTypes::_set_IbmCvsd(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_IbmCvsd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "IbmCvsd", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid ALaw
::System::Guid CSCore::AudioSubTypes::_get_ALaw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_ALaw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "ALaw"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid ALaw
void CSCore::AudioSubTypes::_set_ALaw(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_ALaw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "ALaw", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid MuLaw
::System::Guid CSCore::AudioSubTypes::_get_MuLaw() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_MuLaw");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "MuLaw"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid MuLaw
void CSCore::AudioSubTypes::_set_MuLaw(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_MuLaw");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "MuLaw", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid Dts
::System::Guid CSCore::AudioSubTypes::_get_Dts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_Dts");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "Dts"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid Dts
void CSCore::AudioSubTypes::_set_Dts(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_Dts");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "Dts", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid Drm
::System::Guid CSCore::AudioSubTypes::_get_Drm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_Drm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "Drm"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid Drm
void CSCore::AudioSubTypes::_set_Drm(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_Drm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "Drm", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WmaVoice9
::System::Guid CSCore::AudioSubTypes::_get_WmaVoice9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WmaVoice9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WmaVoice9"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WmaVoice9
void CSCore::AudioSubTypes::_set_WmaVoice9(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WmaVoice9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WmaVoice9", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid OkiAdpcm
::System::Guid CSCore::AudioSubTypes::_get_OkiAdpcm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_OkiAdpcm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "OkiAdpcm"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid OkiAdpcm
void CSCore::AudioSubTypes::_set_OkiAdpcm(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_OkiAdpcm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "OkiAdpcm", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid DviAdpcm
::System::Guid CSCore::AudioSubTypes::_get_DviAdpcm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_DviAdpcm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "DviAdpcm"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid DviAdpcm
void CSCore::AudioSubTypes::_set_DviAdpcm(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_DviAdpcm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "DviAdpcm", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid ImaAdpcm
::System::Guid CSCore::AudioSubTypes::_get_ImaAdpcm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_ImaAdpcm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "ImaAdpcm"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid ImaAdpcm
void CSCore::AudioSubTypes::_set_ImaAdpcm(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_ImaAdpcm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "ImaAdpcm", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid MediaspaceAdpcm
::System::Guid CSCore::AudioSubTypes::_get_MediaspaceAdpcm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_MediaspaceAdpcm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "MediaspaceAdpcm"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid MediaspaceAdpcm
void CSCore::AudioSubTypes::_set_MediaspaceAdpcm(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_MediaspaceAdpcm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "MediaspaceAdpcm", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid SierraAdpcm
::System::Guid CSCore::AudioSubTypes::_get_SierraAdpcm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_SierraAdpcm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "SierraAdpcm"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid SierraAdpcm
void CSCore::AudioSubTypes::_set_SierraAdpcm(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_SierraAdpcm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "SierraAdpcm", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid G723Adpcm
::System::Guid CSCore::AudioSubTypes::_get_G723Adpcm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_G723Adpcm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "G723Adpcm"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid G723Adpcm
void CSCore::AudioSubTypes::_set_G723Adpcm(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_G723Adpcm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "G723Adpcm", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid DigiStd
::System::Guid CSCore::AudioSubTypes::_get_DigiStd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_DigiStd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "DigiStd"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid DigiStd
void CSCore::AudioSubTypes::_set_DigiStd(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_DigiStd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "DigiStd", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid DigiFix
::System::Guid CSCore::AudioSubTypes::_get_DigiFix() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_DigiFix");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "DigiFix"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid DigiFix
void CSCore::AudioSubTypes::_set_DigiFix(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_DigiFix");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "DigiFix", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid DialogicOkiAdpcm
::System::Guid CSCore::AudioSubTypes::_get_DialogicOkiAdpcm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_DialogicOkiAdpcm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "DialogicOkiAdpcm"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid DialogicOkiAdpcm
void CSCore::AudioSubTypes::_set_DialogicOkiAdpcm(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_DialogicOkiAdpcm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "DialogicOkiAdpcm", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid MediaVisionAdpcm
::System::Guid CSCore::AudioSubTypes::_get_MediaVisionAdpcm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_MediaVisionAdpcm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "MediaVisionAdpcm"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid MediaVisionAdpcm
void CSCore::AudioSubTypes::_set_MediaVisionAdpcm(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_MediaVisionAdpcm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "MediaVisionAdpcm", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid CUCodec
::System::Guid CSCore::AudioSubTypes::_get_CUCodec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_CUCodec");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "CUCodec"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid CUCodec
void CSCore::AudioSubTypes::_set_CUCodec(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_CUCodec");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "CUCodec", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid YamahaAdpcm
::System::Guid CSCore::AudioSubTypes::_get_YamahaAdpcm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_YamahaAdpcm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "YamahaAdpcm"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid YamahaAdpcm
void CSCore::AudioSubTypes::_set_YamahaAdpcm(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_YamahaAdpcm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "YamahaAdpcm", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid SonarC
::System::Guid CSCore::AudioSubTypes::_get_SonarC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_SonarC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "SonarC"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid SonarC
void CSCore::AudioSubTypes::_set_SonarC(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_SonarC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "SonarC", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid DspGroupTrueSpeech
::System::Guid CSCore::AudioSubTypes::_get_DspGroupTrueSpeech() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_DspGroupTrueSpeech");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "DspGroupTrueSpeech"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid DspGroupTrueSpeech
void CSCore::AudioSubTypes::_set_DspGroupTrueSpeech(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_DspGroupTrueSpeech");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "DspGroupTrueSpeech", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid EchoSpeechCorporation1
::System::Guid CSCore::AudioSubTypes::_get_EchoSpeechCorporation1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_EchoSpeechCorporation1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "EchoSpeechCorporation1"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid EchoSpeechCorporation1
void CSCore::AudioSubTypes::_set_EchoSpeechCorporation1(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_EchoSpeechCorporation1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "EchoSpeechCorporation1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid AudioFileAf36
::System::Guid CSCore::AudioSubTypes::_get_AudioFileAf36() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_AudioFileAf36");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "AudioFileAf36"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid AudioFileAf36
void CSCore::AudioSubTypes::_set_AudioFileAf36(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_AudioFileAf36");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "AudioFileAf36", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid Aptx
::System::Guid CSCore::AudioSubTypes::_get_Aptx() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_Aptx");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "Aptx"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid Aptx
void CSCore::AudioSubTypes::_set_Aptx(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_Aptx");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "Aptx", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid AudioFileAf10
::System::Guid CSCore::AudioSubTypes::_get_AudioFileAf10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_AudioFileAf10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "AudioFileAf10"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid AudioFileAf10
void CSCore::AudioSubTypes::_set_AudioFileAf10(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_AudioFileAf10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "AudioFileAf10", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid Prosody1612
::System::Guid CSCore::AudioSubTypes::_get_Prosody1612() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_Prosody1612");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "Prosody1612"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid Prosody1612
void CSCore::AudioSubTypes::_set_Prosody1612(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_Prosody1612");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "Prosody1612", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid Lrc
::System::Guid CSCore::AudioSubTypes::_get_Lrc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_Lrc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "Lrc"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid Lrc
void CSCore::AudioSubTypes::_set_Lrc(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_Lrc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "Lrc", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid DolbyAc2
::System::Guid CSCore::AudioSubTypes::_get_DolbyAc2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_DolbyAc2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "DolbyAc2"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid DolbyAc2
void CSCore::AudioSubTypes::_set_DolbyAc2(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_DolbyAc2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "DolbyAc2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid Gsm610
::System::Guid CSCore::AudioSubTypes::_get_Gsm610() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_Gsm610");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "Gsm610"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid Gsm610
void CSCore::AudioSubTypes::_set_Gsm610(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_Gsm610");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "Gsm610", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid MsnAudio
::System::Guid CSCore::AudioSubTypes::_get_MsnAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_MsnAudio");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "MsnAudio"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid MsnAudio
void CSCore::AudioSubTypes::_set_MsnAudio(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_MsnAudio");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "MsnAudio", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid AntexAdpcme
::System::Guid CSCore::AudioSubTypes::_get_AntexAdpcme() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_AntexAdpcme");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "AntexAdpcme"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid AntexAdpcme
void CSCore::AudioSubTypes::_set_AntexAdpcme(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_AntexAdpcme");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "AntexAdpcme", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid ControlResVqlpc
::System::Guid CSCore::AudioSubTypes::_get_ControlResVqlpc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_ControlResVqlpc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "ControlResVqlpc"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid ControlResVqlpc
void CSCore::AudioSubTypes::_set_ControlResVqlpc(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_ControlResVqlpc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "ControlResVqlpc", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid DigiReal
::System::Guid CSCore::AudioSubTypes::_get_DigiReal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_DigiReal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "DigiReal"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid DigiReal
void CSCore::AudioSubTypes::_set_DigiReal(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_DigiReal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "DigiReal", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid DigiAdpcm
::System::Guid CSCore::AudioSubTypes::_get_DigiAdpcm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_DigiAdpcm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "DigiAdpcm"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid DigiAdpcm
void CSCore::AudioSubTypes::_set_DigiAdpcm(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_DigiAdpcm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "DigiAdpcm", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid ControlResCr10
::System::Guid CSCore::AudioSubTypes::_get_ControlResCr10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_ControlResCr10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "ControlResCr10"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid ControlResCr10
void CSCore::AudioSubTypes::_set_ControlResCr10(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_ControlResCr10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "ControlResCr10", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_NMS_VBXADPCM
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_NMS_VBXADPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_NMS_VBXADPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_NMS_VBXADPCM"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_NMS_VBXADPCM
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_NMS_VBXADPCM(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_NMS_VBXADPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_NMS_VBXADPCM", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_CS_IMAADPCM
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_CS_IMAADPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_CS_IMAADPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_CS_IMAADPCM"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_CS_IMAADPCM
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_CS_IMAADPCM(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_CS_IMAADPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_CS_IMAADPCM", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_ECHOSC3
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_ECHOSC3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_ECHOSC3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_ECHOSC3"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_ECHOSC3
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_ECHOSC3(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_ECHOSC3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_ECHOSC3", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_ROCKWELL_ADPCM
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_ROCKWELL_ADPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_ROCKWELL_ADPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_ROCKWELL_ADPCM"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_ROCKWELL_ADPCM
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_ROCKWELL_ADPCM(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_ROCKWELL_ADPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_ROCKWELL_ADPCM", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_ROCKWELL_DIGITALK
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_ROCKWELL_DIGITALK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_ROCKWELL_DIGITALK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_ROCKWELL_DIGITALK"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_ROCKWELL_DIGITALK
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_ROCKWELL_DIGITALK(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_ROCKWELL_DIGITALK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_ROCKWELL_DIGITALK", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_XEBEC
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_XEBEC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_XEBEC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_XEBEC"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_XEBEC
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_XEBEC(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_XEBEC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_XEBEC", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_G721_ADPCM
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_G721_ADPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_G721_ADPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_G721_ADPCM"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_G721_ADPCM
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_G721_ADPCM(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_G721_ADPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_G721_ADPCM", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_G728_CELP
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_G728_CELP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_G728_CELP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_G728_CELP"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_G728_CELP
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_G728_CELP(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_G728_CELP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_G728_CELP", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_MSG723
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_MSG723() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_MSG723");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_MSG723"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_MSG723
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_MSG723(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_MSG723");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_MSG723", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid Mpeg
::System::Guid CSCore::AudioSubTypes::_get_Mpeg() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_Mpeg");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "Mpeg"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid Mpeg
void CSCore::AudioSubTypes::_set_Mpeg(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_Mpeg");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "Mpeg", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_RT24
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_RT24() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_RT24");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_RT24"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_RT24
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_RT24(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_RT24");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_RT24", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_PAC
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_PAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_PAC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_PAC"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_PAC
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_PAC(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_PAC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_PAC", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid MpegLayer3
::System::Guid CSCore::AudioSubTypes::_get_MpegLayer3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_MpegLayer3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "MpegLayer3"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid MpegLayer3
void CSCore::AudioSubTypes::_set_MpegLayer3(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_MpegLayer3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "MpegLayer3", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_LUCENT_G723
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_LUCENT_G723() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_LUCENT_G723");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_LUCENT_G723"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_LUCENT_G723
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_LUCENT_G723(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_LUCENT_G723");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_LUCENT_G723", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_CIRRUS
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_CIRRUS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_CIRRUS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_CIRRUS"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_CIRRUS
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_CIRRUS(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_CIRRUS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_CIRRUS", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_ESPCM
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_ESPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_ESPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_ESPCM"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_ESPCM
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_ESPCM(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_ESPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_ESPCM", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_VOXWARE
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_VOXWARE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_VOXWARE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_VOXWARE"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_VOXWARE
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_VOXWARE(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_VOXWARE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_VOXWARE", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_CANOPUS_ATRAC
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_CANOPUS_ATRAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_CANOPUS_ATRAC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_CANOPUS_ATRAC"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_CANOPUS_ATRAC
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_CANOPUS_ATRAC(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_CANOPUS_ATRAC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_CANOPUS_ATRAC", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_G726_ADPCM
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_G726_ADPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_G726_ADPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_G726_ADPCM"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_G726_ADPCM
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_G726_ADPCM(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_G726_ADPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_G726_ADPCM", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_G722_ADPCM
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_G722_ADPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_G722_ADPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_G722_ADPCM"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_G722_ADPCM
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_G722_ADPCM(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_G722_ADPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_G722_ADPCM", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_DSAT_DISPLAY
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_DSAT_DISPLAY() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_DSAT_DISPLAY");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_DSAT_DISPLAY"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_DSAT_DISPLAY
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_DSAT_DISPLAY(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_DSAT_DISPLAY");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_DSAT_DISPLAY", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_VOXWARE_BYTE_ALIGNED
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_VOXWARE_BYTE_ALIGNED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_VOXWARE_BYTE_ALIGNED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_VOXWARE_BYTE_ALIGNED"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_VOXWARE_BYTE_ALIGNED
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_VOXWARE_BYTE_ALIGNED(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_VOXWARE_BYTE_ALIGNED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_VOXWARE_BYTE_ALIGNED", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_VOXWARE_AC8
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_VOXWARE_AC8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_VOXWARE_AC8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_VOXWARE_AC8"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_VOXWARE_AC8
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_VOXWARE_AC8(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_VOXWARE_AC8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_VOXWARE_AC8", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_VOXWARE_AC10
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_VOXWARE_AC10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_VOXWARE_AC10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_VOXWARE_AC10"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_VOXWARE_AC10
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_VOXWARE_AC10(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_VOXWARE_AC10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_VOXWARE_AC10", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_VOXWARE_AC16
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_VOXWARE_AC16() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_VOXWARE_AC16");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_VOXWARE_AC16"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_VOXWARE_AC16
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_VOXWARE_AC16(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_VOXWARE_AC16");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_VOXWARE_AC16", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_VOXWARE_AC20
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_VOXWARE_AC20() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_VOXWARE_AC20");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_VOXWARE_AC20"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_VOXWARE_AC20
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_VOXWARE_AC20(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_VOXWARE_AC20");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_VOXWARE_AC20", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_VOXWARE_RT24
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_VOXWARE_RT24() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_VOXWARE_RT24");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_VOXWARE_RT24"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_VOXWARE_RT24
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_VOXWARE_RT24(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_VOXWARE_RT24");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_VOXWARE_RT24", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_VOXWARE_RT29
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_VOXWARE_RT29() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_VOXWARE_RT29");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_VOXWARE_RT29"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_VOXWARE_RT29
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_VOXWARE_RT29(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_VOXWARE_RT29");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_VOXWARE_RT29", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_VOXWARE_RT29HW
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_VOXWARE_RT29HW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_VOXWARE_RT29HW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_VOXWARE_RT29HW"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_VOXWARE_RT29HW
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_VOXWARE_RT29HW(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_VOXWARE_RT29HW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_VOXWARE_RT29HW", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_VOXWARE_VR12
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_VOXWARE_VR12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_VOXWARE_VR12");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_VOXWARE_VR12"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_VOXWARE_VR12
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_VOXWARE_VR12(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_VOXWARE_VR12");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_VOXWARE_VR12", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_VOXWARE_VR18
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_VOXWARE_VR18() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_VOXWARE_VR18");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_VOXWARE_VR18"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_VOXWARE_VR18
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_VOXWARE_VR18(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_VOXWARE_VR18");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_VOXWARE_VR18", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_VOXWARE_TQ40
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_VOXWARE_TQ40() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_VOXWARE_TQ40");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_VOXWARE_TQ40"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_VOXWARE_TQ40
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_VOXWARE_TQ40(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_VOXWARE_TQ40");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_VOXWARE_TQ40", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_SOFTSOUND
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_SOFTSOUND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_SOFTSOUND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_SOFTSOUND"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_SOFTSOUND
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_SOFTSOUND(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_SOFTSOUND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_SOFTSOUND", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_VOXWARE_TQ60
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_VOXWARE_TQ60() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_VOXWARE_TQ60");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_VOXWARE_TQ60"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_VOXWARE_TQ60
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_VOXWARE_TQ60(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_VOXWARE_TQ60");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_VOXWARE_TQ60", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_MSRT24
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_MSRT24() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_MSRT24");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_MSRT24"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_MSRT24
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_MSRT24(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_MSRT24");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_MSRT24", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_G729A
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_G729A() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_G729A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_G729A"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_G729A
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_G729A(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_G729A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_G729A", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_MVI_MVI2
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_MVI_MVI2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_MVI_MVI2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_MVI_MVI2"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_MVI_MVI2
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_MVI_MVI2(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_MVI_MVI2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_MVI_MVI2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_DF_G726
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_DF_G726() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_DF_G726");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_DF_G726"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_DF_G726
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_DF_G726(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_DF_G726");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_DF_G726", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_DF_GSM610
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_DF_GSM610() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_DF_GSM610");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_DF_GSM610"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_DF_GSM610
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_DF_GSM610(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_DF_GSM610");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_DF_GSM610", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_ISIAUDIO
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_ISIAUDIO() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_ISIAUDIO");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_ISIAUDIO"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_ISIAUDIO
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_ISIAUDIO(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_ISIAUDIO");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_ISIAUDIO", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_ONLIVE
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_ONLIVE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_ONLIVE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_ONLIVE"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_ONLIVE
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_ONLIVE(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_ONLIVE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_ONLIVE", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_SBC24
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_SBC24() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_SBC24");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_SBC24"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_SBC24
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_SBC24(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_SBC24");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_SBC24", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_DOLBY_AC3_SPDIF
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_DOLBY_AC3_SPDIF() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_DOLBY_AC3_SPDIF");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_DOLBY_AC3_SPDIF"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_DOLBY_AC3_SPDIF
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_DOLBY_AC3_SPDIF(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_DOLBY_AC3_SPDIF");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_DOLBY_AC3_SPDIF", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_MEDIASONIC_G723
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_MEDIASONIC_G723() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_MEDIASONIC_G723");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_MEDIASONIC_G723"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_MEDIASONIC_G723
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_MEDIASONIC_G723(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_MEDIASONIC_G723");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_MEDIASONIC_G723", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_PROSODY_8KBPS
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_PROSODY_8KBPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_PROSODY_8KBPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_PROSODY_8KBPS"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_PROSODY_8KBPS
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_PROSODY_8KBPS(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_PROSODY_8KBPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_PROSODY_8KBPS", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_ZYXEL_ADPCM
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_ZYXEL_ADPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_ZYXEL_ADPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_ZYXEL_ADPCM"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_ZYXEL_ADPCM
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_ZYXEL_ADPCM(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_ZYXEL_ADPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_ZYXEL_ADPCM", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_PHILIPS_LPCBB
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_PHILIPS_LPCBB() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_PHILIPS_LPCBB");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_PHILIPS_LPCBB"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_PHILIPS_LPCBB
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_PHILIPS_LPCBB(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_PHILIPS_LPCBB");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_PHILIPS_LPCBB", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_PACKED
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_PACKED() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_PACKED");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_PACKED"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_PACKED
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_PACKED(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_PACKED");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_PACKED", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_MALDEN_PHONYTALK
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_MALDEN_PHONYTALK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_MALDEN_PHONYTALK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_MALDEN_PHONYTALK"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_MALDEN_PHONYTALK
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_MALDEN_PHONYTALK(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_MALDEN_PHONYTALK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_MALDEN_PHONYTALK", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid Gsm
::System::Guid CSCore::AudioSubTypes::_get_Gsm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_Gsm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "Gsm"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid Gsm
void CSCore::AudioSubTypes::_set_Gsm(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_Gsm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "Gsm", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid G729
::System::Guid CSCore::AudioSubTypes::_get_G729() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_G729");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "G729"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid G729
void CSCore::AudioSubTypes::_set_G729(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_G729");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "G729", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid G723
::System::Guid CSCore::AudioSubTypes::_get_G723() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_G723");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "G723"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid G723
void CSCore::AudioSubTypes::_set_G723(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_G723");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "G723", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid Acelp
::System::Guid CSCore::AudioSubTypes::_get_Acelp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_Acelp");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "Acelp"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid Acelp
void CSCore::AudioSubTypes::_set_Acelp(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_Acelp");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "Acelp", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid RawAac
::System::Guid CSCore::AudioSubTypes::_get_RawAac() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_RawAac");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "RawAac"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid RawAac
void CSCore::AudioSubTypes::_set_RawAac(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_RawAac");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "RawAac", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_RHETOREX_ADPCM
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_RHETOREX_ADPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_RHETOREX_ADPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_RHETOREX_ADPCM"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_RHETOREX_ADPCM
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_RHETOREX_ADPCM(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_RHETOREX_ADPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_RHETOREX_ADPCM", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_IRAT
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_IRAT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_IRAT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_IRAT"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_IRAT
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_IRAT(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_IRAT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_IRAT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_VIVO_G723
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_VIVO_G723() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_VIVO_G723");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_VIVO_G723"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_VIVO_G723
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_VIVO_G723(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_VIVO_G723");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_VIVO_G723", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_VIVO_SIREN
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_VIVO_SIREN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_VIVO_SIREN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_VIVO_SIREN"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_VIVO_SIREN
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_VIVO_SIREN(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_VIVO_SIREN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_VIVO_SIREN", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_DIGITAL_G723
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_DIGITAL_G723() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_DIGITAL_G723");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_DIGITAL_G723"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_DIGITAL_G723
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_DIGITAL_G723(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_DIGITAL_G723");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_DIGITAL_G723", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_SANYO_LD_ADPCM
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_SANYO_LD_ADPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_SANYO_LD_ADPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_SANYO_LD_ADPCM"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_SANYO_LD_ADPCM
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_SANYO_LD_ADPCM(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_SANYO_LD_ADPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_SANYO_LD_ADPCM", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_SIPROLAB_ACEPLNET
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_SIPROLAB_ACEPLNET() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_SIPROLAB_ACEPLNET");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_SIPROLAB_ACEPLNET"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_SIPROLAB_ACEPLNET
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_SIPROLAB_ACEPLNET(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_SIPROLAB_ACEPLNET");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_SIPROLAB_ACEPLNET", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_SIPROLAB_ACELP4800
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_SIPROLAB_ACELP4800() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_SIPROLAB_ACELP4800");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_SIPROLAB_ACELP4800"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_SIPROLAB_ACELP4800
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_SIPROLAB_ACELP4800(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_SIPROLAB_ACELP4800");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_SIPROLAB_ACELP4800", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_SIPROLAB_ACELP8V3
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_SIPROLAB_ACELP8V3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_SIPROLAB_ACELP8V3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_SIPROLAB_ACELP8V3"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_SIPROLAB_ACELP8V3
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_SIPROLAB_ACELP8V3(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_SIPROLAB_ACELP8V3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_SIPROLAB_ACELP8V3", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_SIPROLAB_G729
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_SIPROLAB_G729() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_SIPROLAB_G729");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_SIPROLAB_G729"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_SIPROLAB_G729
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_SIPROLAB_G729(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_SIPROLAB_G729");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_SIPROLAB_G729", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_SIPROLAB_G729A
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_SIPROLAB_G729A() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_SIPROLAB_G729A");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_SIPROLAB_G729A"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_SIPROLAB_G729A
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_SIPROLAB_G729A(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_SIPROLAB_G729A");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_SIPROLAB_G729A", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_SIPROLAB_KELVIN
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_SIPROLAB_KELVIN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_SIPROLAB_KELVIN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_SIPROLAB_KELVIN"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_SIPROLAB_KELVIN
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_SIPROLAB_KELVIN(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_SIPROLAB_KELVIN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_SIPROLAB_KELVIN", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_G726ADPCM
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_G726ADPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_G726ADPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_G726ADPCM"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_G726ADPCM
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_G726ADPCM(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_G726ADPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_G726ADPCM", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_QUALCOMM_PUREVOICE
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_QUALCOMM_PUREVOICE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_QUALCOMM_PUREVOICE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_QUALCOMM_PUREVOICE"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_QUALCOMM_PUREVOICE
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_QUALCOMM_PUREVOICE(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_QUALCOMM_PUREVOICE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_QUALCOMM_PUREVOICE", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_QUALCOMM_HALFRATE
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_QUALCOMM_HALFRATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_QUALCOMM_HALFRATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_QUALCOMM_HALFRATE"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_QUALCOMM_HALFRATE
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_QUALCOMM_HALFRATE(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_QUALCOMM_HALFRATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_QUALCOMM_HALFRATE", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_TUBGSM
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_TUBGSM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_TUBGSM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_TUBGSM"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_TUBGSM
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_TUBGSM(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_TUBGSM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_TUBGSM", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_MSAUDIO1
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_MSAUDIO1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_MSAUDIO1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_MSAUDIO1"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_MSAUDIO1
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_MSAUDIO1(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_MSAUDIO1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_MSAUDIO1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WindowsMediaAudio
::System::Guid CSCore::AudioSubTypes::_get_WindowsMediaAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WindowsMediaAudio");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WindowsMediaAudio"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WindowsMediaAudio
void CSCore::AudioSubTypes::_set_WindowsMediaAudio(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WindowsMediaAudio");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WindowsMediaAudio", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WindowsMediaAudioProfessional
::System::Guid CSCore::AudioSubTypes::_get_WindowsMediaAudioProfessional() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WindowsMediaAudioProfessional");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WindowsMediaAudioProfessional"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WindowsMediaAudioProfessional
void CSCore::AudioSubTypes::_set_WindowsMediaAudioProfessional(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WindowsMediaAudioProfessional");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WindowsMediaAudioProfessional", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WindowsMediaAudioLosseless
::System::Guid CSCore::AudioSubTypes::_get_WindowsMediaAudioLosseless() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WindowsMediaAudioLosseless");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WindowsMediaAudioLosseless"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WindowsMediaAudioLosseless
void CSCore::AudioSubTypes::_set_WindowsMediaAudioLosseless(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WindowsMediaAudioLosseless");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WindowsMediaAudioLosseless", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WindowsMediaAudioSpdif
::System::Guid CSCore::AudioSubTypes::_get_WindowsMediaAudioSpdif() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WindowsMediaAudioSpdif");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WindowsMediaAudioSpdif"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WindowsMediaAudioSpdif
void CSCore::AudioSubTypes::_set_WindowsMediaAudioSpdif(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WindowsMediaAudioSpdif");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WindowsMediaAudioSpdif", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_UNISYS_NAP_ADPCM
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_UNISYS_NAP_ADPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_UNISYS_NAP_ADPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_UNISYS_NAP_ADPCM"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_UNISYS_NAP_ADPCM
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_UNISYS_NAP_ADPCM(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_UNISYS_NAP_ADPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_UNISYS_NAP_ADPCM", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_UNISYS_NAP_ULAW
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_UNISYS_NAP_ULAW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_UNISYS_NAP_ULAW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_UNISYS_NAP_ULAW"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_UNISYS_NAP_ULAW
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_UNISYS_NAP_ULAW(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_UNISYS_NAP_ULAW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_UNISYS_NAP_ULAW", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_UNISYS_NAP_ALAW
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_UNISYS_NAP_ALAW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_UNISYS_NAP_ALAW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_UNISYS_NAP_ALAW"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_UNISYS_NAP_ALAW
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_UNISYS_NAP_ALAW(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_UNISYS_NAP_ALAW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_UNISYS_NAP_ALAW", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_UNISYS_NAP_16K
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_UNISYS_NAP_16K() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_UNISYS_NAP_16K");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_UNISYS_NAP_16K"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_UNISYS_NAP_16K
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_UNISYS_NAP_16K(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_UNISYS_NAP_16K");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_UNISYS_NAP_16K", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_CREATIVE_ADPCM
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_CREATIVE_ADPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_CREATIVE_ADPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_CREATIVE_ADPCM"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_CREATIVE_ADPCM
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_CREATIVE_ADPCM(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_CREATIVE_ADPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_CREATIVE_ADPCM", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_CREATIVE_FASTSPEECH8
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_CREATIVE_FASTSPEECH8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_CREATIVE_FASTSPEECH8");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_CREATIVE_FASTSPEECH8"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_CREATIVE_FASTSPEECH8
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_CREATIVE_FASTSPEECH8(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_CREATIVE_FASTSPEECH8");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_CREATIVE_FASTSPEECH8", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_CREATIVE_FASTSPEECH10
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_CREATIVE_FASTSPEECH10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_CREATIVE_FASTSPEECH10");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_CREATIVE_FASTSPEECH10"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_CREATIVE_FASTSPEECH10
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_CREATIVE_FASTSPEECH10(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_CREATIVE_FASTSPEECH10");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_CREATIVE_FASTSPEECH10", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_UHER_ADPCM
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_UHER_ADPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_UHER_ADPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_UHER_ADPCM"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_UHER_ADPCM
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_UHER_ADPCM(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_UHER_ADPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_UHER_ADPCM", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_QUARTERDECK
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_QUARTERDECK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_QUARTERDECK");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_QUARTERDECK"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_QUARTERDECK
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_QUARTERDECK(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_QUARTERDECK");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_QUARTERDECK", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_ILINK_VC
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_ILINK_VC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_ILINK_VC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_ILINK_VC"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_ILINK_VC
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_ILINK_VC(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_ILINK_VC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_ILINK_VC", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_RAW_SPORT
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_RAW_SPORT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_RAW_SPORT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_RAW_SPORT"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_RAW_SPORT
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_RAW_SPORT(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_RAW_SPORT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_RAW_SPORT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_ESST_AC3
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_ESST_AC3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_ESST_AC3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_ESST_AC3"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_ESST_AC3
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_ESST_AC3(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_ESST_AC3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_ESST_AC3", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_IPI_HSX
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_IPI_HSX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_IPI_HSX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_IPI_HSX"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_IPI_HSX
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_IPI_HSX(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_IPI_HSX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_IPI_HSX", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_IPI_RPELP
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_IPI_RPELP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_IPI_RPELP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_IPI_RPELP"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_IPI_RPELP
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_IPI_RPELP(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_IPI_RPELP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_IPI_RPELP", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_CS2
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_CS2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_CS2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_CS2"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_CS2
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_CS2(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_CS2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_CS2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_SONY_SCX
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_SONY_SCX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_SONY_SCX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_SONY_SCX"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_SONY_SCX
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_SONY_SCX(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_SONY_SCX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_SONY_SCX", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_FM_TOWNS_SND
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_FM_TOWNS_SND() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_FM_TOWNS_SND");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_FM_TOWNS_SND"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_FM_TOWNS_SND
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_FM_TOWNS_SND(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_FM_TOWNS_SND");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_FM_TOWNS_SND", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_BTV_DIGITAL
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_BTV_DIGITAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_BTV_DIGITAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_BTV_DIGITAL"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_BTV_DIGITAL
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_BTV_DIGITAL(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_BTV_DIGITAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_BTV_DIGITAL", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_QDESIGN_MUSIC
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_QDESIGN_MUSIC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_QDESIGN_MUSIC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_QDESIGN_MUSIC"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_QDESIGN_MUSIC
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_QDESIGN_MUSIC(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_QDESIGN_MUSIC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_QDESIGN_MUSIC", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_VME_VMPCM
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_VME_VMPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_VME_VMPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_VME_VMPCM"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_VME_VMPCM
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_VME_VMPCM(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_VME_VMPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_VME_VMPCM", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_TPC
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_TPC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_TPC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_TPC"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_TPC
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_TPC(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_TPC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_TPC", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_OLIGSM
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_OLIGSM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_OLIGSM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_OLIGSM"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_OLIGSM
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_OLIGSM(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_OLIGSM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_OLIGSM", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_OLIADPCM
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_OLIADPCM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_OLIADPCM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_OLIADPCM"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_OLIADPCM
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_OLIADPCM(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_OLIADPCM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_OLIADPCM", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_OLICELP
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_OLICELP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_OLICELP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_OLICELP"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_OLICELP
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_OLICELP(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_OLICELP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_OLICELP", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_OLISBC
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_OLISBC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_OLISBC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_OLISBC"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_OLISBC
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_OLISBC(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_OLISBC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_OLISBC", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_OLIOPR
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_OLIOPR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_OLIOPR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_OLIOPR"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_OLIOPR
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_OLIOPR(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_OLIOPR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_OLIOPR", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_LH_CODEC
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_LH_CODEC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_LH_CODEC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_LH_CODEC"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_LH_CODEC
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_LH_CODEC(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_LH_CODEC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_LH_CODEC", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_NORRIS
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_NORRIS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_NORRIS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_NORRIS"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_NORRIS
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_NORRIS(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_NORRIS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_NORRIS", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_SOUNDSPACE_MUSICOMPRESS", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid MPEG_ADTS_AAC
::System::Guid CSCore::AudioSubTypes::_get_MPEG_ADTS_AAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_MPEG_ADTS_AAC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "MPEG_ADTS_AAC"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid MPEG_ADTS_AAC
void CSCore::AudioSubTypes::_set_MPEG_ADTS_AAC(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_MPEG_ADTS_AAC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "MPEG_ADTS_AAC", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid MPEG_RAW_AAC
::System::Guid CSCore::AudioSubTypes::_get_MPEG_RAW_AAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_MPEG_RAW_AAC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "MPEG_RAW_AAC"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid MPEG_RAW_AAC
void CSCore::AudioSubTypes::_set_MPEG_RAW_AAC(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_MPEG_RAW_AAC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "MPEG_RAW_AAC", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid MPEG_LOAS
::System::Guid CSCore::AudioSubTypes::_get_MPEG_LOAS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_MPEG_LOAS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "MPEG_LOAS"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid MPEG_LOAS
void CSCore::AudioSubTypes::_set_MPEG_LOAS(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_MPEG_LOAS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "MPEG_LOAS", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid NOKIA_MPEG_ADTS_AAC
::System::Guid CSCore::AudioSubTypes::_get_NOKIA_MPEG_ADTS_AAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_NOKIA_MPEG_ADTS_AAC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "NOKIA_MPEG_ADTS_AAC"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid NOKIA_MPEG_ADTS_AAC
void CSCore::AudioSubTypes::_set_NOKIA_MPEG_ADTS_AAC(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_NOKIA_MPEG_ADTS_AAC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "NOKIA_MPEG_ADTS_AAC", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid NOKIA_MPEG_RAW_AAC
::System::Guid CSCore::AudioSubTypes::_get_NOKIA_MPEG_RAW_AAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_NOKIA_MPEG_RAW_AAC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "NOKIA_MPEG_RAW_AAC"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid NOKIA_MPEG_RAW_AAC
void CSCore::AudioSubTypes::_set_NOKIA_MPEG_RAW_AAC(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_NOKIA_MPEG_RAW_AAC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "NOKIA_MPEG_RAW_AAC", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid VODAFONE_MPEG_ADTS_AAC
::System::Guid CSCore::AudioSubTypes::_get_VODAFONE_MPEG_ADTS_AAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_VODAFONE_MPEG_ADTS_AAC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "VODAFONE_MPEG_ADTS_AAC"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid VODAFONE_MPEG_ADTS_AAC
void CSCore::AudioSubTypes::_set_VODAFONE_MPEG_ADTS_AAC(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_VODAFONE_MPEG_ADTS_AAC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "VODAFONE_MPEG_ADTS_AAC", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid VODAFONE_MPEG_RAW_AAC
::System::Guid CSCore::AudioSubTypes::_get_VODAFONE_MPEG_RAW_AAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_VODAFONE_MPEG_RAW_AAC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "VODAFONE_MPEG_RAW_AAC"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid VODAFONE_MPEG_RAW_AAC
void CSCore::AudioSubTypes::_set_VODAFONE_MPEG_RAW_AAC(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_VODAFONE_MPEG_RAW_AAC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "VODAFONE_MPEG_RAW_AAC", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid MPEG_HEAAC
::System::Guid CSCore::AudioSubTypes::_get_MPEG_HEAAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_MPEG_HEAAC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "MPEG_HEAAC"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid MPEG_HEAAC
void CSCore::AudioSubTypes::_set_MPEG_HEAAC(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_MPEG_HEAAC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "MPEG_HEAAC", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_DVM
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_DVM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_DVM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_DVM"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_DVM
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_DVM(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_DVM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_DVM", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid Vorbis1
::System::Guid CSCore::AudioSubTypes::_get_Vorbis1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_Vorbis1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "Vorbis1"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid Vorbis1
void CSCore::AudioSubTypes::_set_Vorbis1(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_Vorbis1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "Vorbis1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid Vorbis2
::System::Guid CSCore::AudioSubTypes::_get_Vorbis2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_Vorbis2");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "Vorbis2"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid Vorbis2
void CSCore::AudioSubTypes::_set_Vorbis2(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_Vorbis2");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "Vorbis2", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid Vorbis3
::System::Guid CSCore::AudioSubTypes::_get_Vorbis3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_Vorbis3");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "Vorbis3"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid Vorbis3
void CSCore::AudioSubTypes::_set_Vorbis3(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_Vorbis3");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "Vorbis3", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid Vorbis1P
::System::Guid CSCore::AudioSubTypes::_get_Vorbis1P() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_Vorbis1P");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "Vorbis1P"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid Vorbis1P
void CSCore::AudioSubTypes::_set_Vorbis1P(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_Vorbis1P");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "Vorbis1P", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid Vorbis2P
::System::Guid CSCore::AudioSubTypes::_get_Vorbis2P() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_Vorbis2P");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "Vorbis2P"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid Vorbis2P
void CSCore::AudioSubTypes::_set_Vorbis2P(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_Vorbis2P");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "Vorbis2P", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid Vorbis3P
::System::Guid CSCore::AudioSubTypes::_get_Vorbis3P() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_Vorbis3P");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "Vorbis3P"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid Vorbis3P
void CSCore::AudioSubTypes::_set_Vorbis3P(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_Vorbis3P");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "Vorbis3P", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_RAW_AAC1
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_RAW_AAC1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_RAW_AAC1");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_RAW_AAC1"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_RAW_AAC1
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_RAW_AAC1(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_RAW_AAC1");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_RAW_AAC1", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_WMAVOICE9
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_WMAVOICE9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_WMAVOICE9");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_WMAVOICE9"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_WMAVOICE9
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_WMAVOICE9(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_WMAVOICE9");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_WMAVOICE9", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid Extensible
::System::Guid CSCore::AudioSubTypes::_get_Extensible() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_Extensible");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "Extensible"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid Extensible
void CSCore::AudioSubTypes::_set_Extensible(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_Extensible");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "Extensible", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_DEVELOPMENT
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_DEVELOPMENT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_DEVELOPMENT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_DEVELOPMENT"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_DEVELOPMENT
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_DEVELOPMENT(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_DEVELOPMENT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_DEVELOPMENT", value));
}
// Autogenerated static field getter
// Get static field: static public readonly System.Guid WAVE_FORMAT_FLAC
::System::Guid CSCore::AudioSubTypes::_get_WAVE_FORMAT_FLAC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_get_WAVE_FORMAT_FLAC");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Guid>("CSCore", "AudioSubTypes", "WAVE_FORMAT_FLAC"));
}
// Autogenerated static field setter
// Set static field: static public readonly System.Guid WAVE_FORMAT_FLAC
void CSCore::AudioSubTypes::_set_WAVE_FORMAT_FLAC(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::_set_WAVE_FORMAT_FLAC");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "AudioSubTypes", "WAVE_FORMAT_FLAC", value));
}
// Autogenerated method: CSCore.AudioSubTypes.EncodingFromSubType
::CSCore::AudioEncoding CSCore::AudioSubTypes::EncodingFromSubType(::System::Guid audioSubType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::EncodingFromSubType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CSCore", "AudioSubTypes", "EncodingFromSubType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioSubType)})));
  return ::il2cpp_utils::RunMethodRethrow<::CSCore::AudioEncoding, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioSubType);
}
// Autogenerated method: CSCore.AudioSubTypes.SubTypeFromEncoding
::System::Guid CSCore::AudioSubTypes::SubTypeFromEncoding(::CSCore::AudioEncoding audioEncoding) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::SubTypeFromEncoding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CSCore", "AudioSubTypes", "SubTypeFromEncoding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioEncoding)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, audioEncoding);
}
// Autogenerated method: CSCore.AudioSubTypes..cctor
void CSCore::AudioSubTypes::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::AudioSubTypes::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CSCore", "AudioSubTypes", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CSCore.ChannelMask
#include "CSCore/ChannelMask.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public CSCore.ChannelMask SpeakerFrontLeft
::CSCore::ChannelMask CSCore::ChannelMask::_get_SpeakerFrontLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_get_SpeakerFrontLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::ChannelMask>("CSCore", "ChannelMask", "SpeakerFrontLeft"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.ChannelMask SpeakerFrontLeft
void CSCore::ChannelMask::_set_SpeakerFrontLeft(::CSCore::ChannelMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_set_SpeakerFrontLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "ChannelMask", "SpeakerFrontLeft", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.ChannelMask SpeakerFrontRight
::CSCore::ChannelMask CSCore::ChannelMask::_get_SpeakerFrontRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_get_SpeakerFrontRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::ChannelMask>("CSCore", "ChannelMask", "SpeakerFrontRight"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.ChannelMask SpeakerFrontRight
void CSCore::ChannelMask::_set_SpeakerFrontRight(::CSCore::ChannelMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_set_SpeakerFrontRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "ChannelMask", "SpeakerFrontRight", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.ChannelMask SpeakerFrontCenter
::CSCore::ChannelMask CSCore::ChannelMask::_get_SpeakerFrontCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_get_SpeakerFrontCenter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::ChannelMask>("CSCore", "ChannelMask", "SpeakerFrontCenter"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.ChannelMask SpeakerFrontCenter
void CSCore::ChannelMask::_set_SpeakerFrontCenter(::CSCore::ChannelMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_set_SpeakerFrontCenter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "ChannelMask", "SpeakerFrontCenter", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.ChannelMask SpeakerLowFrequency
::CSCore::ChannelMask CSCore::ChannelMask::_get_SpeakerLowFrequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_get_SpeakerLowFrequency");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::ChannelMask>("CSCore", "ChannelMask", "SpeakerLowFrequency"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.ChannelMask SpeakerLowFrequency
void CSCore::ChannelMask::_set_SpeakerLowFrequency(::CSCore::ChannelMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_set_SpeakerLowFrequency");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "ChannelMask", "SpeakerLowFrequency", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.ChannelMask SpeakerBackLeft
::CSCore::ChannelMask CSCore::ChannelMask::_get_SpeakerBackLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_get_SpeakerBackLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::ChannelMask>("CSCore", "ChannelMask", "SpeakerBackLeft"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.ChannelMask SpeakerBackLeft
void CSCore::ChannelMask::_set_SpeakerBackLeft(::CSCore::ChannelMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_set_SpeakerBackLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "ChannelMask", "SpeakerBackLeft", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.ChannelMask SpeakerBackRight
::CSCore::ChannelMask CSCore::ChannelMask::_get_SpeakerBackRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_get_SpeakerBackRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::ChannelMask>("CSCore", "ChannelMask", "SpeakerBackRight"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.ChannelMask SpeakerBackRight
void CSCore::ChannelMask::_set_SpeakerBackRight(::CSCore::ChannelMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_set_SpeakerBackRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "ChannelMask", "SpeakerBackRight", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.ChannelMask SpeakerFrontLeftOfCenter
::CSCore::ChannelMask CSCore::ChannelMask::_get_SpeakerFrontLeftOfCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_get_SpeakerFrontLeftOfCenter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::ChannelMask>("CSCore", "ChannelMask", "SpeakerFrontLeftOfCenter"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.ChannelMask SpeakerFrontLeftOfCenter
void CSCore::ChannelMask::_set_SpeakerFrontLeftOfCenter(::CSCore::ChannelMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_set_SpeakerFrontLeftOfCenter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "ChannelMask", "SpeakerFrontLeftOfCenter", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.ChannelMask SpeakerFrontRightOfCenter
::CSCore::ChannelMask CSCore::ChannelMask::_get_SpeakerFrontRightOfCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_get_SpeakerFrontRightOfCenter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::ChannelMask>("CSCore", "ChannelMask", "SpeakerFrontRightOfCenter"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.ChannelMask SpeakerFrontRightOfCenter
void CSCore::ChannelMask::_set_SpeakerFrontRightOfCenter(::CSCore::ChannelMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_set_SpeakerFrontRightOfCenter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "ChannelMask", "SpeakerFrontRightOfCenter", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.ChannelMask SpeakerBackCenter
::CSCore::ChannelMask CSCore::ChannelMask::_get_SpeakerBackCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_get_SpeakerBackCenter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::ChannelMask>("CSCore", "ChannelMask", "SpeakerBackCenter"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.ChannelMask SpeakerBackCenter
void CSCore::ChannelMask::_set_SpeakerBackCenter(::CSCore::ChannelMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_set_SpeakerBackCenter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "ChannelMask", "SpeakerBackCenter", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.ChannelMask SpeakerSideLeft
::CSCore::ChannelMask CSCore::ChannelMask::_get_SpeakerSideLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_get_SpeakerSideLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::ChannelMask>("CSCore", "ChannelMask", "SpeakerSideLeft"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.ChannelMask SpeakerSideLeft
void CSCore::ChannelMask::_set_SpeakerSideLeft(::CSCore::ChannelMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_set_SpeakerSideLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "ChannelMask", "SpeakerSideLeft", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.ChannelMask SpeakerSideRight
::CSCore::ChannelMask CSCore::ChannelMask::_get_SpeakerSideRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_get_SpeakerSideRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::ChannelMask>("CSCore", "ChannelMask", "SpeakerSideRight"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.ChannelMask SpeakerSideRight
void CSCore::ChannelMask::_set_SpeakerSideRight(::CSCore::ChannelMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_set_SpeakerSideRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "ChannelMask", "SpeakerSideRight", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.ChannelMask SpeakerTopCenter
::CSCore::ChannelMask CSCore::ChannelMask::_get_SpeakerTopCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_get_SpeakerTopCenter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::ChannelMask>("CSCore", "ChannelMask", "SpeakerTopCenter"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.ChannelMask SpeakerTopCenter
void CSCore::ChannelMask::_set_SpeakerTopCenter(::CSCore::ChannelMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_set_SpeakerTopCenter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "ChannelMask", "SpeakerTopCenter", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.ChannelMask SpeakerTopFrontLeft
::CSCore::ChannelMask CSCore::ChannelMask::_get_SpeakerTopFrontLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_get_SpeakerTopFrontLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::ChannelMask>("CSCore", "ChannelMask", "SpeakerTopFrontLeft"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.ChannelMask SpeakerTopFrontLeft
void CSCore::ChannelMask::_set_SpeakerTopFrontLeft(::CSCore::ChannelMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_set_SpeakerTopFrontLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "ChannelMask", "SpeakerTopFrontLeft", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.ChannelMask SpeakerTopFrontCenter
::CSCore::ChannelMask CSCore::ChannelMask::_get_SpeakerTopFrontCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_get_SpeakerTopFrontCenter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::ChannelMask>("CSCore", "ChannelMask", "SpeakerTopFrontCenter"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.ChannelMask SpeakerTopFrontCenter
void CSCore::ChannelMask::_set_SpeakerTopFrontCenter(::CSCore::ChannelMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_set_SpeakerTopFrontCenter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "ChannelMask", "SpeakerTopFrontCenter", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.ChannelMask SpeakerTopFrontRight
::CSCore::ChannelMask CSCore::ChannelMask::_get_SpeakerTopFrontRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_get_SpeakerTopFrontRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::ChannelMask>("CSCore", "ChannelMask", "SpeakerTopFrontRight"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.ChannelMask SpeakerTopFrontRight
void CSCore::ChannelMask::_set_SpeakerTopFrontRight(::CSCore::ChannelMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_set_SpeakerTopFrontRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "ChannelMask", "SpeakerTopFrontRight", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.ChannelMask SpeakerTopBackLeft
::CSCore::ChannelMask CSCore::ChannelMask::_get_SpeakerTopBackLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_get_SpeakerTopBackLeft");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::ChannelMask>("CSCore", "ChannelMask", "SpeakerTopBackLeft"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.ChannelMask SpeakerTopBackLeft
void CSCore::ChannelMask::_set_SpeakerTopBackLeft(::CSCore::ChannelMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_set_SpeakerTopBackLeft");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "ChannelMask", "SpeakerTopBackLeft", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.ChannelMask SpeakerTopBackCenter
::CSCore::ChannelMask CSCore::ChannelMask::_get_SpeakerTopBackCenter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_get_SpeakerTopBackCenter");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::ChannelMask>("CSCore", "ChannelMask", "SpeakerTopBackCenter"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.ChannelMask SpeakerTopBackCenter
void CSCore::ChannelMask::_set_SpeakerTopBackCenter(::CSCore::ChannelMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_set_SpeakerTopBackCenter");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "ChannelMask", "SpeakerTopBackCenter", value));
}
// Autogenerated static field getter
// Get static field: static public CSCore.ChannelMask SpeakerTopBackRight
::CSCore::ChannelMask CSCore::ChannelMask::_get_SpeakerTopBackRight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_get_SpeakerTopBackRight");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::CSCore::ChannelMask>("CSCore", "ChannelMask", "SpeakerTopBackRight"));
}
// Autogenerated static field setter
// Set static field: static public CSCore.ChannelMask SpeakerTopBackRight
void CSCore::ChannelMask::_set_SpeakerTopBackRight(::CSCore::ChannelMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::_set_SpeakerTopBackRight");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "ChannelMask", "SpeakerTopBackRight", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& CSCore::ChannelMask::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::ChannelMask::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CSCore.Extensions
#include "CSCore/Extensions.hpp"
// Including type: CSCore.WaveFormat
#include "CSCore/WaveFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CSCore.Extensions.IsPCM
bool CSCore::Extensions::IsPCM(::CSCore::WaveFormat* waveFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::Extensions::IsPCM");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CSCore", "Extensions", "IsPCM", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(waveFormat)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, waveFormat);
}
// Autogenerated method: CSCore.Extensions.IsIeeeFloat
bool CSCore::Extensions::IsIeeeFloat(::CSCore::WaveFormat* waveFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::Extensions::IsIeeeFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CSCore", "Extensions", "IsIeeeFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(waveFormat)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, waveFormat);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CSCore.IAudioSource
#include "CSCore/IAudioSource.hpp"
// Including type: CSCore.WaveFormat
#include "CSCore/WaveFormat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CSCore.IAudioSource.get_CanSeek
bool CSCore::IAudioSource::get_CanSeek() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::IAudioSource::get_CanSeek");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::IAudioSource*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CSCore.IAudioSource.get_WaveFormat
::CSCore::WaveFormat* CSCore::IAudioSource::get_WaveFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::IAudioSource::get_WaveFormat");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::IAudioSource*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::CSCore::WaveFormat*, false>(this, ___internal__method);
}
// Autogenerated method: CSCore.IAudioSource.get_Position
int64_t CSCore::IAudioSource::get_Position() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::IAudioSource::get_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::IAudioSource*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: CSCore.IAudioSource.set_Position
void CSCore::IAudioSource::set_Position(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::IAudioSource::set_Position");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::IAudioSource*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CSCore.IAudioSource.get_Length
int64_t CSCore::IAudioSource::get_Length() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::IAudioSource::get_Length");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::IAudioSource*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CSCore.IWriteable
#include "CSCore/IWriteable.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CSCore.IWriteable.Write
void CSCore::IWriteable::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::IWriteable::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::IWriteable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CSCore.WaveFormat
#include "CSCore/WaveFormat.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private CSCore.AudioEncoding _encoding
[[deprecated("Use field access instead!")]] ::CSCore::AudioEncoding& CSCore::WaveFormat::dyn__encoding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::dyn__encoding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_encoding"))->offset;
  return *reinterpret_cast<::CSCore::AudioEncoding*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int16 _channels
[[deprecated("Use field access instead!")]] int16_t& CSCore::WaveFormat::dyn__channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::dyn__channels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_channels"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _sampleRate
[[deprecated("Use field access instead!")]] int& CSCore::WaveFormat::dyn__sampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::dyn__sampleRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_sampleRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _bytesPerSecond
[[deprecated("Use field access instead!")]] int& CSCore::WaveFormat::dyn__bytesPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::dyn__bytesPerSecond");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bytesPerSecond"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int16 _blockAlign
[[deprecated("Use field access instead!")]] int16_t& CSCore::WaveFormat::dyn__blockAlign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::dyn__blockAlign");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_blockAlign"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int16 _bitsPerSample
[[deprecated("Use field access instead!")]] int16_t& CSCore::WaveFormat::dyn__bitsPerSample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::dyn__bitsPerSample");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_bitsPerSample"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int16 _extraSize
[[deprecated("Use field access instead!")]] int16_t& CSCore::WaveFormat::dyn__extraSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::dyn__extraSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_extraSize"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CSCore.WaveFormat.get_Channels
int CSCore::WaveFormat::get_Channels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::get_Channels");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::WaveFormat*), 6));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CSCore.WaveFormat.set_Channels
void CSCore::WaveFormat::set_Channels(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::set_Channels");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::WaveFormat*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CSCore.WaveFormat.get_SampleRate
int CSCore::WaveFormat::get_SampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::get_SampleRate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::WaveFormat*), 8));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CSCore.WaveFormat.set_SampleRate
void CSCore::WaveFormat::set_SampleRate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::set_SampleRate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::WaveFormat*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CSCore.WaveFormat.get_BytesPerSecond
int CSCore::WaveFormat::get_BytesPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::get_BytesPerSecond");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::WaveFormat*), 10));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CSCore.WaveFormat.set_BytesPerSecond
void CSCore::WaveFormat::set_BytesPerSecond(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::set_BytesPerSecond");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::WaveFormat*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CSCore.WaveFormat.get_BlockAlign
int CSCore::WaveFormat::get_BlockAlign() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::get_BlockAlign");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::WaveFormat*), 12));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CSCore.WaveFormat.set_BlockAlign
void CSCore::WaveFormat::set_BlockAlign(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::set_BlockAlign");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::WaveFormat*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CSCore.WaveFormat.get_BitsPerSample
int CSCore::WaveFormat::get_BitsPerSample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::get_BitsPerSample");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::WaveFormat*), 14));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CSCore.WaveFormat.set_BitsPerSample
void CSCore::WaveFormat::set_BitsPerSample(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::set_BitsPerSample");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::WaveFormat*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CSCore.WaveFormat.get_ExtraSize
int CSCore::WaveFormat::get_ExtraSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::get_ExtraSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::WaveFormat*), 16));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CSCore.WaveFormat.set_ExtraSize
void CSCore::WaveFormat::set_ExtraSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::set_ExtraSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::WaveFormat*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CSCore.WaveFormat.get_BytesPerSample
int CSCore::WaveFormat::get_BytesPerSample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::get_BytesPerSample");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::WaveFormat*), 18));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CSCore.WaveFormat.get_BytesPerBlock
int CSCore::WaveFormat::get_BytesPerBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::get_BytesPerBlock");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::WaveFormat*), 19));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CSCore.WaveFormat.get_WaveFormatTag
::CSCore::AudioEncoding CSCore::WaveFormat::get_WaveFormatTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::get_WaveFormatTag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::WaveFormat*), 20));
  return ::il2cpp_utils::RunMethodRethrow<::CSCore::AudioEncoding, false>(this, ___internal__method);
}
// Autogenerated method: CSCore.WaveFormat.set_WaveFormatTag
void CSCore::WaveFormat::set_WaveFormatTag(::CSCore::AudioEncoding value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::set_WaveFormatTag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::WaveFormat*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CSCore.WaveFormat.MillisecondsToBytes
int64_t CSCore::WaveFormat::MillisecondsToBytes(double milliseconds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::MillisecondsToBytes");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MillisecondsToBytes", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(milliseconds)})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method, milliseconds);
}
// Autogenerated method: CSCore.WaveFormat.BytesToMilliseconds
double CSCore::WaveFormat::BytesToMilliseconds(int64_t bytes) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::BytesToMilliseconds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BytesToMilliseconds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(bytes)})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method, bytes);
}
// Autogenerated method: CSCore.WaveFormat.Equals
bool CSCore::WaveFormat::Equals(::CSCore::WaveFormat* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::WaveFormat*), 22));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: CSCore.WaveFormat.Clone
::Il2CppObject* CSCore::WaveFormat::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::WaveFormat*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: CSCore.WaveFormat.SetWaveFormatTagInternal
void CSCore::WaveFormat::SetWaveFormatTagInternal(::CSCore::AudioEncoding waveFormatTag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::SetWaveFormatTagInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::WaveFormat*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, waveFormatTag);
}
// Autogenerated method: CSCore.WaveFormat.SetBitsPerSampleAndFormatProperties
void CSCore::WaveFormat::SetBitsPerSampleAndFormatProperties(int bitsPerSample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::SetBitsPerSampleAndFormatProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::WaveFormat*), 25));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bitsPerSample);
}
// Autogenerated method: CSCore.WaveFormat.UpdateProperties
void CSCore::WaveFormat::UpdateProperties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::UpdateProperties");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::WaveFormat*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CSCore.WaveFormat.GetInformation
::System::Text::StringBuilder* CSCore::WaveFormat::GetInformation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::GetInformation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetInformation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Text::StringBuilder*, false>(this, ___internal__method);
}
// Autogenerated method: CSCore.WaveFormat.ToString
::StringW CSCore::WaveFormat::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormat::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CSCore.WaveFormatExtensible
#include "CSCore/WaveFormatExtensible.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static System.Int32 WaveFormatExtensibleExtraSize
int CSCore::WaveFormatExtensible::_get_WaveFormatExtensibleExtraSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormatExtensible::_get_WaveFormatExtensibleExtraSize");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("CSCore", "WaveFormatExtensible", "WaveFormatExtensibleExtraSize"));
}
// Autogenerated static field setter
// Set static field: static System.Int32 WaveFormatExtensibleExtraSize
void CSCore::WaveFormatExtensible::_set_WaveFormatExtensibleExtraSize(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormatExtensible::_set_WaveFormatExtensibleExtraSize");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("CSCore", "WaveFormatExtensible", "WaveFormatExtensibleExtraSize", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Int16 _samplesUnion
[[deprecated("Use field access instead!")]] int16_t& CSCore::WaveFormatExtensible::dyn__samplesUnion() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormatExtensible::dyn__samplesUnion");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_samplesUnion"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private CSCore.ChannelMask _channelMask
[[deprecated("Use field access instead!")]] ::CSCore::ChannelMask& CSCore::WaveFormatExtensible::dyn__channelMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormatExtensible::dyn__channelMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_channelMask"))->offset;
  return *reinterpret_cast<::CSCore::ChannelMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Guid _subFormat
[[deprecated("Use field access instead!")]] ::System::Guid& CSCore::WaveFormatExtensible::dyn__subFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormatExtensible::dyn__subFormat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_subFormat"))->offset;
  return *reinterpret_cast<::System::Guid*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CSCore.WaveFormatExtensible.SubTypeFromWaveFormat
::System::Guid CSCore::WaveFormatExtensible::SubTypeFromWaveFormat(::CSCore::WaveFormat* waveFormat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormatExtensible::SubTypeFromWaveFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CSCore", "WaveFormatExtensible", "SubTypeFromWaveFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(waveFormat)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, waveFormat);
}
// Autogenerated method: CSCore.WaveFormatExtensible.get_ValidBitsPerSample
int CSCore::WaveFormatExtensible::get_ValidBitsPerSample() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormatExtensible::get_ValidBitsPerSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ValidBitsPerSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CSCore.WaveFormatExtensible.set_ValidBitsPerSample
void CSCore::WaveFormatExtensible::set_ValidBitsPerSample(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormatExtensible::set_ValidBitsPerSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ValidBitsPerSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CSCore.WaveFormatExtensible.get_SamplesPerBlock
int CSCore::WaveFormatExtensible::get_SamplesPerBlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormatExtensible::get_SamplesPerBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SamplesPerBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: CSCore.WaveFormatExtensible.set_SamplesPerBlock
void CSCore::WaveFormatExtensible::set_SamplesPerBlock(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormatExtensible::set_SamplesPerBlock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SamplesPerBlock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CSCore.WaveFormatExtensible.get_ChannelMask
::CSCore::ChannelMask CSCore::WaveFormatExtensible::get_ChannelMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormatExtensible::get_ChannelMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ChannelMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::CSCore::ChannelMask, false>(this, ___internal__method);
}
// Autogenerated method: CSCore.WaveFormatExtensible.set_ChannelMask
void CSCore::WaveFormatExtensible::set_ChannelMask(::CSCore::ChannelMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormatExtensible::set_ChannelMask");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ChannelMask", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CSCore.WaveFormatExtensible.get_SubFormat
::System::Guid CSCore::WaveFormatExtensible::get_SubFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormatExtensible::get_SubFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SubFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Guid, false>(this, ___internal__method);
}
// Autogenerated method: CSCore.WaveFormatExtensible.set_SubFormat
void CSCore::WaveFormatExtensible::set_SubFormat(::System::Guid value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormatExtensible::set_SubFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SubFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CSCore.WaveFormatExtensible.ToWaveFormat
::CSCore::WaveFormat* CSCore::WaveFormatExtensible::ToWaveFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormatExtensible::ToWaveFormat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToWaveFormat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::CSCore::WaveFormat*, false>(this, ___internal__method);
}
// Autogenerated method: CSCore.WaveFormatExtensible.Clone
::Il2CppObject* CSCore::WaveFormatExtensible::Clone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormatExtensible::Clone");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::WaveFormat*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: CSCore.WaveFormatExtensible.SetWaveFormatTagInternal
void CSCore::WaveFormatExtensible::SetWaveFormatTagInternal(::CSCore::AudioEncoding waveFormatTag) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormatExtensible::SetWaveFormatTagInternal");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::WaveFormat*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, waveFormatTag);
}
// Autogenerated method: CSCore.WaveFormatExtensible.ToString
::StringW CSCore::WaveFormatExtensible::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::WaveFormatExtensible::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::WaveFormat*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CSCore.Codecs.WAV.WaveWriter
#include "CSCore/Codecs/WAV/WaveWriter.hpp"
// Including type: CSCore.WaveFormat
#include "CSCore/WaveFormat.hpp"
// Including type: System.IO.Stream
#include "System/IO/Stream.hpp"
// Including type: System.IO.BinaryWriter
#include "System/IO/BinaryWriter.hpp"
// Including type: CSCore.IWaveSource
#include "CSCore/IWaveSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private readonly CSCore.WaveFormat _waveFormat
[[deprecated("Use field access instead!")]] ::CSCore::WaveFormat*& CSCore::Codecs::WAV::WaveWriter::dyn__waveFormat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::Codecs::WAV::WaveWriter::dyn__waveFormat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_waveFormat"))->offset;
  return *reinterpret_cast<::CSCore::WaveFormat**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Int64 _waveStartPosition
[[deprecated("Use field access instead!")]] int64_t& CSCore::Codecs::WAV::WaveWriter::dyn__waveStartPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::Codecs::WAV::WaveWriter::dyn__waveStartPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_waveStartPosition"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 _dataLength
[[deprecated("Use field access instead!")]] int& CSCore::Codecs::WAV::WaveWriter::dyn__dataLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::Codecs::WAV::WaveWriter::dyn__dataLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_dataLength"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDisposed
[[deprecated("Use field access instead!")]] bool& CSCore::Codecs::WAV::WaveWriter::dyn__isDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::Codecs::WAV::WaveWriter::dyn__isDisposed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDisposed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.Stream _stream
[[deprecated("Use field access instead!")]] ::System::IO::Stream*& CSCore::Codecs::WAV::WaveWriter::dyn__stream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::Codecs::WAV::WaveWriter::dyn__stream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_stream"))->offset;
  return *reinterpret_cast<::System::IO::Stream**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.BinaryWriter _writer
[[deprecated("Use field access instead!")]] ::System::IO::BinaryWriter*& CSCore::Codecs::WAV::WaveWriter::dyn__writer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::Codecs::WAV::WaveWriter::dyn__writer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_writer"))->offset;
  return *reinterpret_cast<::System::IO::BinaryWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean _isDisposing
[[deprecated("Use field access instead!")]] bool& CSCore::Codecs::WAV::WaveWriter::dyn__isDisposing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::Codecs::WAV::WaveWriter::dyn__isDisposing");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_isDisposing"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly System.Boolean _closeStream
[[deprecated("Use field access instead!")]] bool& CSCore::Codecs::WAV::WaveWriter::dyn__closeStream() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::Codecs::WAV::WaveWriter::dyn__closeStream");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_closeStream"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CSCore.Codecs.WAV.WaveWriter.get_IsDisposed
bool CSCore::Codecs::WAV::WaveWriter::get_IsDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::Codecs::WAV::WaveWriter::get_IsDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CSCore.Codecs.WAV.WaveWriter.get_IsDisposing
bool CSCore::Codecs::WAV::WaveWriter::get_IsDisposing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::Codecs::WAV::WaveWriter::get_IsDisposing");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDisposing", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CSCore.Codecs.WAV.WaveWriter.Dispose
void CSCore::Codecs::WAV::WaveWriter::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::Codecs::WAV::WaveWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::Codecs::WAV::WaveWriter*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CSCore.Codecs.WAV.WaveWriter.WriteToFile
void CSCore::Codecs::WAV::WaveWriter::WriteToFile(::StringW filename, ::CSCore::IWaveSource* source, bool deleteFileIfAlreadyExists, int maxlength) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::Codecs::WAV::WaveWriter::WriteToFile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("CSCore.Codecs.WAV", "WaveWriter", "WriteToFile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(filename), ::il2cpp_utils::ExtractType(source), ::il2cpp_utils::ExtractType(deleteFileIfAlreadyExists), ::il2cpp_utils::ExtractType(maxlength)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, filename, source, deleteFileIfAlreadyExists, maxlength);
}
// Autogenerated method: CSCore.Codecs.WAV.WaveWriter.WriteSample
void CSCore::Codecs::WAV::WaveWriter::WriteSample(float sample) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::Codecs::WAV::WaveWriter::WriteSample");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSample", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sample)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sample);
}
// Autogenerated method: CSCore.Codecs.WAV.WaveWriter.WriteSamples
void CSCore::Codecs::WAV::WaveWriter::WriteSamples(::ArrayW<float> samples, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::Codecs::WAV::WaveWriter::WriteSamples");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteSamples", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(samples), ::il2cpp_utils::ExtractType(offset), ::il2cpp_utils::ExtractType(count)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, samples, offset, count);
}
// Autogenerated method: CSCore.Codecs.WAV.WaveWriter.Write
void CSCore::Codecs::WAV::WaveWriter::Write(::ArrayW<uint8_t> buffer, int offset, int count) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::Codecs::WAV::WaveWriter::Write");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::Codecs::WAV::WaveWriter*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buffer, offset, count);
}
// Autogenerated method: CSCore.Codecs.WAV.WaveWriter.Write
void CSCore::Codecs::WAV::WaveWriter::Write(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::Codecs::WAV::WaveWriter::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CSCore.Codecs.WAV.WaveWriter.Write
void CSCore::Codecs::WAV::WaveWriter::Write(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::Codecs::WAV::WaveWriter::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CSCore.Codecs.WAV.WaveWriter.Write
void CSCore::Codecs::WAV::WaveWriter::Write(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::Codecs::WAV::WaveWriter::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CSCore.Codecs.WAV.WaveWriter.Write
void CSCore::Codecs::WAV::WaveWriter::Write(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::Codecs::WAV::WaveWriter::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: CSCore.Codecs.WAV.WaveWriter.WriteHeader
void CSCore::Codecs::WAV::WaveWriter::WriteHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::Codecs::WAV::WaveWriter::WriteHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CSCore.Codecs.WAV.WaveWriter.WriteRiffHeader
void CSCore::Codecs::WAV::WaveWriter::WriteRiffHeader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::Codecs::WAV::WaveWriter::WriteRiffHeader");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteRiffHeader", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CSCore.Codecs.WAV.WaveWriter.WriteFmtChunk
void CSCore::Codecs::WAV::WaveWriter::WriteFmtChunk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::Codecs::WAV::WaveWriter::WriteFmtChunk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteFmtChunk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CSCore.Codecs.WAV.WaveWriter.WriteDataChunk
void CSCore::Codecs::WAV::WaveWriter::WriteDataChunk() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::Codecs::WAV::WaveWriter::WriteDataChunk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteDataChunk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CSCore.Codecs.WAV.WaveWriter.CheckObjectDisposed
void CSCore::Codecs::WAV::WaveWriter::CheckObjectDisposed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::Codecs::WAV::WaveWriter::CheckObjectDisposed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckObjectDisposed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CSCore.Codecs.WAV.WaveWriter.Dispose
void CSCore::Codecs::WAV::WaveWriter::Dispose(bool disposing) {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::Codecs::WAV::WaveWriter::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::CSCore::Codecs::WAV::WaveWriter*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, disposing);
}
// Autogenerated method: CSCore.Codecs.WAV.WaveWriter.Finalize
void CSCore::Codecs::WAV::WaveWriter::Finalize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::CSCore::Codecs::WAV::WaveWriter::Finalize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.LoadBalancingFrontend
#include "Photon/Voice/LoadBalancingFrontend.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.AudioInEnumeratorEx
#include "Photon/Voice/Unity/AudioInEnumeratorEx.hpp"
// Including type: Photon.Voice.Unity.AudioInEnumeratorEx/<>c__DisplayClass0_0
#include "Photon/Voice/Unity/AudioInEnumeratorEx_--c__DisplayClass0_0.hpp"
// Including type: Photon.Voice.IDeviceEnumerator
#include "Photon/Voice/IDeviceEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.Unity.AudioInEnumeratorEx.IDIsValid
bool Photon::Voice::Unity::AudioInEnumeratorEx::IDIsValid(::Photon::Voice::IDeviceEnumerator* en, int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AudioInEnumeratorEx::IDIsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice.Unity", "AudioInEnumeratorEx", "IDIsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(en), ::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, en, id);
}
// Autogenerated method: Photon.Voice.Unity.AudioInEnumeratorEx.NameAtIndex
::StringW Photon::Voice::Unity::AudioInEnumeratorEx::NameAtIndex(::Photon::Voice::IDeviceEnumerator* en, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AudioInEnumeratorEx::NameAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice.Unity", "AudioInEnumeratorEx", "NameAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(en), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, en, index);
}
// Autogenerated method: Photon.Voice.Unity.AudioInEnumeratorEx.IDAtIndex
int Photon::Voice::Unity::AudioInEnumeratorEx::IDAtIndex(::Photon::Voice::IDeviceEnumerator* en, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AudioInEnumeratorEx::IDAtIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice.Unity", "AudioInEnumeratorEx", "IDAtIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(en), ::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, en, index);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.AudioInEnumeratorEx/<>c__DisplayClass0_0
#include "Photon/Voice/Unity/AudioInEnumeratorEx_--c__DisplayClass0_0.hpp"
// Including type: Photon.Voice.DeviceInfo
#include "Photon/Voice/DeviceInfo.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 id
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::AudioInEnumeratorEx::$$c__DisplayClass0_0::dyn_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AudioInEnumeratorEx::$$c__DisplayClass0_0::dyn_id");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "id"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.AudioInEnumeratorEx/<>c__DisplayClass0_0.<IDIsValid>b__0
bool Photon::Voice::Unity::AudioInEnumeratorEx::$$c__DisplayClass0_0::$IDIsValid$b__0(::Photon::Voice::DeviceInfo d) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::AudioInEnumeratorEx::$$c__DisplayClass0_0::<IDIsValid>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<IDIsValid>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(d)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, d);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.ILoggable
#include "Photon/Voice/Unity/ILoggable.hpp"
// Including type: ExitGames.Client.Photon.DebugLevel
#include "ExitGames/Client/Photon/DebugLevel.hpp"
// Including type: Photon.Voice.Unity.VoiceLogger
#include "Photon/Voice/Unity/VoiceLogger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.Unity.ILoggable.get_LogLevel
::ExitGames::Client::Photon::DebugLevel Photon::Voice::Unity::ILoggable::get_LogLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::ILoggable::get_LogLevel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::ILoggable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::ExitGames::Client::Photon::DebugLevel, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.ILoggable.set_LogLevel
void Photon::Voice::Unity::ILoggable::set_LogLevel(::ExitGames::Client::Photon::DebugLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::ILoggable::set_LogLevel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::ILoggable*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.ILoggable.get_Logger
::Photon::Voice::Unity::VoiceLogger* Photon::Voice::Unity::ILoggable::get_Logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::ILoggable::get_Logger");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::ILoggable*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::Unity::VoiceLogger*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.ILoggableDependent
#include "Photon/Voice/Unity/ILoggableDependent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Photon.Voice.Unity.ILoggableDependent.get_IgnoreGlobalLogLevel
bool Photon::Voice::Unity::ILoggableDependent::get_IgnoreGlobalLogLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::ILoggableDependent::get_IgnoreGlobalLogLevel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::ILoggableDependent*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.ILoggableDependent.set_IgnoreGlobalLogLevel
void Photon::Voice::Unity::ILoggableDependent::set_IgnoreGlobalLogLevel(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::ILoggableDependent::set_IgnoreGlobalLogLevel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::ILoggableDependent*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.PlaybackDelaySettings
#include "Photon/Voice/Unity/PlaybackDelaySettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 DEFAULT_LOW
int Photon::Voice::Unity::PlaybackDelaySettings::_get_DEFAULT_LOW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::PlaybackDelaySettings::_get_DEFAULT_LOW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Voice.Unity", "PlaybackDelaySettings", "DEFAULT_LOW"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DEFAULT_LOW
void Photon::Voice::Unity::PlaybackDelaySettings::_set_DEFAULT_LOW(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::PlaybackDelaySettings::_set_DEFAULT_LOW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.Unity", "PlaybackDelaySettings", "DEFAULT_LOW", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 DEFAULT_HIGH
int Photon::Voice::Unity::PlaybackDelaySettings::_get_DEFAULT_HIGH() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::PlaybackDelaySettings::_get_DEFAULT_HIGH");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Voice.Unity", "PlaybackDelaySettings", "DEFAULT_HIGH"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DEFAULT_HIGH
void Photon::Voice::Unity::PlaybackDelaySettings::_set_DEFAULT_HIGH(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::PlaybackDelaySettings::_set_DEFAULT_HIGH");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.Unity", "PlaybackDelaySettings", "DEFAULT_HIGH", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 DEFAULT_MAX
int Photon::Voice::Unity::PlaybackDelaySettings::_get_DEFAULT_MAX() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::PlaybackDelaySettings::_get_DEFAULT_MAX");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Voice.Unity", "PlaybackDelaySettings", "DEFAULT_MAX"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 DEFAULT_MAX
void Photon::Voice::Unity::PlaybackDelaySettings::_set_DEFAULT_MAX(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::PlaybackDelaySettings::_set_DEFAULT_MAX");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.Unity", "PlaybackDelaySettings", "DEFAULT_MAX", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MinDelaySoft
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::PlaybackDelaySettings::dyn_MinDelaySoft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::PlaybackDelaySettings::dyn_MinDelaySoft");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinDelaySoft"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MaxDelaySoft
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::PlaybackDelaySettings::dyn_MaxDelaySoft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::PlaybackDelaySettings::dyn_MaxDelaySoft");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxDelaySoft"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MaxDelayHard
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::PlaybackDelaySettings::dyn_MaxDelayHard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::PlaybackDelaySettings::dyn_MaxDelayHard");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxDelayHard"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.PlaybackDelaySettings.ToString
::StringW Photon::Voice::Unity::PlaybackDelaySettings::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::PlaybackDelaySettings::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(*this, classof(::System::ValueType*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Voice.Unity.Recorder
#include "Photon/Voice/Unity/Recorder.hpp"
// Including type: System.Func`1
#include "System/Func_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: Photon.Voice.Unity.Recorder/PhotonVoiceCreatedParams
#include "Photon/Voice/Unity/Recorder_PhotonVoiceCreatedParams.hpp"
// Including type: Photon.Voice.Unity.Recorder/<>c__DisplayClass175_0
#include "Photon/Voice/Unity/Recorder_--c__DisplayClass175_0.hpp"
// Including type: Photon.Voice.LocalVoice
#include "Photon/Voice/LocalVoice.hpp"
// Including type: Photon.Voice.IAudioDesc
#include "Photon/Voice/IAudioDesc.hpp"
// Including type: Photon.Voice.VoiceClient
#include "Photon/Voice/VoiceClient.hpp"
// Including type: Photon.Voice.Unity.VoiceConnection
#include "Photon/Voice/Unity/VoiceConnection.hpp"
// Including type: Photon.Voice.IAudioInChangeNotifier
#include "Photon/Voice/IAudioInChangeNotifier.hpp"
// Including type: Photon.Voice.IDeviceEnumerator
#include "Photon/Voice/IDeviceEnumerator.hpp"
// Including type: Photon.Voice.Unity.AudioInEnumerator
#include "Photon/Voice/Unity/AudioInEnumerator.hpp"
// Including type: Photon.Voice.ILocalVoiceAudio
#include "Photon/Voice/ILocalVoiceAudio.hpp"
// Including type: Photon.Voice.DeviceInfo
#include "Photon/Voice/DeviceInfo.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Photon.Voice.AudioUtil/IVoiceDetector
#include "Photon/Voice/AudioUtil_IVoiceDetector.hpp"
// Including type: Photon.Voice.AudioUtil/ILevelMeter
#include "Photon/Voice/AudioUtil_ILevelMeter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.Int32 MIN_OPUS_BITRATE
int Photon::Voice::Unity::Recorder::_get_MIN_OPUS_BITRATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::_get_MIN_OPUS_BITRATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Voice.Unity", "Recorder", "MIN_OPUS_BITRATE"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MIN_OPUS_BITRATE
void Photon::Voice::Unity::Recorder::_set_MIN_OPUS_BITRATE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::_set_MIN_OPUS_BITRATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.Unity", "Recorder", "MIN_OPUS_BITRATE", value));
}
// Autogenerated static field getter
// Get static field: static public System.Int32 MAX_OPUS_BITRATE
int Photon::Voice::Unity::Recorder::_get_MAX_OPUS_BITRATE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::_get_MAX_OPUS_BITRATE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Photon.Voice.Unity", "Recorder", "MAX_OPUS_BITRATE"));
}
// Autogenerated static field setter
// Set static field: static public System.Int32 MAX_OPUS_BITRATE
void Photon::Voice::Unity::Recorder::_set_MAX_OPUS_BITRATE(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::_set_MAX_OPUS_BITRATE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.Unity", "Recorder", "MAX_OPUS_BITRATE", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Array samplingRateValues
::System::Array* Photon::Voice::Unity::Recorder::_get_samplingRateValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::_get_samplingRateValues");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Array*>("Photon.Voice.Unity", "Recorder", "samplingRateValues"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Array samplingRateValues
void Photon::Voice::Unity::Recorder::_set_samplingRateValues(::System::Array* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::_set_samplingRateValues");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.Unity", "Recorder", "samplingRateValues", value));
}
// [ObsoleteAttribute] Offset: 0xAB5B80
// Autogenerated static field getter
// Get static field: static private Photon.Voice.IDeviceEnumerator photonMicrophoneEnumerator
::Photon::Voice::IDeviceEnumerator* Photon::Voice::Unity::Recorder::_get_photonMicrophoneEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::_get_photonMicrophoneEnumerator");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::IDeviceEnumerator*>("Photon.Voice.Unity", "Recorder", "photonMicrophoneEnumerator"));
}
// Autogenerated static field setter
// Set static field: static private Photon.Voice.IDeviceEnumerator photonMicrophoneEnumerator
void Photon::Voice::Unity::Recorder::_set_photonMicrophoneEnumerator(::Photon::Voice::IDeviceEnumerator* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::_set_photonMicrophoneEnumerator");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.Unity", "Recorder", "photonMicrophoneEnumerator", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean voiceDetection
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::Recorder::dyn_voiceDetection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_voiceDetection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceDetection"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single voiceDetectionThreshold
[[deprecated("Use field access instead!")]] float& Photon::Voice::Unity::Recorder::dyn_voiceDetectionThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_voiceDetectionThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceDetectionThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 voiceDetectionDelayMs
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::Recorder::dyn_voiceDetectionDelayMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_voiceDetectionDelayMs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceDetectionDelayMs"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object userData
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Photon::Voice::Unity::Recorder::dyn_userData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_userData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userData"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.LocalVoice voice
[[deprecated("Use field access instead!")]] ::Photon::Voice::LocalVoice*& Photon::Voice::Unity::Recorder::dyn_voice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_voice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voice"))->offset;
  return *reinterpret_cast<::Photon::Voice::LocalVoice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String unityMicrophoneDevice
[[deprecated("Use field access instead!")]] ::StringW& Photon::Voice::Unity::Recorder::dyn_unityMicrophoneDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_unityMicrophoneDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unityMicrophoneDevice"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 photonMicrophoneDeviceId
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::Recorder::dyn_photonMicrophoneDeviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_photonMicrophoneDeviceId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "photonMicrophoneDeviceId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.IAudioDesc inputSource
[[deprecated("Use field access instead!")]] ::Photon::Voice::IAudioDesc*& Photon::Voice::Unity::Recorder::dyn_inputSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_inputSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputSource"))->offset;
  return *reinterpret_cast<::Photon::Voice::IAudioDesc**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.VoiceClient client
[[deprecated("Use field access instead!")]] ::Photon::Voice::VoiceClient*& Photon::Voice::Unity::Recorder::dyn_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "client"))->offset;
  return *reinterpret_cast<::Photon::Voice::VoiceClient**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.VoiceConnection voiceConnection
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::VoiceConnection*& Photon::Voice::Unity::Recorder::dyn_voiceConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_voiceConnection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceConnection"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::VoiceConnection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Byte interestGroup
[[deprecated("Use field access instead!")]] uint8_t& Photon::Voice::Unity::Recorder::dyn_interestGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_interestGroup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interestGroup"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean debugEchoMode
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::Recorder::dyn_debugEchoMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_debugEchoMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugEchoMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean reliableMode
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::Recorder::dyn_reliableMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_reliableMode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reliableMode"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean encrypt
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::Recorder::dyn_encrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_encrypt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "encrypt"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean transmitEnabled
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::Recorder::dyn_transmitEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_transmitEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transmitEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private POpusCodec.Enums.SamplingRate samplingRate
[[deprecated("Use field access instead!")]] ::POpusCodec::Enums::SamplingRate& Photon::Voice::Unity::Recorder::dyn_samplingRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_samplingRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "samplingRate"))->offset;
  return *reinterpret_cast<::POpusCodec::Enums::SamplingRate*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.OpusCodec/FrameDuration frameDuration
[[deprecated("Use field access instead!")]] ::Photon::Voice::OpusCodec::FrameDuration& Photon::Voice::Unity::Recorder::dyn_frameDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_frameDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frameDuration"))->offset;
  return *reinterpret_cast<::Photon::Voice::OpusCodec::FrameDuration*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 bitrate
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::Recorder::dyn_bitrate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_bitrate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bitrate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.Recorder/InputSourceType sourceType
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::Recorder::InputSourceType& Photon::Voice::Unity::Recorder::dyn_sourceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_sourceType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceType"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::Recorder::InputSourceType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.Recorder/MicType microphoneType
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::Recorder::MicType& Photon::Voice::Unity::Recorder::dyn_microphoneType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_microphoneType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "microphoneType"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::Recorder::MicType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.AudioClip audioClip
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioClip*& Photon::Voice::Unity::Recorder::dyn_audioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_audioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioClip"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioClip**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean loopAudioClip
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::Recorder::dyn_loopAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_loopAudioClip");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "loopAudioClip"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isRecording
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::Recorder::dyn_isRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_isRecording");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRecording"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Func`1<Photon.Voice.IAudioDesc> inputFactory
[[deprecated("Use field access instead!")]] ::System::Func_1<::Photon::Voice::IAudioDesc*>*& Photon::Voice::Unity::Recorder::dyn_inputFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_inputFactory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputFactory"))->offset;
  return *reinterpret_cast<::System::Func_1<::Photon::Voice::IAudioDesc*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.IAudioInChangeNotifier photonMicChangeNotifier
[[deprecated("Use field access instead!")]] ::Photon::Voice::IAudioInChangeNotifier*& Photon::Voice::Unity::Recorder::dyn_photonMicChangeNotifier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_photonMicChangeNotifier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "photonMicChangeNotifier"))->offset;
  return *reinterpret_cast<::Photon::Voice::IAudioInChangeNotifier**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean reactOnSystemChanges
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::Recorder::dyn_reactOnSystemChanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_reactOnSystemChanges");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reactOnSystemChanges"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean subscribedToSystemChangesPhoton
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::Recorder::dyn_subscribedToSystemChangesPhoton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_subscribedToSystemChangesPhoton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subscribedToSystemChangesPhoton"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean subscribedToSystemChangesUnity
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::Recorder::dyn_subscribedToSystemChangesUnity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_subscribedToSystemChangesUnity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "subscribedToSystemChangesUnity"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean autoStart
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::Recorder::dyn_autoStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_autoStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.NativeAndroidMicrophoneSettings nativeAndroidMicrophoneSettings
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::NativeAndroidMicrophoneSettings& Photon::Voice::Unity::Recorder::dyn_nativeAndroidMicrophoneSettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_nativeAndroidMicrophoneSettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nativeAndroidMicrophoneSettings"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::NativeAndroidMicrophoneSettings*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean recordOnlyWhenEnabled
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::Recorder::dyn_recordOnlyWhenEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_recordOnlyWhenEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recordOnlyWhenEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean skipDeviceChangeChecks
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::Recorder::dyn_skipDeviceChangeChecks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_skipDeviceChangeChecks");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "skipDeviceChangeChecks"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean wasRecordingBeforePause
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::Recorder::dyn_wasRecordingBeforePause() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_wasRecordingBeforePause");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wasRecordingBeforePause"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isPausedOrInBackground
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::Recorder::dyn_isPausedOrInBackground() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_isPausedOrInBackground");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isPausedOrInBackground"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean stopRecordingWhenPaused
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::Recorder::dyn_stopRecordingWhenPaused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_stopRecordingWhenPaused");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stopRecordingWhenPaused"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean useOnAudioFilterRead
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::Recorder::dyn_useOnAudioFilterRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_useOnAudioFilterRead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useOnAudioFilterRead"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean trySamplingRateMatch
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::Recorder::dyn_trySamplingRateMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_trySamplingRateMatch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trySamplingRateMatch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean useMicrophoneTypeFallback
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::Recorder::dyn_useMicrophoneTypeFallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_useMicrophoneTypeFallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "useMicrophoneTypeFallback"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean recordOnlyWhenJoined
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::Recorder::dyn_recordOnlyWhenJoined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_recordOnlyWhenJoined");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recordOnlyWhenJoined"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean recordingStoppedExplicitly
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::Recorder::dyn_recordingStoppedExplicitly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_recordingStoppedExplicitly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recordingStoppedExplicitly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.IDeviceEnumerator photonMicrophonesEnumerator
[[deprecated("Use field access instead!")]] ::Photon::Voice::IDeviceEnumerator*& Photon::Voice::Unity::Recorder::dyn_photonMicrophonesEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_photonMicrophonesEnumerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "photonMicrophonesEnumerator"))->offset;
  return *reinterpret_cast<::Photon::Voice::IDeviceEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.AudioInEnumerator unityMicrophonesEnumerator
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::AudioInEnumerator*& Photon::Voice::Unity::Recorder::dyn_unityMicrophonesEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_unityMicrophonesEnumerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unityMicrophonesEnumerator"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::AudioInEnumerator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object microphoneDeviceChangeDetectedLock
[[deprecated("Use field access instead!")]] ::Il2CppObject*& Photon::Voice::Unity::Recorder::dyn_microphoneDeviceChangeDetectedLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_microphoneDeviceChangeDetectedLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "microphoneDeviceChangeDetectedLock"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: System.Boolean microphoneDeviceChangeDetected
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::Recorder::dyn_microphoneDeviceChangeDetected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_microphoneDeviceChangeDetected");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "microphoneDeviceChangeDetected"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <RequiresRestart>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::Recorder::dyn_$RequiresRestart$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_$RequiresRestart$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<RequiresRestart>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.Recorder/SampleTypeConv <TypeConvert>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::Recorder::SampleTypeConv& Photon::Voice::Unity::Recorder::dyn_$TypeConvert$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::dyn_$TypeConvert$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<TypeConvert>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::Recorder::SampleTypeConv*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_MicrophoneDeviceChangeDetected
bool Photon::Voice::Unity::Recorder::get_MicrophoneDeviceChangeDetected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_MicrophoneDeviceChangeDetected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MicrophoneDeviceChangeDetected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_MicrophoneDeviceChangeDetected
void Photon::Voice::Unity::Recorder::set_MicrophoneDeviceChangeDetected(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_MicrophoneDeviceChangeDetected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MicrophoneDeviceChangeDetected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_subscribedToSystemChanges
bool Photon::Voice::Unity::Recorder::get_subscribedToSystemChanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_subscribedToSystemChanges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_subscribedToSystemChanges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_PhotonMicrophoneEnumerator
::Photon::Voice::IDeviceEnumerator* Photon::Voice::Unity::Recorder::get_PhotonMicrophoneEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_PhotonMicrophoneEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice.Unity", "Recorder", "get_PhotonMicrophoneEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::IDeviceEnumerator*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_IsInitialized
bool Photon::Voice::Unity::Recorder::get_IsInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_IsInitialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInitialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_RequiresInit
bool Photon::Voice::Unity::Recorder::get_RequiresInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_RequiresInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequiresInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_RequiresRestart
bool Photon::Voice::Unity::Recorder::get_RequiresRestart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_RequiresRestart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RequiresRestart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_RequiresRestart
void Photon::Voice::Unity::Recorder::set_RequiresRestart(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_RequiresRestart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RequiresRestart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_TransmitEnabled
bool Photon::Voice::Unity::Recorder::get_TransmitEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_TransmitEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TransmitEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_TransmitEnabled
void Photon::Voice::Unity::Recorder::set_TransmitEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_TransmitEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TransmitEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_Encrypt
bool Photon::Voice::Unity::Recorder::get_Encrypt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_Encrypt
void Photon::Voice::Unity::Recorder::set_Encrypt(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_Encrypt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Encrypt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_DebugEchoMode
bool Photon::Voice::Unity::Recorder::get_DebugEchoMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_DebugEchoMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_DebugEchoMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_DebugEchoMode
void Photon::Voice::Unity::Recorder::set_DebugEchoMode(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_DebugEchoMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_DebugEchoMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_ReliableMode
bool Photon::Voice::Unity::Recorder::get_ReliableMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_ReliableMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReliableMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_ReliableMode
void Photon::Voice::Unity::Recorder::set_ReliableMode(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_ReliableMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReliableMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_VoiceDetection
bool Photon::Voice::Unity::Recorder::get_VoiceDetection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_VoiceDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VoiceDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_VoiceDetection
void Photon::Voice::Unity::Recorder::set_VoiceDetection(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_VoiceDetection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VoiceDetection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_VoiceDetectionThreshold
float Photon::Voice::Unity::Recorder::get_VoiceDetectionThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_VoiceDetectionThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VoiceDetectionThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_VoiceDetectionThreshold
void Photon::Voice::Unity::Recorder::set_VoiceDetectionThreshold(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_VoiceDetectionThreshold");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VoiceDetectionThreshold", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_VoiceDetectionDelayMs
int Photon::Voice::Unity::Recorder::get_VoiceDetectionDelayMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_VoiceDetectionDelayMs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VoiceDetectionDelayMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_VoiceDetectionDelayMs
void Photon::Voice::Unity::Recorder::set_VoiceDetectionDelayMs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_VoiceDetectionDelayMs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VoiceDetectionDelayMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_UserData
::Il2CppObject* Photon::Voice::Unity::Recorder::get_UserData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_UserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_UserData
void Photon::Voice::Unity::Recorder::set_UserData(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_UserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_InputFactory
::System::Func_1<::Photon::Voice::IAudioDesc*>* Photon::Voice::Unity::Recorder::get_InputFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_InputFactory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InputFactory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Func_1<::Photon::Voice::IAudioDesc*>*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_InputFactory
void Photon::Voice::Unity::Recorder::set_InputFactory(::System::Func_1<::Photon::Voice::IAudioDesc*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_InputFactory");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InputFactory", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_VoiceDetector
::Photon::Voice::AudioUtil::IVoiceDetector* Photon::Voice::Unity::Recorder::get_VoiceDetector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_VoiceDetector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VoiceDetector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::AudioUtil::IVoiceDetector*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_UnityMicrophoneDevice
::StringW Photon::Voice::Unity::Recorder::get_UnityMicrophoneDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_UnityMicrophoneDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UnityMicrophoneDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_UnityMicrophoneDevice
void Photon::Voice::Unity::Recorder::set_UnityMicrophoneDevice(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_UnityMicrophoneDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UnityMicrophoneDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_PhotonMicrophoneDeviceId
int Photon::Voice::Unity::Recorder::get_PhotonMicrophoneDeviceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_PhotonMicrophoneDeviceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PhotonMicrophoneDeviceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_PhotonMicrophoneDeviceId
void Photon::Voice::Unity::Recorder::set_PhotonMicrophoneDeviceId(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_PhotonMicrophoneDeviceId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PhotonMicrophoneDeviceId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_AudioGroup
uint8_t Photon::Voice::Unity::Recorder::get_AudioGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_AudioGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_AudioGroup
void Photon::Voice::Unity::Recorder::set_AudioGroup(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_AudioGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_InterestGroup
uint8_t Photon::Voice::Unity::Recorder::get_InterestGroup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_InterestGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_InterestGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<uint8_t, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_InterestGroup
void Photon::Voice::Unity::Recorder::set_InterestGroup(uint8_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_InterestGroup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_InterestGroup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_IsCurrentlyTransmitting
bool Photon::Voice::Unity::Recorder::get_IsCurrentlyTransmitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_IsCurrentlyTransmitting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsCurrentlyTransmitting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_LevelMeter
::Photon::Voice::AudioUtil::ILevelMeter* Photon::Voice::Unity::Recorder::get_LevelMeter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_LevelMeter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LevelMeter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::AudioUtil::ILevelMeter*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_VoiceDetectorCalibrating
bool Photon::Voice::Unity::Recorder::get_VoiceDetectorCalibrating() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_VoiceDetectorCalibrating");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VoiceDetectorCalibrating", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_voiceAudio
::Photon::Voice::ILocalVoiceAudio* Photon::Voice::Unity::Recorder::get_voiceAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_voiceAudio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_voiceAudio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::ILocalVoiceAudio*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_SourceType
::Photon::Voice::Unity::Recorder::InputSourceType Photon::Voice::Unity::Recorder::get_SourceType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_SourceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SourceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::Unity::Recorder::InputSourceType, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_SourceType
void Photon::Voice::Unity::Recorder::set_SourceType(::Photon::Voice::Unity::Recorder::InputSourceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_SourceType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SourceType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_MicrophoneType
::Photon::Voice::Unity::Recorder::MicType Photon::Voice::Unity::Recorder::get_MicrophoneType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_MicrophoneType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MicrophoneType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::Unity::Recorder::MicType, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_MicrophoneType
void Photon::Voice::Unity::Recorder::set_MicrophoneType(::Photon::Voice::Unity::Recorder::MicType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_MicrophoneType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MicrophoneType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_TypeConvert
::Photon::Voice::Unity::Recorder::SampleTypeConv Photon::Voice::Unity::Recorder::get_TypeConvert() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_TypeConvert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TypeConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::Unity::Recorder::SampleTypeConv, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_TypeConvert
void Photon::Voice::Unity::Recorder::set_TypeConvert(::Photon::Voice::Unity::Recorder::SampleTypeConv value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_TypeConvert");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TypeConvert", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_AudioClip
::UnityEngine::AudioClip* Photon::Voice::Unity::Recorder::get_AudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_AudioClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AudioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AudioClip*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_AudioClip
void Photon::Voice::Unity::Recorder::set_AudioClip(::UnityEngine::AudioClip* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_AudioClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AudioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_LoopAudioClip
bool Photon::Voice::Unity::Recorder::get_LoopAudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_LoopAudioClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LoopAudioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_LoopAudioClip
void Photon::Voice::Unity::Recorder::set_LoopAudioClip(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_LoopAudioClip");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LoopAudioClip", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_SamplingRate
::POpusCodec::Enums::SamplingRate Photon::Voice::Unity::Recorder::get_SamplingRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_SamplingRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SamplingRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::POpusCodec::Enums::SamplingRate, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_SamplingRate
void Photon::Voice::Unity::Recorder::set_SamplingRate(::POpusCodec::Enums::SamplingRate value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_SamplingRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SamplingRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_FrameDuration
::Photon::Voice::OpusCodec::FrameDuration Photon::Voice::Unity::Recorder::get_FrameDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_FrameDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FrameDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::OpusCodec::FrameDuration, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_FrameDuration
void Photon::Voice::Unity::Recorder::set_FrameDuration(::Photon::Voice::OpusCodec::FrameDuration value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_FrameDuration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FrameDuration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_Bitrate
int Photon::Voice::Unity::Recorder::get_Bitrate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_Bitrate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Bitrate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_Bitrate
void Photon::Voice::Unity::Recorder::set_Bitrate(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_Bitrate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Bitrate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_IsRecording
bool Photon::Voice::Unity::Recorder::get_IsRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_IsRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_IsRecording
void Photon::Voice::Unity::Recorder::set_IsRecording(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_IsRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IsRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_ReactOnSystemChanges
bool Photon::Voice::Unity::Recorder::get_ReactOnSystemChanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_ReactOnSystemChanges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReactOnSystemChanges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_ReactOnSystemChanges
void Photon::Voice::Unity::Recorder::set_ReactOnSystemChanges(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_ReactOnSystemChanges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReactOnSystemChanges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_AutoStart
bool Photon::Voice::Unity::Recorder::get_AutoStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_AutoStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AutoStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_AutoStart
void Photon::Voice::Unity::Recorder::set_AutoStart(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_AutoStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AutoStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_RecordOnlyWhenEnabled
bool Photon::Voice::Unity::Recorder::get_RecordOnlyWhenEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_RecordOnlyWhenEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RecordOnlyWhenEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_RecordOnlyWhenEnabled
void Photon::Voice::Unity::Recorder::set_RecordOnlyWhenEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_RecordOnlyWhenEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RecordOnlyWhenEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_SkipDeviceChangeChecks
bool Photon::Voice::Unity::Recorder::get_SkipDeviceChangeChecks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_SkipDeviceChangeChecks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SkipDeviceChangeChecks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_SkipDeviceChangeChecks
void Photon::Voice::Unity::Recorder::set_SkipDeviceChangeChecks(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_SkipDeviceChangeChecks");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SkipDeviceChangeChecks", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_StopRecordingWhenPaused
bool Photon::Voice::Unity::Recorder::get_StopRecordingWhenPaused() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_StopRecordingWhenPaused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StopRecordingWhenPaused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_StopRecordingWhenPaused
void Photon::Voice::Unity::Recorder::set_StopRecordingWhenPaused(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_StopRecordingWhenPaused");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_StopRecordingWhenPaused", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_UseOnAudioFilterRead
bool Photon::Voice::Unity::Recorder::get_UseOnAudioFilterRead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_UseOnAudioFilterRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseOnAudioFilterRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_UseOnAudioFilterRead
void Photon::Voice::Unity::Recorder::set_UseOnAudioFilterRead(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_UseOnAudioFilterRead");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseOnAudioFilterRead", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_TrySamplingRateMatch
bool Photon::Voice::Unity::Recorder::get_TrySamplingRateMatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_TrySamplingRateMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TrySamplingRateMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_TrySamplingRateMatch
void Photon::Voice::Unity::Recorder::set_TrySamplingRateMatch(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_TrySamplingRateMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_TrySamplingRateMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_UseMicrophoneTypeFallback
bool Photon::Voice::Unity::Recorder::get_UseMicrophoneTypeFallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_UseMicrophoneTypeFallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_UseMicrophoneTypeFallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_UseMicrophoneTypeFallback
void Photon::Voice::Unity::Recorder::set_UseMicrophoneTypeFallback(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_UseMicrophoneTypeFallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_UseMicrophoneTypeFallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_RecordOnlyWhenJoined
bool Photon::Voice::Unity::Recorder::get_RecordOnlyWhenJoined() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_RecordOnlyWhenJoined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RecordOnlyWhenJoined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_RecordOnlyWhenJoined
void Photon::Voice::Unity::Recorder::set_RecordOnlyWhenJoined(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_RecordOnlyWhenJoined");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_RecordOnlyWhenJoined", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_MicrophonesEnumerator
::Photon::Voice::IDeviceEnumerator* Photon::Voice::Unity::Recorder::get_MicrophonesEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_MicrophonesEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MicrophonesEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::IDeviceEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.get_MicrophoneDevice
::Photon::Voice::DeviceInfo Photon::Voice::Unity::Recorder::get_MicrophoneDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::get_MicrophoneDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MicrophoneDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::DeviceInfo, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.set_MicrophoneDevice
void Photon::Voice::Unity::Recorder::set_MicrophoneDevice(::Photon::Voice::DeviceInfo value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::set_MicrophoneDevice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MicrophoneDevice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.Init
void Photon::Voice::Unity::Recorder::Init(::Photon::Voice::Unity::VoiceConnection* voiceConnection) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(voiceConnection)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, voiceConnection);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.ReInit
void Photon::Voice::Unity::Recorder::ReInit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::ReInit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReInit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.RestartRecording
void Photon::Voice::Unity::Recorder::RestartRecording(bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::RestartRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestartRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, force);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.VoiceDetectorCalibrate
void Photon::Voice::Unity::Recorder::VoiceDetectorCalibrate(int durationMs, ::System::Action_1<float>* detectionEndedCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::VoiceDetectorCalibrate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VoiceDetectorCalibrate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(durationMs), ::il2cpp_utils::ExtractType(detectionEndedCallback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, durationMs, detectionEndedCallback);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.StartRecording
void Photon::Voice::Unity::Recorder::StartRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::StartRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.StopRecording
void Photon::Voice::Unity::Recorder::StopRecording() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::StopRecording");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopRecording", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.SetAndroidNativeMicrophoneSettings
bool Photon::Voice::Unity::Recorder::SetAndroidNativeMicrophoneSettings(::Photon::Voice::Unity::NativeAndroidMicrophoneSettings nams) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::SetAndroidNativeMicrophoneSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAndroidNativeMicrophoneSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nams)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, nams);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.SetAndroidNativeMicrophoneSettings
bool Photon::Voice::Unity::Recorder::SetAndroidNativeMicrophoneSettings(bool aec, bool agc, bool ns) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::SetAndroidNativeMicrophoneSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetAndroidNativeMicrophoneSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(aec), ::il2cpp_utils::ExtractType(agc), ::il2cpp_utils::ExtractType(ns)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, aec, agc, ns);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.ResetLocalAudio
bool Photon::Voice::Unity::Recorder::ResetLocalAudio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::ResetLocalAudio");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetLocalAudio", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.CompareUnityMicNames
bool Photon::Voice::Unity::Recorder::CompareUnityMicNames(::StringW mic1, ::StringW mic2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::CompareUnityMicNames");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice.Unity", "Recorder", "CompareUnityMicNames", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mic1), ::il2cpp_utils::ExtractType(mic2)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mic1, mic2);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.IsDefaultUnityMic
bool Photon::Voice::Unity::Recorder::IsDefaultUnityMic(::StringW mic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::IsDefaultUnityMic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice.Unity", "Recorder", "IsDefaultUnityMic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mic)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mic);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.Setup
void Photon::Voice::Unity::Recorder::Setup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::Setup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Setup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.CreateLocalVoiceAudioAndSource
::Photon::Voice::LocalVoice* Photon::Voice::Unity::Recorder::CreateLocalVoiceAudioAndSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::CreateLocalVoiceAudioAndSource");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CreateLocalVoiceAudioAndSource", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::LocalVoice*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.SendPhotonVoiceCreatedMessage
void Photon::Voice::Unity::Recorder::SendPhotonVoiceCreatedMessage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::SendPhotonVoiceCreatedMessage");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::Recorder*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.OnDestroy
void Photon::Voice::Unity::Recorder::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.RemoveVoice
void Photon::Voice::Unity::Recorder::RemoveVoice(bool sendUnityMsg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::RemoveVoice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveVoice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sendUnityMsg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sendUnityMsg);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.OnAudioConfigChanged
void Photon::Voice::Unity::Recorder::OnAudioConfigChanged(bool deviceWasChanged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::OnAudioConfigChanged");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAudioConfigChanged", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(deviceWasChanged)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, deviceWasChanged);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.PhotonMicrophoneChangeDetected
void Photon::Voice::Unity::Recorder::PhotonMicrophoneChangeDetected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::PhotonMicrophoneChangeDetected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PhotonMicrophoneChangeDetected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.HandleDeviceChange
void Photon::Voice::Unity::Recorder::HandleDeviceChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::HandleDeviceChange");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleDeviceChange", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.SubscribeToSystemChanges
void Photon::Voice::Unity::Recorder::SubscribeToSystemChanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::SubscribeToSystemChanges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SubscribeToSystemChanges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.UnsubscribeFromSystemChanges
void Photon::Voice::Unity::Recorder::UnsubscribeFromSystemChanges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::UnsubscribeFromSystemChanges");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnsubscribeFromSystemChanges", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.GetThresholdFromDetector
void Photon::Voice::Unity::Recorder::GetThresholdFromDetector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::GetThresholdFromDetector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetThresholdFromDetector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.GetActivityDelayFromDetector
void Photon::Voice::Unity::Recorder::GetActivityDelayFromDetector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::GetActivityDelayFromDetector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetActivityDelayFromDetector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.GetStatusFromDetector
void Photon::Voice::Unity::Recorder::GetStatusFromDetector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::GetStatusFromDetector");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetStatusFromDetector", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.IsValidUnityMic
bool Photon::Voice::Unity::Recorder::IsValidUnityMic(::StringW mic) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::IsValidUnityMic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice.Unity", "Recorder", "IsValidUnityMic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mic)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, mic);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.OnEnable
void Photon::Voice::Unity::Recorder::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.OnDisable
void Photon::Voice::Unity::Recorder::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.IsValidPhotonMic
bool Photon::Voice::Unity::Recorder::IsValidPhotonMic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::IsValidPhotonMic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidPhotonMic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.CheckIfMicrophoneIdIsValid
bool Photon::Voice::Unity::Recorder::CheckIfMicrophoneIdIsValid(::Photon::Voice::IDeviceEnumerator* audioInEnumerator, int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::CheckIfMicrophoneIdIsValid");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIfMicrophoneIdIsValid", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioInEnumerator), ::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, audioInEnumerator, id);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.IsValidPhotonMic
bool Photon::Voice::Unity::Recorder::IsValidPhotonMic(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::IsValidPhotonMic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsValidPhotonMic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, id);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.OnApplicationPause
void Photon::Voice::Unity::Recorder::OnApplicationPause(bool paused) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::OnApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paused)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, paused);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.OnApplicationFocus
void Photon::Voice::Unity::Recorder::OnApplicationFocus(bool focused) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::OnApplicationFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(focused)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focused);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.HandleApplicationPause
void Photon::Voice::Unity::Recorder::HandleApplicationPause(bool paused) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::HandleApplicationPause");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HandleApplicationPause", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(paused)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, paused);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.GetSupportedSamplingRate
::POpusCodec::Enums::SamplingRate Photon::Voice::Unity::Recorder::GetSupportedSamplingRate(int requested) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::GetSupportedSamplingRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSupportedSamplingRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requested)})));
  return ::il2cpp_utils::RunMethodRethrow<::POpusCodec::Enums::SamplingRate, false>(this, ___internal__method, requested);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.GetSupportedSamplingRateForUnityMicrophone
::POpusCodec::Enums::SamplingRate Photon::Voice::Unity::Recorder::GetSupportedSamplingRateForUnityMicrophone(::POpusCodec::Enums::SamplingRate requested) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::GetSupportedSamplingRateForUnityMicrophone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSupportedSamplingRateForUnityMicrophone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requested)})));
  return ::il2cpp_utils::RunMethodRethrow<::POpusCodec::Enums::SamplingRate, false>(this, ___internal__method, requested);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.GetSupportedSamplingRate
::POpusCodec::Enums::SamplingRate Photon::Voice::Unity::Recorder::GetSupportedSamplingRate(::POpusCodec::Enums::SamplingRate requested, int minFreq, int maxFreq) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::GetSupportedSamplingRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSupportedSamplingRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(requested), ::il2cpp_utils::ExtractType(minFreq), ::il2cpp_utils::ExtractType(maxFreq)})));
  return ::il2cpp_utils::RunMethodRethrow<::POpusCodec::Enums::SamplingRate, false>(this, ___internal__method, requested, minFreq, maxFreq);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.GetSupportedSamplingRate
::POpusCodec::Enums::SamplingRate Photon::Voice::Unity::Recorder::GetSupportedSamplingRate(::POpusCodec::Enums::SamplingRate sR) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::GetSupportedSamplingRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSupportedSamplingRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sR)})));
  return ::il2cpp_utils::RunMethodRethrow<::POpusCodec::Enums::SamplingRate, false>(this, ___internal__method, sR);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.CheckAndSetSamplingRate
void Photon::Voice::Unity::Recorder::CheckAndSetSamplingRate(::POpusCodec::Enums::SamplingRate sR) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::CheckAndSetSamplingRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAndSetSamplingRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sR)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sR);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.CheckAndSetSamplingRate
void Photon::Voice::Unity::Recorder::CheckAndSetSamplingRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::CheckAndSetSamplingRate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAndSetSamplingRate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.StopRecordingInternal
void Photon::Voice::Unity::Recorder::StopRecordingInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::StopRecordingInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopRecordingInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.CheckAndAutoStart
void Photon::Voice::Unity::Recorder::CheckAndAutoStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::CheckAndAutoStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckAndAutoStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.StartRecordingInternal
void Photon::Voice::Unity::Recorder::StartRecordingInternal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::StartRecordingInternal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartRecordingInternal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.GetMicrophonesEnumerator
::Photon::Voice::IDeviceEnumerator* Photon::Voice::Unity::Recorder::GetMicrophonesEnumerator(::Photon::Voice::Unity::Recorder::MicType micType) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::GetMicrophonesEnumerator");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMicrophonesEnumerator", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(micType)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::IDeviceEnumerator*, false>(this, ___internal__method, micType);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.GetDeviceById
::Photon::Voice::DeviceInfo Photon::Voice::Unity::Recorder::GetDeviceById(int id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::GetDeviceById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDeviceById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::DeviceInfo, false>(this, ___internal__method, id);
}
// Autogenerated method: Photon.Voice.Unity.Recorder.GetDeviceById
::Photon::Voice::DeviceInfo Photon::Voice::Unity::Recorder::GetDeviceById(::StringW id) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::GetDeviceById");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetDeviceById", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(id)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::DeviceInfo, false>(this, ___internal__method, id);
}
// Autogenerated method: Photon.Voice.Unity.Recorder..cctor
void Photon::Voice::Unity::Recorder::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice.Unity", "Recorder", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.Recorder/InputSourceType
#include "Photon/Voice/Unity/Recorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Voice.Unity.Recorder/InputSourceType Microphone
::Photon::Voice::Unity::Recorder::InputSourceType Photon::Voice::Unity::Recorder::InputSourceType::_get_Microphone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::InputSourceType::_get_Microphone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::Unity::Recorder::InputSourceType>("Photon.Voice.Unity", "Recorder/InputSourceType", "Microphone"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.Unity.Recorder/InputSourceType Microphone
void Photon::Voice::Unity::Recorder::InputSourceType::_set_Microphone(::Photon::Voice::Unity::Recorder::InputSourceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::InputSourceType::_set_Microphone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.Unity", "Recorder/InputSourceType", "Microphone", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.Unity.Recorder/InputSourceType AudioClip
::Photon::Voice::Unity::Recorder::InputSourceType Photon::Voice::Unity::Recorder::InputSourceType::_get_AudioClip() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::InputSourceType::_get_AudioClip");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::Unity::Recorder::InputSourceType>("Photon.Voice.Unity", "Recorder/InputSourceType", "AudioClip"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.Unity.Recorder/InputSourceType AudioClip
void Photon::Voice::Unity::Recorder::InputSourceType::_set_AudioClip(::Photon::Voice::Unity::Recorder::InputSourceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::InputSourceType::_set_AudioClip");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.Unity", "Recorder/InputSourceType", "AudioClip", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.Unity.Recorder/InputSourceType Factory
::Photon::Voice::Unity::Recorder::InputSourceType Photon::Voice::Unity::Recorder::InputSourceType::_get_Factory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::InputSourceType::_get_Factory");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::Unity::Recorder::InputSourceType>("Photon.Voice.Unity", "Recorder/InputSourceType", "Factory"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.Unity.Recorder/InputSourceType Factory
void Photon::Voice::Unity::Recorder::InputSourceType::_set_Factory(::Photon::Voice::Unity::Recorder::InputSourceType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::InputSourceType::_set_Factory");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.Unity", "Recorder/InputSourceType", "Factory", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::Recorder::InputSourceType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::InputSourceType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.Recorder/MicType
#include "Photon/Voice/Unity/Recorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Voice.Unity.Recorder/MicType Unity
::Photon::Voice::Unity::Recorder::MicType Photon::Voice::Unity::Recorder::MicType::_get_Unity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::MicType::_get_Unity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::Unity::Recorder::MicType>("Photon.Voice.Unity", "Recorder/MicType", "Unity"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.Unity.Recorder/MicType Unity
void Photon::Voice::Unity::Recorder::MicType::_set_Unity(::Photon::Voice::Unity::Recorder::MicType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::MicType::_set_Unity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.Unity", "Recorder/MicType", "Unity", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.Unity.Recorder/MicType Photon
::Photon::Voice::Unity::Recorder::MicType Photon::Voice::Unity::Recorder::MicType::_get_Photon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::MicType::_get_Photon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::Unity::Recorder::MicType>("Photon.Voice.Unity", "Recorder/MicType", "Photon"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.Unity.Recorder/MicType Photon
void Photon::Voice::Unity::Recorder::MicType::_set_Photon(::Photon::Voice::Unity::Recorder::MicType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::MicType::_set_Photon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.Unity", "Recorder/MicType", "Photon", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::Recorder::MicType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::MicType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.Recorder/SampleTypeConv
#include "Photon/Voice/Unity/Recorder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Photon.Voice.Unity.Recorder/SampleTypeConv None
::Photon::Voice::Unity::Recorder::SampleTypeConv Photon::Voice::Unity::Recorder::SampleTypeConv::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::SampleTypeConv::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::Unity::Recorder::SampleTypeConv>("Photon.Voice.Unity", "Recorder/SampleTypeConv", "None"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.Unity.Recorder/SampleTypeConv None
void Photon::Voice::Unity::Recorder::SampleTypeConv::_set_None(::Photon::Voice::Unity::Recorder::SampleTypeConv value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::SampleTypeConv::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.Unity", "Recorder/SampleTypeConv", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Photon.Voice.Unity.Recorder/SampleTypeConv Short
::Photon::Voice::Unity::Recorder::SampleTypeConv Photon::Voice::Unity::Recorder::SampleTypeConv::_get_Short() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::SampleTypeConv::_get_Short");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Photon::Voice::Unity::Recorder::SampleTypeConv>("Photon.Voice.Unity", "Recorder/SampleTypeConv", "Short"));
}
// Autogenerated static field setter
// Set static field: static public Photon.Voice.Unity.Recorder/SampleTypeConv Short
void Photon::Voice::Unity::Recorder::SampleTypeConv::_set_Short(::Photon::Voice::Unity::Recorder::SampleTypeConv value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::SampleTypeConv::_set_Short");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.Unity", "Recorder/SampleTypeConv", "Short", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::Recorder::SampleTypeConv::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::SampleTypeConv::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.Recorder/PhotonVoiceCreatedParams
#include "Photon/Voice/Unity/Recorder_PhotonVoiceCreatedParams.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.Recorder/<>c__DisplayClass175_0
#include "Photon/Voice/Unity/Recorder_--c__DisplayClass175_0.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Photon.Voice.Unity.Recorder <>4__this
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::Recorder*& Photon::Voice::Unity::Recorder::$$c__DisplayClass175_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::$$c__DisplayClass175_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::Recorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Action`1<System.Single> detectionEndedCallback
[[deprecated("Use field access instead!")]] ::System::Action_1<float>*& Photon::Voice::Unity::Recorder::$$c__DisplayClass175_0::dyn_detectionEndedCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::$$c__DisplayClass175_0::dyn_detectionEndedCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "detectionEndedCallback"))->offset;
  return *reinterpret_cast<::System::Action_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.Recorder/<>c__DisplayClass175_0.<VoiceDetectorCalibrate>b__0
void Photon::Voice::Unity::Recorder::$$c__DisplayClass175_0::$VoiceDetectorCalibrate$b__0(float newThreshold) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Recorder::$$c__DisplayClass175_0::<VoiceDetectorCalibrate>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<VoiceDetectorCalibrate>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newThreshold)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newThreshold);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Voice.Unity.RemoteVoiceLink
#include "Photon/Voice/Unity/RemoteVoiceLink.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Photon.Voice.FrameOut`1
#include "Photon/Voice/FrameOut_1.hpp"
// Including type: System.Action
#include "System/Action.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public readonly Photon.Voice.VoiceInfo Info
[[deprecated("Use field access instead!")]] ::Photon::Voice::VoiceInfo& Photon::Voice::Unity::RemoteVoiceLink::dyn_Info() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::RemoteVoiceLink::dyn_Info");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Info"))->offset;
  return *reinterpret_cast<::Photon::Voice::VoiceInfo*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 PlayerId
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::RemoteVoiceLink::dyn_PlayerId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::RemoteVoiceLink::dyn_PlayerId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayerId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 VoiceId
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::RemoteVoiceLink::dyn_VoiceId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::RemoteVoiceLink::dyn_VoiceId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "VoiceId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public readonly System.Int32 ChannelId
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::RemoteVoiceLink::dyn_ChannelId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::RemoteVoiceLink::dyn_ChannelId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ChannelId"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Photon.Voice.FrameOut`1<System.Single>> FloatFrameDecoded
[[deprecated("Use field access instead!")]] ::System::Action_1<::Photon::Voice::FrameOut_1<float>*>*& Photon::Voice::Unity::RemoteVoiceLink::dyn_FloatFrameDecoded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::RemoteVoiceLink::dyn_FloatFrameDecoded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FloatFrameDecoded"))->offset;
  return *reinterpret_cast<::System::Action_1<::Photon::Voice::FrameOut_1<float>*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action RemoteVoiceRemoved
[[deprecated("Use field access instead!")]] ::System::Action*& Photon::Voice::Unity::RemoteVoiceLink::dyn_RemoteVoiceRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::RemoteVoiceLink::dyn_RemoteVoiceRemoved");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RemoteVoiceRemoved"))->offset;
  return *reinterpret_cast<::System::Action**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String cached
[[deprecated("Use field access instead!")]] ::StringW& Photon::Voice::Unity::RemoteVoiceLink::dyn_cached() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::RemoteVoiceLink::dyn_cached");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cached"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.RemoteVoiceLink.add_FloatFrameDecoded
void Photon::Voice::Unity::RemoteVoiceLink::add_FloatFrameDecoded(::System::Action_1<::Photon::Voice::FrameOut_1<float>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::RemoteVoiceLink::add_FloatFrameDecoded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_FloatFrameDecoded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.RemoteVoiceLink.remove_FloatFrameDecoded
void Photon::Voice::Unity::RemoteVoiceLink::remove_FloatFrameDecoded(::System::Action_1<::Photon::Voice::FrameOut_1<float>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::RemoteVoiceLink::remove_FloatFrameDecoded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_FloatFrameDecoded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.RemoteVoiceLink.add_RemoteVoiceRemoved
void Photon::Voice::Unity::RemoteVoiceLink::add_RemoteVoiceRemoved(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::RemoteVoiceLink::add_RemoteVoiceRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_RemoteVoiceRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.RemoteVoiceLink.remove_RemoteVoiceRemoved
void Photon::Voice::Unity::RemoteVoiceLink::remove_RemoteVoiceRemoved(::System::Action* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::RemoteVoiceLink::remove_RemoteVoiceRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_RemoteVoiceRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.RemoteVoiceLink.OnRemoteVoiceRemoveAction
void Photon::Voice::Unity::RemoteVoiceLink::OnRemoteVoiceRemoveAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::RemoteVoiceLink::OnRemoteVoiceRemoveAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRemoteVoiceRemoveAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.RemoteVoiceLink.OnDecodedFrameFloatAction
void Photon::Voice::Unity::RemoteVoiceLink::OnDecodedFrameFloatAction(::Photon::Voice::FrameOut_1<float>* floats) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::RemoteVoiceLink::OnDecodedFrameFloatAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDecodedFrameFloatAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(floats)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, floats);
}
// Autogenerated method: Photon.Voice.Unity.RemoteVoiceLink.Equals
bool Photon::Voice::Unity::RemoteVoiceLink::Equals(::Photon::Voice::Unity::RemoteVoiceLink* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::RemoteVoiceLink::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::RemoteVoiceLink*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, other);
}
// Autogenerated method: Photon.Voice.Unity.RemoteVoiceLink.ToString
::StringW Photon::Voice::Unity::RemoteVoiceLink::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::RemoteVoiceLink::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.Speaker
#include "Photon/Voice/Unity/Speaker.hpp"
// Including type: Photon.Voice.Unity.Speaker/<>c__DisplayClass42_0
#include "Photon/Voice/Unity/Speaker_--c__DisplayClass42_0.hpp"
// Including type: Photon.Voice.IAudioOut`1
#include "Photon/Voice/IAudioOut_1.hpp"
// Including type: Photon.Voice.Unity.RemoteVoiceLink
#include "Photon/Voice/Unity/RemoteVoiceLink.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: Photon.Voice.FrameOut`1
#include "Photon/Voice/FrameOut_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.IAudioOut`1<System.Single> audioOutput
[[deprecated("Use field access instead!")]] ::Photon::Voice::IAudioOut_1<float>*& Photon::Voice::Unity::Speaker::dyn_audioOutput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::dyn_audioOutput");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioOutput"))->offset;
  return *reinterpret_cast<::Photon::Voice::IAudioOut_1<float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.RemoteVoiceLink remoteVoiceLink
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::RemoteVoiceLink*& Photon::Voice::Unity::Speaker::dyn_remoteVoiceLink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::dyn_remoteVoiceLink");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteVoiceLink"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::RemoteVoiceLink**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean playbackOnlyWhenEnabled
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::Speaker::dyn_playbackOnlyWhenEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::dyn_playbackOnlyWhenEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playbackOnlyWhenEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 playDelayMs
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::Speaker::dyn_playDelayMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::dyn_playDelayMs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playDelayMs"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.PlaybackDelaySettings playbackDelaySettings
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::PlaybackDelaySettings& Photon::Voice::Unity::Speaker::dyn_playbackDelaySettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::dyn_playbackDelaySettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playbackDelaySettings"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::PlaybackDelaySettings*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean playbackExplicitlyStopped
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::Speaker::dyn_playbackExplicitlyStopped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::dyn_playbackExplicitlyStopped");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playbackExplicitlyStopped"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Photon.Voice.Unity.Speaker> <OnRemoteVoiceRemoveAction>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Action_1<::Photon::Voice::Unity::Speaker*>*& Photon::Voice::Unity::Speaker::dyn_$OnRemoteVoiceRemoveAction$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::dyn_$OnRemoteVoiceRemoveAction$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<OnRemoteVoiceRemoveAction>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Action_1<::Photon::Voice::Unity::Speaker*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Player <Actor>k__BackingField
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& Photon::Voice::Unity::Speaker::dyn_$Actor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::dyn_$Actor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Actor>k__BackingField"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <PlaybackStarted>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::Speaker::dyn_$PlaybackStarted$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::dyn_$PlaybackStarted$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<PlaybackStarted>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.get_PlayDelayMs
int Photon::Voice::Unity::Speaker::get_PlayDelayMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::get_PlayDelayMs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlayDelayMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.set_PlayDelayMs
void Photon::Voice::Unity::Speaker::set_PlayDelayMs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::set_PlayDelayMs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PlayDelayMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.get_IsPlaying
bool Photon::Voice::Unity::Speaker::get_IsPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::get_IsPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.get_Lag
int Photon::Voice::Unity::Speaker::get_Lag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::get_Lag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Lag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.get_OnRemoteVoiceRemoveAction
::System::Action_1<::Photon::Voice::Unity::Speaker*>* Photon::Voice::Unity::Speaker::get_OnRemoteVoiceRemoveAction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::get_OnRemoteVoiceRemoveAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_OnRemoteVoiceRemoveAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Action_1<::Photon::Voice::Unity::Speaker*>*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.set_OnRemoteVoiceRemoveAction
void Photon::Voice::Unity::Speaker::set_OnRemoteVoiceRemoveAction(::System::Action_1<::Photon::Voice::Unity::Speaker*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::set_OnRemoteVoiceRemoveAction");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_OnRemoteVoiceRemoveAction", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.get_Actor
::Photon::Realtime::Player* Photon::Voice::Unity::Speaker::get_Actor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::get_Actor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Actor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::Player*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.set_Actor
void Photon::Voice::Unity::Speaker::set_Actor(::Photon::Realtime::Player* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::set_Actor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Actor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.get_IsLinked
bool Photon::Voice::Unity::Speaker::get_IsLinked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::get_IsLinked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsLinked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.get_RemoteVoiceLink
::Photon::Voice::Unity::RemoteVoiceLink* Photon::Voice::Unity::Speaker::get_RemoteVoiceLink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::get_RemoteVoiceLink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_RemoteVoiceLink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::Unity::RemoteVoiceLink*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.get_PlaybackOnlyWhenEnabled
bool Photon::Voice::Unity::Speaker::get_PlaybackOnlyWhenEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::get_PlaybackOnlyWhenEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlaybackOnlyWhenEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.set_PlaybackOnlyWhenEnabled
void Photon::Voice::Unity::Speaker::set_PlaybackOnlyWhenEnabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::set_PlaybackOnlyWhenEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PlaybackOnlyWhenEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.get_PlaybackStarted
bool Photon::Voice::Unity::Speaker::get_PlaybackStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::get_PlaybackStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlaybackStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.set_PlaybackStarted
void Photon::Voice::Unity::Speaker::set_PlaybackStarted(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::set_PlaybackStarted");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PlaybackStarted", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.get_PlaybackDelayMinSoft
int Photon::Voice::Unity::Speaker::get_PlaybackDelayMinSoft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::get_PlaybackDelayMinSoft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlaybackDelayMinSoft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.get_PlaybackDelayMaxSoft
int Photon::Voice::Unity::Speaker::get_PlaybackDelayMaxSoft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::get_PlaybackDelayMaxSoft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlaybackDelayMaxSoft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.get_PlaybackDelayMaxHard
int Photon::Voice::Unity::Speaker::get_PlaybackDelayMaxHard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::get_PlaybackDelayMaxHard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PlaybackDelayMaxHard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.get_Initialized
bool Photon::Voice::Unity::Speaker::get_Initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::get_Initialized");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Initialized", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.OnEnable
void Photon::Voice::Unity::Speaker::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.OnDisable
void Photon::Voice::Unity::Speaker::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.Initialize
void Photon::Voice::Unity::Speaker::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.OnRemoteVoiceInfo
bool Photon::Voice::Unity::Speaker::OnRemoteVoiceInfo(::Photon::Voice::Unity::RemoteVoiceLink* stream) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::OnRemoteVoiceInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRemoteVoiceInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(stream)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, stream);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.OnRemoteVoiceRemove
void Photon::Voice::Unity::Speaker::OnRemoteVoiceRemove() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::OnRemoteVoiceRemove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRemoteVoiceRemove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.OnAudioFrame
void Photon::Voice::Unity::Speaker::OnAudioFrame(::Photon::Voice::FrameOut_1<float>* frame) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::OnAudioFrame");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAudioFrame", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(frame)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, frame);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.StartPlaying
bool Photon::Voice::Unity::Speaker::StartPlaying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::StartPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.OnDestroy
void Photon::Voice::Unity::Speaker::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.StopPlaying
bool Photon::Voice::Unity::Speaker::StopPlaying(bool force) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::StopPlaying");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopPlaying", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(force)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, force);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.CleanUp
void Photon::Voice::Unity::Speaker::CleanUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::CleanUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.Service
void Photon::Voice::Unity::Speaker::Service() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::Service");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Service", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.StartPlayback
bool Photon::Voice::Unity::Speaker::StartPlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::StartPlayback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartPlayback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.StopPlayback
bool Photon::Voice::Unity::Speaker::StopPlayback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::StopPlayback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopPlayback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.RestartPlayback
bool Photon::Voice::Unity::Speaker::RestartPlayback(bool reinit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::RestartPlayback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RestartPlayback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reinit)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, reinit);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.SetPlaybackDelaySettings
bool Photon::Voice::Unity::Speaker::SetPlaybackDelaySettings(::Photon::Voice::Unity::PlaybackDelaySettings pdc) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::SetPlaybackDelaySettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlaybackDelaySettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pdc)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, pdc);
}
// Autogenerated method: Photon.Voice.Unity.Speaker.SetPlaybackDelaySettings
bool Photon::Voice::Unity::Speaker::SetPlaybackDelaySettings(int low, int high, int max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::SetPlaybackDelaySettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlaybackDelaySettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(low), ::il2cpp_utils::ExtractType(high), ::il2cpp_utils::ExtractType(max)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, low, high, max);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.Speaker/<>c__DisplayClass42_0
#include "Photon/Voice/Unity/Speaker_--c__DisplayClass42_0.hpp"
// Including type: Photon.Voice.IAudioOut`1
#include "Photon/Voice/IAudioOut_1.hpp"
// Including type: Photon.Voice.AudioOutDelayControl/PlayDelayConfig
#include "Photon/Voice/AudioOutDelayControl_PlayDelayConfig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Photon.Voice.Unity.Speaker <>4__this
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::Speaker*& Photon::Voice::Unity::Speaker::$$c__DisplayClass42_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::$$c__DisplayClass42_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::Speaker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Voice.AudioOutDelayControl/PlayDelayConfig pdc
[[deprecated("Use field access instead!")]] ::Photon::Voice::AudioOutDelayControl::PlayDelayConfig*& Photon::Voice::Unity::Speaker::$$c__DisplayClass42_0::dyn_pdc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::$$c__DisplayClass42_0::dyn_pdc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pdc"))->offset;
  return *reinterpret_cast<::Photon::Voice::AudioOutDelayControl::PlayDelayConfig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.Speaker/<>c__DisplayClass42_0.<Initialize>b__0
::Photon::Voice::IAudioOut_1<float>* Photon::Voice::Unity::Speaker::$$c__DisplayClass42_0::$Initialize$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::Speaker::$$c__DisplayClass42_0::<Initialize>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Initialize>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::IAudioOut_1<float>*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.VoiceComponent
#include "Photon/Voice/Unity/VoiceComponent.hpp"
// Including type: Photon.Voice.Unity.VoiceLogger
#include "Photon/Voice/Unity/VoiceLogger.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String currentPlatform
::StringW Photon::Voice::Unity::VoiceComponent::_get_currentPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceComponent::_get_currentPlatform");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Voice.Unity", "VoiceComponent", "currentPlatform"));
}
// Autogenerated static field setter
// Set static field: static private System.String currentPlatform
void Photon::Voice::Unity::VoiceComponent::_set_currentPlatform(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceComponent::_set_currentPlatform");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.Unity", "VoiceComponent", "currentPlatform", value));
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.VoiceLogger logger
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::VoiceLogger*& Photon::Voice::Unity::VoiceComponent::dyn_logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceComponent::dyn_logger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "logger"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::VoiceLogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected ExitGames.Client.Photon.DebugLevel logLevel
[[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::DebugLevel& Photon::Voice::Unity::VoiceComponent::dyn_logLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceComponent::dyn_logLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "logLevel"))->offset;
  return *reinterpret_cast<::ExitGames::Client::Photon::DebugLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean ignoreGlobalLogLevel
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::VoiceComponent::dyn_ignoreGlobalLogLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceComponent::dyn_ignoreGlobalLogLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ignoreGlobalLogLevel"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.VoiceComponent.get_Logger
::Photon::Voice::Unity::VoiceLogger* Photon::Voice::Unity::VoiceComponent::get_Logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceComponent::get_Logger");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::VoiceComponent*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::Unity::VoiceLogger*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceComponent.set_Logger
void Photon::Voice::Unity::VoiceComponent::set_Logger(::Photon::Voice::Unity::VoiceLogger* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceComponent::set_Logger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Logger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.VoiceComponent.get_LogLevel
::ExitGames::Client::Photon::DebugLevel Photon::Voice::Unity::VoiceComponent::get_LogLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceComponent::get_LogLevel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::VoiceComponent*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::ExitGames::Client::Photon::DebugLevel, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceComponent.set_LogLevel
void Photon::Voice::Unity::VoiceComponent::set_LogLevel(::ExitGames::Client::Photon::DebugLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceComponent::set_LogLevel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::VoiceComponent*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.VoiceComponent.get_IgnoreGlobalLogLevel
bool Photon::Voice::Unity::VoiceComponent::get_IgnoreGlobalLogLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceComponent::get_IgnoreGlobalLogLevel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::VoiceComponent*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceComponent.set_IgnoreGlobalLogLevel
void Photon::Voice::Unity::VoiceComponent::set_IgnoreGlobalLogLevel(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceComponent::set_IgnoreGlobalLogLevel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::VoiceComponent*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.VoiceComponent.get_CurrentPlatform
::StringW Photon::Voice::Unity::VoiceComponent::get_CurrentPlatform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceComponent::get_CurrentPlatform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice.Unity", "VoiceComponent", "get_CurrentPlatform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceComponent.Awake
void Photon::Voice::Unity::VoiceComponent::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceComponent::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::VoiceComponent*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Voice.Unity.VoiceConnection
#include "Photon/Voice/Unity/VoiceConnection.hpp"
// Including type: Photon.Voice.Unity.VoiceConnection/<>c__DisplayClass98_0
#include "Photon/Voice/Unity/VoiceConnection_--c__DisplayClass98_0.hpp"
// Including type: Photon.Voice.Unity.VoiceConnection/<>c__DisplayClass102_0
#include "Photon/Voice/Unity/VoiceConnection_--c__DisplayClass102_0.hpp"
// Including type: Photon.Voice.Unity.VoiceLogger
#include "Photon/Voice/Unity/VoiceLogger.hpp"
// Including type: Photon.Voice.LoadBalancingTransport
#include "Photon/Voice/LoadBalancingTransport.hpp"
// Including type: Photon.Realtime.SupportLogger
#include "Photon/Realtime/SupportLogger.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Voice.Unity.RemoteVoiceLink
#include "Photon/Voice/Unity/RemoteVoiceLink.hpp"
// Including type: Photon.Voice.Unity.Recorder
#include "Photon/Voice/Unity/Recorder.hpp"
// Including type: Photon.Voice.Unity.Speaker
#include "Photon/Voice/Unity/Speaker.hpp"
// Including type: Photon.Realtime.AppSettings
#include "Photon/Realtime/AppSettings.hpp"
// Including type: System.Func`4
#include "System/Func_4.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: Photon.Voice.VoiceClient
#include "Photon/Voice/VoiceClient.hpp"
// Including type: Photon.Realtime.ClientState
#include "Photon/Realtime/ClientState.hpp"
// Including type: Photon.Voice.VoiceInfo
#include "Photon/Voice/VoiceInfo.hpp"
// Including type: Photon.Voice.RemoteVoiceOptions
#include "Photon/Voice/RemoteVoiceOptions.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String PlayerPrefsKey
::StringW Photon::Voice::Unity::VoiceConnection::_get_PlayerPrefsKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::_get_PlayerPrefsKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Photon.Voice.Unity", "VoiceConnection", "PlayerPrefsKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String PlayerPrefsKey
void Photon::Voice::Unity::VoiceConnection::_set_PlayerPrefsKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::_set_PlayerPrefsKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.Unity", "VoiceConnection", "PlayerPrefsKey", value));
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.VoiceLogger logger
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::VoiceLogger*& Photon::Voice::Unity::VoiceConnection::dyn_logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_logger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "logger"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::VoiceLogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ExitGames.Client.Photon.DebugLevel logLevel
[[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::DebugLevel& Photon::Voice::Unity::VoiceConnection::dyn_logLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_logLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "logLevel"))->offset;
  return *reinterpret_cast<::ExitGames::Client::Photon::DebugLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.LoadBalancingTransport client
[[deprecated("Use field access instead!")]] ::Photon::Voice::LoadBalancingTransport*& Photon::Voice::Unity::VoiceConnection::dyn_client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_client");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "client"))->offset;
  return *reinterpret_cast<::Photon::Voice::LoadBalancingTransport**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean enableSupportLogger
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::VoiceConnection::dyn_enableSupportLogger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_enableSupportLogger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enableSupportLogger"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.SupportLogger supportLoggerComponent
[[deprecated("Use field access instead!")]] ::Photon::Realtime::SupportLogger*& Photon::Voice::Unity::VoiceConnection::dyn_supportLoggerComponent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_supportLoggerComponent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "supportLoggerComponent"))->offset;
  return *reinterpret_cast<::Photon::Realtime::SupportLogger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 updateInterval
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::VoiceConnection::dyn_updateInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_updateInterval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "updateInterval"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nextSendTickCount
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::VoiceConnection::dyn_nextSendTickCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_nextSendTickCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextSendTickCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 statsResetInterval
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::VoiceConnection::dyn_statsResetInterval() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_statsResetInterval");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "statsResetInterval"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 nextStatsTickCount
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::VoiceConnection::dyn_nextStatsTickCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_nextStatsTickCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextStatsTickCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single statsReferenceTime
[[deprecated("Use field access instead!")]] float& Photon::Voice::Unity::VoiceConnection::dyn_statsReferenceTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_statsReferenceTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "statsReferenceTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 referenceFramesLost
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::VoiceConnection::dyn_referenceFramesLost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_referenceFramesLost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "referenceFramesLost"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 referenceFramesReceived
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::VoiceConnection::dyn_referenceFramesReceived() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_referenceFramesReceived");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "referenceFramesReceived"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject speakerPrefab
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& Photon::Voice::Unity::VoiceConnection::dyn_speakerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_speakerPrefab");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speakerPrefab"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean cleanedUp
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::VoiceConnection::dyn_cleanedUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_cleanedUp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cleanedUp"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: protected System.Collections.Generic.List`1<Photon.Voice.Unity.RemoteVoiceLink> cachedRemoteVoices
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Voice::Unity::RemoteVoiceLink*>*& Photon::Voice::Unity::VoiceConnection::dyn_cachedRemoteVoices() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_cachedRemoteVoices");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cachedRemoteVoices"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Voice::Unity::RemoteVoiceLink*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.Recorder primaryRecorder
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::Recorder*& Photon::Voice::Unity::VoiceConnection::dyn_primaryRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_primaryRecorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "primaryRecorder"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::Recorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean primaryRecorderInitialized
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::VoiceConnection::dyn_primaryRecorderInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_primaryRecorderInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "primaryRecorderInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ExitGames.Client.Photon.DebugLevel globalRecordersLogLevel
[[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::DebugLevel& Photon::Voice::Unity::VoiceConnection::dyn_globalRecordersLogLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_globalRecordersLogLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "globalRecordersLogLevel"))->offset;
  return *reinterpret_cast<::ExitGames::Client::Photon::DebugLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ExitGames.Client.Photon.DebugLevel globalSpeakersLogLevel
[[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::DebugLevel& Photon::Voice::Unity::VoiceConnection::dyn_globalSpeakersLogLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_globalSpeakersLogLevel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "globalSpeakersLogLevel"))->offset;
  return *reinterpret_cast<::ExitGames::Client::Photon::DebugLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 globalPlaybackDelay
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::VoiceConnection::dyn_globalPlaybackDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_globalPlaybackDelay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "globalPlaybackDelay"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.PlaybackDelaySettings globalPlaybackDelaySettings
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::PlaybackDelaySettings& Photon::Voice::Unity::VoiceConnection::dyn_globalPlaybackDelaySettings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_globalPlaybackDelaySettings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "globalPlaybackDelaySettings"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::PlaybackDelaySettings*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Photon.Voice.Unity.Speaker> linkedSpeakers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Voice::Unity::Speaker*>*& Photon::Voice::Unity::VoiceConnection::dyn_linkedSpeakers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_linkedSpeakers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "linkedSpeakers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Voice::Unity::Speaker*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Photon.Voice.Unity.Recorder> initializedRecorders
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Photon::Voice::Unity::Recorder*>*& Photon::Voice::Unity::VoiceConnection::dyn_initializedRecorders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_initializedRecorders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initializedRecorders"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Photon::Voice::Unity::Recorder*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.AppSettings Settings
[[deprecated("Use field access instead!")]] ::Photon::Realtime::AppSettings*& Photon::Voice::Unity::VoiceConnection::dyn_Settings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_Settings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Settings"))->offset;
  return *reinterpret_cast<::Photon::Realtime::AppSettings**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Func`4<System.Int32,System.Byte,System.Object,Photon.Voice.Unity.Speaker> SpeakerFactory
[[deprecated("Use field access instead!")]] ::System::Func_4<int, uint8_t, ::Il2CppObject*, ::Photon::Voice::Unity::Speaker*>*& Photon::Voice::Unity::VoiceConnection::dyn_SpeakerFactory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_SpeakerFactory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SpeakerFactory"))->offset;
  return *reinterpret_cast<::System::Func_4<int, uint8_t, ::Il2CppObject*, ::Photon::Voice::Unity::Speaker*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Photon.Voice.Unity.Speaker> SpeakerLinked
[[deprecated("Use field access instead!")]] ::System::Action_1<::Photon::Voice::Unity::Speaker*>*& Photon::Voice::Unity::VoiceConnection::dyn_SpeakerLinked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_SpeakerLinked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SpeakerLinked"))->offset;
  return *reinterpret_cast<::System::Action_1<::Photon::Voice::Unity::Speaker*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Action`1<Photon.Voice.Unity.RemoteVoiceLink> RemoteVoiceAdded
[[deprecated("Use field access instead!")]] ::System::Action_1<::Photon::Voice::Unity::RemoteVoiceLink*>*& Photon::Voice::Unity::VoiceConnection::dyn_RemoteVoiceAdded() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_RemoteVoiceAdded");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RemoteVoiceAdded"))->offset;
  return *reinterpret_cast<::System::Action_1<::Photon::Voice::Unity::RemoteVoiceLink*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single MinimalTimeScaleToDispatchInFixedUpdate
[[deprecated("Use field access instead!")]] float& Photon::Voice::Unity::VoiceConnection::dyn_MinimalTimeScaleToDispatchInFixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_MinimalTimeScaleToDispatchInFixedUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MinimalTimeScaleToDispatchInFixedUpdate"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AutoCreateSpeakerIfNotFound
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::VoiceConnection::dyn_AutoCreateSpeakerIfNotFound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_AutoCreateSpeakerIfNotFound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AutoCreateSpeakerIfNotFound"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 MaxDatagrams
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::VoiceConnection::dyn_MaxDatagrams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_MaxDatagrams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "MaxDatagrams"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean SendAsap
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::VoiceConnection::dyn_SendAsap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_SendAsap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SendAsap"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <FramesReceivedPerSecond>k__BackingField
[[deprecated("Use field access instead!")]] float& Photon::Voice::Unity::VoiceConnection::dyn_$FramesReceivedPerSecond$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_$FramesReceivedPerSecond$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FramesReceivedPerSecond>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <FramesLostPerSecond>k__BackingField
[[deprecated("Use field access instead!")]] float& Photon::Voice::Unity::VoiceConnection::dyn_$FramesLostPerSecond$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_$FramesLostPerSecond$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FramesLostPerSecond>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <FramesLostPercent>k__BackingField
[[deprecated("Use field access instead!")]] float& Photon::Voice::Unity::VoiceConnection::dyn_$FramesLostPercent$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::dyn_$FramesLostPercent$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<FramesLostPercent>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.add_SpeakerLinked
void Photon::Voice::Unity::VoiceConnection::add_SpeakerLinked(::System::Action_1<::Photon::Voice::Unity::Speaker*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::add_SpeakerLinked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_SpeakerLinked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.remove_SpeakerLinked
void Photon::Voice::Unity::VoiceConnection::remove_SpeakerLinked(::System::Action_1<::Photon::Voice::Unity::Speaker*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::remove_SpeakerLinked");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_SpeakerLinked", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.add_RemoteVoiceAdded
void Photon::Voice::Unity::VoiceConnection::add_RemoteVoiceAdded(::System::Action_1<::Photon::Voice::Unity::RemoteVoiceLink*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::add_RemoteVoiceAdded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "add_RemoteVoiceAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.remove_RemoteVoiceAdded
void Photon::Voice::Unity::VoiceConnection::remove_RemoteVoiceAdded(::System::Action_1<::Photon::Voice::Unity::RemoteVoiceLink*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::remove_RemoteVoiceAdded");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "remove_RemoteVoiceAdded", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.get_Logger
::Photon::Voice::Unity::VoiceLogger* Photon::Voice::Unity::VoiceConnection::get_Logger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::get_Logger");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::VoiceConnection*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::Unity::VoiceLogger*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.set_Logger
void Photon::Voice::Unity::VoiceConnection::set_Logger(::Photon::Voice::Unity::VoiceLogger* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::set_Logger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Logger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.get_LogLevel
::ExitGames::Client::Photon::DebugLevel Photon::Voice::Unity::VoiceConnection::get_LogLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::get_LogLevel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::VoiceConnection*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::ExitGames::Client::Photon::DebugLevel, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.set_LogLevel
void Photon::Voice::Unity::VoiceConnection::set_LogLevel(::ExitGames::Client::Photon::DebugLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::set_LogLevel");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::VoiceConnection*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.get_Client
::Photon::Voice::LoadBalancingTransport* Photon::Voice::Unity::VoiceConnection::get_Client() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::get_Client");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Client", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::LoadBalancingTransport*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.get_VoiceClient
::Photon::Voice::VoiceClient* Photon::Voice::Unity::VoiceConnection::get_VoiceClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::get_VoiceClient");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VoiceClient", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::VoiceClient*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.get_ClientState
::Photon::Realtime::ClientState Photon::Voice::Unity::VoiceConnection::get_ClientState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::get_ClientState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ClientState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Realtime::ClientState, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.get_FramesReceivedPerSecond
float Photon::Voice::Unity::VoiceConnection::get_FramesReceivedPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::get_FramesReceivedPerSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FramesReceivedPerSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.set_FramesReceivedPerSecond
void Photon::Voice::Unity::VoiceConnection::set_FramesReceivedPerSecond(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::set_FramesReceivedPerSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FramesReceivedPerSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.get_FramesLostPerSecond
float Photon::Voice::Unity::VoiceConnection::get_FramesLostPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::get_FramesLostPerSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FramesLostPerSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.set_FramesLostPerSecond
void Photon::Voice::Unity::VoiceConnection::set_FramesLostPerSecond(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::set_FramesLostPerSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FramesLostPerSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.get_FramesLostPercent
float Photon::Voice::Unity::VoiceConnection::get_FramesLostPercent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::get_FramesLostPercent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_FramesLostPercent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.set_FramesLostPercent
void Photon::Voice::Unity::VoiceConnection::set_FramesLostPercent(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::set_FramesLostPercent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_FramesLostPercent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.get_SpeakerPrefab
::UnityEngine::GameObject* Photon::Voice::Unity::VoiceConnection::get_SpeakerPrefab() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::get_SpeakerPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_SpeakerPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::GameObject*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.set_SpeakerPrefab
void Photon::Voice::Unity::VoiceConnection::set_SpeakerPrefab(::UnityEngine::GameObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::set_SpeakerPrefab");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_SpeakerPrefab", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.get_PrimaryRecorder
::Photon::Voice::Unity::Recorder* Photon::Voice::Unity::VoiceConnection::get_PrimaryRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::get_PrimaryRecorder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrimaryRecorder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::Unity::Recorder*, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.set_PrimaryRecorder
void Photon::Voice::Unity::VoiceConnection::set_PrimaryRecorder(::Photon::Voice::Unity::Recorder* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::set_PrimaryRecorder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PrimaryRecorder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.get_GlobalRecordersLogLevel
::ExitGames::Client::Photon::DebugLevel Photon::Voice::Unity::VoiceConnection::get_GlobalRecordersLogLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::get_GlobalRecordersLogLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GlobalRecordersLogLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ExitGames::Client::Photon::DebugLevel, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.set_GlobalRecordersLogLevel
void Photon::Voice::Unity::VoiceConnection::set_GlobalRecordersLogLevel(::ExitGames::Client::Photon::DebugLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::set_GlobalRecordersLogLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GlobalRecordersLogLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.get_GlobalSpeakersLogLevel
::ExitGames::Client::Photon::DebugLevel Photon::Voice::Unity::VoiceConnection::get_GlobalSpeakersLogLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::get_GlobalSpeakersLogLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GlobalSpeakersLogLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ExitGames::Client::Photon::DebugLevel, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.set_GlobalSpeakersLogLevel
void Photon::Voice::Unity::VoiceConnection::set_GlobalSpeakersLogLevel(::ExitGames::Client::Photon::DebugLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::set_GlobalSpeakersLogLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GlobalSpeakersLogLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.get_GlobalPlaybackDelay
int Photon::Voice::Unity::VoiceConnection::get_GlobalPlaybackDelay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::get_GlobalPlaybackDelay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GlobalPlaybackDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.set_GlobalPlaybackDelay
void Photon::Voice::Unity::VoiceConnection::set_GlobalPlaybackDelay(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::set_GlobalPlaybackDelay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_GlobalPlaybackDelay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.get_BestRegionSummaryInPreferences
::StringW Photon::Voice::Unity::VoiceConnection::get_BestRegionSummaryInPreferences() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::get_BestRegionSummaryInPreferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BestRegionSummaryInPreferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.set_BestRegionSummaryInPreferences
void Photon::Voice::Unity::VoiceConnection::set_BestRegionSummaryInPreferences(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::set_BestRegionSummaryInPreferences");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BestRegionSummaryInPreferences", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.get_GlobalPlaybackDelayMinSoft
int Photon::Voice::Unity::VoiceConnection::get_GlobalPlaybackDelayMinSoft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::get_GlobalPlaybackDelayMinSoft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GlobalPlaybackDelayMinSoft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.get_GlobalPlaybackDelayMaxSoft
int Photon::Voice::Unity::VoiceConnection::get_GlobalPlaybackDelayMaxSoft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::get_GlobalPlaybackDelayMaxSoft");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GlobalPlaybackDelayMaxSoft", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.get_GlobalPlaybackDelayMaxHard
int Photon::Voice::Unity::VoiceConnection::get_GlobalPlaybackDelayMaxHard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::get_GlobalPlaybackDelayMaxHard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_GlobalPlaybackDelayMaxHard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.ConnectUsingSettings
bool Photon::Voice::Unity::VoiceConnection::ConnectUsingSettings(::Photon::Realtime::AppSettings* overwriteSettings) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::ConnectUsingSettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectUsingSettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(overwriteSettings)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, overwriteSettings);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.InitRecorder
void Photon::Voice::Unity::VoiceConnection::InitRecorder(::Photon::Voice::Unity::Recorder* rec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::InitRecorder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitRecorder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rec)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rec);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.SetPlaybackDelaySettings
void Photon::Voice::Unity::VoiceConnection::SetPlaybackDelaySettings(::Photon::Voice::Unity::PlaybackDelaySettings gpds) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::SetPlaybackDelaySettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetPlaybackDelaySettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gpds)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, gpds);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.SetGlobalPlaybackDelaySettings
void Photon::Voice::Unity::VoiceConnection::SetGlobalPlaybackDelaySettings(int low, int high, int max) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::SetGlobalPlaybackDelaySettings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetGlobalPlaybackDelaySettings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(low), ::il2cpp_utils::ExtractType(high), ::il2cpp_utils::ExtractType(max)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, low, high, max);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.TryLateLinkingUsingUserData
bool Photon::Voice::Unity::VoiceConnection::TryLateLinkingUsingUserData(::Photon::Voice::Unity::Speaker* speaker, ::Il2CppObject* userData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::TryLateLinkingUsingUserData");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::VoiceConnection*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, speaker, userData);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.Update
void Photon::Voice::Unity::VoiceConnection::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::VoiceConnection*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.FixedUpdate
void Photon::Voice::Unity::VoiceConnection::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::FixedUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::VoiceConnection*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.Dispatch
void Photon::Voice::Unity::VoiceConnection::Dispatch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::Dispatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Dispatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.LateUpdate
void Photon::Voice::Unity::VoiceConnection::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.OnDestroy
void Photon::Voice::Unity::VoiceConnection::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::OnDestroy");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::VoiceConnection*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.SimpleSpeakerFactory
::Photon::Voice::Unity::Speaker* Photon::Voice::Unity::VoiceConnection::SimpleSpeakerFactory(int playerId, uint8_t voiceId, ::Il2CppObject* userData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::SimpleSpeakerFactory");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::VoiceConnection*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Voice::Unity::Speaker*, false>(this, ___internal__method, playerId, voiceId, userData);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.DeleteVoiceOnRemoteVoiceRemove
void Photon::Voice::Unity::VoiceConnection::DeleteVoiceOnRemoteVoiceRemove(::Photon::Voice::Unity::Speaker* speaker) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::DeleteVoiceOnRemoteVoiceRemove");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DeleteVoiceOnRemoteVoiceRemove", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speaker)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speaker);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.OnRemoteVoiceInfo
void Photon::Voice::Unity::VoiceConnection::OnRemoteVoiceInfo(int channelId, int playerId, uint8_t voiceId, ::Photon::Voice::VoiceInfo voiceInfo, ByRef<::Photon::Voice::RemoteVoiceOptions> options) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::OnRemoteVoiceInfo");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnRemoteVoiceInfo", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(channelId), ::il2cpp_utils::ExtractType(playerId), ::il2cpp_utils::ExtractType(voiceId), ::il2cpp_utils::ExtractType(voiceInfo), ::il2cpp_utils::ExtractType(options)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, channelId, playerId, voiceId, voiceInfo, byref(options));
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.OnVoiceStateChanged
void Photon::Voice::Unity::VoiceConnection::OnVoiceStateChanged(::Photon::Realtime::ClientState fromState, ::Photon::Realtime::ClientState toState) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::OnVoiceStateChanged");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::VoiceConnection*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fromState, toState);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.CalcStatistics
void Photon::Voice::Unity::VoiceConnection::CalcStatistics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::CalcStatistics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CalcStatistics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.CleanUp
void Photon::Voice::Unity::VoiceConnection::CleanUp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::CleanUp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CleanUp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.LinkSpeaker
void Photon::Voice::Unity::VoiceConnection::LinkSpeaker(::Photon::Voice::Unity::Speaker* speaker, ::Photon::Voice::Unity::RemoteVoiceLink* remoteVoice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::LinkSpeaker");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LinkSpeaker", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(speaker), ::il2cpp_utils::ExtractType(remoteVoice)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, speaker, remoteVoice);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.ClearRemoteVoicesCache
void Photon::Voice::Unity::VoiceConnection::ClearRemoteVoicesCache() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::ClearRemoteVoicesCache");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearRemoteVoicesCache", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.TryInitializePrimaryRecorder
void Photon::Voice::Unity::VoiceConnection::TryInitializePrimaryRecorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::TryInitializePrimaryRecorder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryInitializePrimaryRecorder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.AddInitializedRecorder
void Photon::Voice::Unity::VoiceConnection::AddInitializedRecorder(::Photon::Voice::Unity::Recorder* rec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::AddInitializedRecorder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AddInitializedRecorder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rec)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rec);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.RemoveInitializedRecorder
void Photon::Voice::Unity::VoiceConnection::RemoveInitializedRecorder(::Photon::Voice::Unity::Recorder* rec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::RemoveInitializedRecorder");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RemoveInitializedRecorder", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rec)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, rec);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.StartInitializedRecorders
void Photon::Voice::Unity::VoiceConnection::StartInitializedRecorders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::StartInitializedRecorders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartInitializedRecorders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.StopInitializedRecorders
void Photon::Voice::Unity::VoiceConnection::StopInitializedRecorders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::StopInitializedRecorders");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StopInitializedRecorders", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.TryGetFirstVoiceStreamByUserData
bool Photon::Voice::Unity::VoiceConnection::TryGetFirstVoiceStreamByUserData(::Il2CppObject* userData, ByRef<::Photon::Voice::Unity::RemoteVoiceLink*> remoteVoiceLink) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::TryGetFirstVoiceStreamByUserData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TryGetFirstVoiceStreamByUserData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userData), ::il2cpp_utils::ExtractIndependentType<::Photon::Voice::Unity::RemoteVoiceLink*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, userData, byref(remoteVoiceLink));
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.Awake
void Photon::Voice::Unity::VoiceConnection::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ConnectionHandler*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection.OnDisable
void Photon::Voice::Unity::VoiceConnection::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::OnDisable");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Realtime::ConnectionHandler*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.VoiceConnection/<>c__DisplayClass98_0
#include "Photon/Voice/Unity/VoiceConnection_--c__DisplayClass98_0.hpp"
// Including type: Photon.Voice.Unity.RemoteVoiceLink
#include "Photon/Voice/Unity/RemoteVoiceLink.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Photon.Voice.Unity.VoiceConnection <>4__this
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::VoiceConnection*& Photon::Voice::Unity::VoiceConnection::$$c__DisplayClass98_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::$$c__DisplayClass98_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::VoiceConnection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Voice.Unity.RemoteVoiceLink remoteVoice
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::RemoteVoiceLink*& Photon::Voice::Unity::VoiceConnection::$$c__DisplayClass98_0::dyn_remoteVoice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::$$c__DisplayClass98_0::dyn_remoteVoice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "remoteVoice"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::RemoteVoiceLink**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection/<>c__DisplayClass98_0.<OnRemoteVoiceInfo>b__0
void Photon::Voice::Unity::VoiceConnection::$$c__DisplayClass98_0::$OnRemoteVoiceInfo$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::$$c__DisplayClass98_0::<OnRemoteVoiceInfo>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnRemoteVoiceInfo>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.VoiceConnection/<>c__DisplayClass102_0
#include "Photon/Voice/Unity/VoiceConnection_--c__DisplayClass102_0.hpp"
// Including type: Photon.Voice.Unity.Speaker
#include "Photon/Voice/Unity/Speaker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Photon.Voice.Unity.VoiceConnection <>4__this
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::VoiceConnection*& Photon::Voice::Unity::VoiceConnection::$$c__DisplayClass102_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::$$c__DisplayClass102_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::VoiceConnection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Voice.Unity.Speaker speaker
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::Speaker*& Photon::Voice::Unity::VoiceConnection::$$c__DisplayClass102_0::dyn_speaker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::$$c__DisplayClass102_0::dyn_speaker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speaker"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::Speaker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.VoiceConnection/<>c__DisplayClass102_0.<LinkSpeaker>b__0
void Photon::Voice::Unity::VoiceConnection::$$c__DisplayClass102_0::$LinkSpeaker$b__0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceConnection::$$c__DisplayClass102_0::<LinkSpeaker>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LinkSpeaker>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Voice.Unity.VoiceLogger
#include "Photon/Voice/Unity/VoiceLogger.hpp"
// Including type: UnityEngine.Object
#include "UnityEngine/Object.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <Tag>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Photon::Voice::Unity::VoiceLogger::dyn_$Tag$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceLogger::dyn_$Tag$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Tag>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private ExitGames.Client.Photon.DebugLevel <LogLevel>k__BackingField
[[deprecated("Use field access instead!")]] ::ExitGames::Client::Photon::DebugLevel& Photon::Voice::Unity::VoiceLogger::dyn_$LogLevel$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceLogger::dyn_$LogLevel$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<LogLevel>k__BackingField"))->offset;
  return *reinterpret_cast<::ExitGames::Client::Photon::DebugLevel*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly UnityEngine.Object context
[[deprecated("Use field access instead!")]] ::UnityEngine::Object*& Photon::Voice::Unity::VoiceLogger::dyn_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceLogger::dyn_context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context"))->offset;
  return *reinterpret_cast<::UnityEngine::Object**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.VoiceLogger.get_Tag
::StringW Photon::Voice::Unity::VoiceLogger::get_Tag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceLogger::get_Tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceLogger.set_Tag
void Photon::Voice::Unity::VoiceLogger::set_Tag(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceLogger::set_Tag");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Tag", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.VoiceLogger.get_LogLevel
::ExitGames::Client::Photon::DebugLevel Photon::Voice::Unity::VoiceLogger::get_LogLevel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceLogger::get_LogLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_LogLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ExitGames::Client::Photon::DebugLevel, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceLogger.set_LogLevel
void Photon::Voice::Unity::VoiceLogger::set_LogLevel(::ExitGames::Client::Photon::DebugLevel value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceLogger::set_LogLevel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_LogLevel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.VoiceLogger.get_IsErrorEnabled
bool Photon::Voice::Unity::VoiceLogger::get_IsErrorEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceLogger::get_IsErrorEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsErrorEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceLogger.get_IsWarningEnabled
bool Photon::Voice::Unity::VoiceLogger::get_IsWarningEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceLogger::get_IsWarningEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsWarningEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceLogger.get_IsInfoEnabled
bool Photon::Voice::Unity::VoiceLogger::get_IsInfoEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceLogger::get_IsInfoEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInfoEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceLogger.get_IsDebugEnabled
bool Photon::Voice::Unity::VoiceLogger::get_IsDebugEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceLogger::get_IsDebugEnabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDebugEnabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.VoiceLogger.LogError
void Photon::Voice::Unity::VoiceLogger::LogError(::StringW fmt, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceLogger::LogError");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::VoiceLogger*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fmt, args);
}
// Autogenerated method: Photon.Voice.Unity.VoiceLogger.LogWarning
void Photon::Voice::Unity::VoiceLogger::LogWarning(::StringW fmt, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceLogger::LogWarning");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::VoiceLogger*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fmt, args);
}
// Autogenerated method: Photon.Voice.Unity.VoiceLogger.LogInfo
void Photon::Voice::Unity::VoiceLogger::LogInfo(::StringW fmt, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceLogger::LogInfo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::VoiceLogger*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fmt, args);
}
// Autogenerated method: Photon.Voice.Unity.VoiceLogger.LogDebug
void Photon::Voice::Unity::VoiceLogger::LogDebug(::StringW fmt, ::ArrayW<::Il2CppObject*> args) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceLogger::LogDebug");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::VoiceLogger*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, fmt, args);
}
// Autogenerated method: Photon.Voice.Unity.VoiceLogger.GetFormatString
::StringW Photon::Voice::Unity::VoiceLogger::GetFormatString(::StringW fmt) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceLogger::GetFormatString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetFormatString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(fmt)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, fmt);
}
// Autogenerated method: Photon.Voice.Unity.VoiceLogger.GetTimestamp
::StringW Photon::Voice::Unity::VoiceLogger::GetTimestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::VoiceLogger::GetTimestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetTimestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.WebRtcAudioDsp
#include "Photon/Voice/Unity/WebRtcAudioDsp.hpp"
// Including type: Photon.Voice.WebRTCAudioProcessor
#include "Photon/Voice/WebRTCAudioProcessor.hpp"
// Including type: Photon.Voice.Unity.AudioOutCapture
#include "Photon/Voice/Unity/AudioOutCapture.hpp"
// Including type: Photon.Voice.LocalVoice
#include "Photon/Voice/LocalVoice.hpp"
// Including type: Photon.Voice.Unity.Recorder
#include "Photon/Voice/Unity/Recorder.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: Photon.Voice.Unity.PhotonVoiceCreatedParams
#include "Photon/Voice/Unity/PhotonVoiceCreatedParams.hpp"
// Including type: UnityEngine.AudioListener
#include "UnityEngine/AudioListener.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly System.Collections.Generic.Dictionary`2<UnityEngine.AudioSpeakerMode,System.Int32> channelsMap
::System::Collections::Generic::Dictionary_2<::UnityEngine::AudioSpeakerMode, int>* Photon::Voice::Unity::WebRtcAudioDsp::_get_channelsMap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::_get_channelsMap");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::Dictionary_2<::UnityEngine::AudioSpeakerMode, int>*>("Photon.Voice.Unity", "WebRtcAudioDsp", "channelsMap")));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Collections.Generic.Dictionary`2<UnityEngine.AudioSpeakerMode,System.Int32> channelsMap
void Photon::Voice::Unity::WebRtcAudioDsp::_set_channelsMap(::System::Collections::Generic::Dictionary_2<::UnityEngine::AudioSpeakerMode, int>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::_set_channelsMap");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.Unity", "WebRtcAudioDsp", "channelsMap", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean aec
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::WebRtcAudioDsp::dyn_aec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::dyn_aec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aec"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean aecHighPass
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::WebRtcAudioDsp::dyn_aecHighPass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::dyn_aecHighPass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "aecHighPass"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean agc
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::WebRtcAudioDsp::dyn_agc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::dyn_agc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "agc"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 agcCompressionGain
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::WebRtcAudioDsp::dyn_agcCompressionGain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::dyn_agcCompressionGain");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "agcCompressionGain"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean vad
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::WebRtcAudioDsp::dyn_vad() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::dyn_vad");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vad"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean highPass
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::WebRtcAudioDsp::dyn_highPass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::dyn_highPass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "highPass"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean bypass
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::WebRtcAudioDsp::dyn_bypass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::dyn_bypass");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bypass"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean noiseSuppression
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::WebRtcAudioDsp::dyn_noiseSuppression() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::dyn_noiseSuppression");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noiseSuppression"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 reverseStreamDelayMs
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::WebRtcAudioDsp::dyn_reverseStreamDelayMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::dyn_reverseStreamDelayMs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverseStreamDelayMs"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 reverseChannels
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::WebRtcAudioDsp::dyn_reverseChannels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::dyn_reverseChannels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverseChannels"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.WebRTCAudioProcessor proc
[[deprecated("Use field access instead!")]] ::Photon::Voice::WebRTCAudioProcessor*& Photon::Voice::Unity::WebRtcAudioDsp::dyn_proc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::dyn_proc");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "proc"))->offset;
  return *reinterpret_cast<::Photon::Voice::WebRTCAudioProcessor**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.AudioOutCapture ac
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::AudioOutCapture*& Photon::Voice::Unity::WebRtcAudioDsp::dyn_ac() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::dyn_ac");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ac"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::AudioOutCapture**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean started
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::WebRtcAudioDsp::dyn_started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::dyn_started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.LocalVoice localVoice
[[deprecated("Use field access instead!")]] ::Photon::Voice::LocalVoice*& Photon::Voice::Unity::WebRtcAudioDsp::dyn_localVoice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::dyn_localVoice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "localVoice"))->offset;
  return *reinterpret_cast<::Photon::Voice::LocalVoice**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 outputSampleRate
[[deprecated("Use field access instead!")]] int& Photon::Voice::Unity::WebRtcAudioDsp::dyn_outputSampleRate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::dyn_outputSampleRate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outputSampleRate"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.Recorder recorder
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::Recorder*& Photon::Voice::Unity::WebRtcAudioDsp::dyn_recorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::dyn_recorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recorder"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::Recorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean forceNormalAecInMobile
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::WebRtcAudioDsp::dyn_forceNormalAecInMobile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::dyn_forceNormalAecInMobile");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forceNormalAecInMobile"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AECMobileComfortNoise
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::WebRtcAudioDsp::dyn_AECMobileComfortNoise() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::dyn_AECMobileComfortNoise");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AECMobileComfortNoise"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.get_AEC
bool Photon::Voice::Unity::WebRtcAudioDsp::get_AEC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::get_AEC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AEC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.set_AEC
void Photon::Voice::Unity::WebRtcAudioDsp::set_AEC(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::set_AEC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AEC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.get_AECMobile
bool Photon::Voice::Unity::WebRtcAudioDsp::get_AECMobile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::get_AECMobile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AECMobile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.set_AECMobile
void Photon::Voice::Unity::WebRtcAudioDsp::set_AECMobile(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::set_AECMobile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AECMobile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.get_AecHighPass
bool Photon::Voice::Unity::WebRtcAudioDsp::get_AecHighPass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::get_AecHighPass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AecHighPass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.set_AecHighPass
void Photon::Voice::Unity::WebRtcAudioDsp::set_AecHighPass(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::set_AecHighPass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AecHighPass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.get_ReverseStreamDelayMs
int Photon::Voice::Unity::WebRtcAudioDsp::get_ReverseStreamDelayMs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::get_ReverseStreamDelayMs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ReverseStreamDelayMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.set_ReverseStreamDelayMs
void Photon::Voice::Unity::WebRtcAudioDsp::set_ReverseStreamDelayMs(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::set_ReverseStreamDelayMs");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ReverseStreamDelayMs", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.get_NoiseSuppression
bool Photon::Voice::Unity::WebRtcAudioDsp::get_NoiseSuppression() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::get_NoiseSuppression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_NoiseSuppression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.set_NoiseSuppression
void Photon::Voice::Unity::WebRtcAudioDsp::set_NoiseSuppression(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::set_NoiseSuppression");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_NoiseSuppression", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.get_HighPass
bool Photon::Voice::Unity::WebRtcAudioDsp::get_HighPass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::get_HighPass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HighPass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.set_HighPass
void Photon::Voice::Unity::WebRtcAudioDsp::set_HighPass(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::set_HighPass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HighPass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.get_Bypass
bool Photon::Voice::Unity::WebRtcAudioDsp::get_Bypass() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::get_Bypass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Bypass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.set_Bypass
void Photon::Voice::Unity::WebRtcAudioDsp::set_Bypass(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::set_Bypass");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Bypass", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.get_AGC
bool Photon::Voice::Unity::WebRtcAudioDsp::get_AGC() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::get_AGC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AGC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.set_AGC
void Photon::Voice::Unity::WebRtcAudioDsp::set_AGC(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::set_AGC");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AGC", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.get_AgcCompressionGain
int Photon::Voice::Unity::WebRtcAudioDsp::get_AgcCompressionGain() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::get_AgcCompressionGain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AgcCompressionGain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.set_AgcCompressionGain
void Photon::Voice::Unity::WebRtcAudioDsp::set_AgcCompressionGain(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::set_AgcCompressionGain");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AgcCompressionGain", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.get_VAD
bool Photon::Voice::Unity::WebRtcAudioDsp::get_VAD() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::get_VAD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_VAD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.set_VAD
void Photon::Voice::Unity::WebRtcAudioDsp::set_VAD(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::set_VAD");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_VAD", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.get_ForceNormalAecInMobile
bool Photon::Voice::Unity::WebRtcAudioDsp::get_ForceNormalAecInMobile() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::get_ForceNormalAecInMobile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_ForceNormalAecInMobile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.set_ForceNormalAecInMobile
void Photon::Voice::Unity::WebRtcAudioDsp::set_ForceNormalAecInMobile(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::set_ForceNormalAecInMobile");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_ForceNormalAecInMobile", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.OnEnable
void Photon::Voice::Unity::WebRtcAudioDsp::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.OnDisable
void Photon::Voice::Unity::WebRtcAudioDsp::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.SupportedPlatformCheck
bool Photon::Voice::Unity::WebRtcAudioDsp::SupportedPlatformCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::SupportedPlatformCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SupportedPlatformCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.SetOutputListener
void Photon::Voice::Unity::WebRtcAudioDsp::SetOutputListener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::SetOutputListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOutputListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.SetOutputListener
void Photon::Voice::Unity::WebRtcAudioDsp::SetOutputListener(bool on) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::SetOutputListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOutputListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(on)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, on);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.OnAudioOutFrameFloat
void Photon::Voice::Unity::WebRtcAudioDsp::OnAudioOutFrameFloat(::ArrayW<float> data, int outChannels) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::OnAudioOutFrameFloat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnAudioOutFrameFloat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(data), ::il2cpp_utils::ExtractType(outChannels)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data, outChannels);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.PhotonVoiceCreated
void Photon::Voice::Unity::WebRtcAudioDsp::PhotonVoiceCreated(::Photon::Voice::Unity::PhotonVoiceCreatedParams* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::PhotonVoiceCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PhotonVoiceCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.PhotonVoiceRemoved
void Photon::Voice::Unity::WebRtcAudioDsp::PhotonVoiceRemoved() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::PhotonVoiceRemoved");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PhotonVoiceRemoved", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.OnDestroy
void Photon::Voice::Unity::WebRtcAudioDsp::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.Reset
void Photon::Voice::Unity::WebRtcAudioDsp::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.Restart
void Photon::Voice::Unity::WebRtcAudioDsp::Restart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::Restart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Restart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.Init
void Photon::Voice::Unity::WebRtcAudioDsp::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.SetOrSwitchAudioListener
bool Photon::Voice::Unity::WebRtcAudioDsp::SetOrSwitchAudioListener(::UnityEngine::AudioListener* audioListener, bool extraChecks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::SetOrSwitchAudioListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOrSwitchAudioListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioListener), ::il2cpp_utils::ExtractType(extraChecks)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, audioListener, extraChecks);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.SetOrSwitchAudioOutCapture
bool Photon::Voice::Unity::WebRtcAudioDsp::SetOrSwitchAudioOutCapture(::Photon::Voice::Unity::AudioOutCapture* audioOutCapture, bool extraChecks) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::SetOrSwitchAudioOutCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOrSwitchAudioOutCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioOutCapture), ::il2cpp_utils::ExtractType(extraChecks)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, audioOutCapture, extraChecks);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.SetOrSwitchAudioListener
bool Photon::Voice::Unity::WebRtcAudioDsp::SetOrSwitchAudioListener(::UnityEngine::AudioListener* audioListener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::SetOrSwitchAudioListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOrSwitchAudioListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioListener)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, audioListener);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.SetOrSwitchAudioOutCapture
bool Photon::Voice::Unity::WebRtcAudioDsp::SetOrSwitchAudioOutCapture(::Photon::Voice::Unity::AudioOutCapture* audioOutCapture) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::SetOrSwitchAudioOutCapture");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetOrSwitchAudioOutCapture", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(audioOutCapture)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, audioOutCapture);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp..cctor
void Photon::Voice::Unity::WebRtcAudioDsp::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice.Unity", "WebRtcAudioDsp", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.WebRtcAudioDsp.Awake
void Photon::Voice::Unity::WebRtcAudioDsp::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::WebRtcAudioDsp::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::VoiceComponent*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Photon.Voice.Unity.UtilityScripts.ConnectAndJoin
#include "Photon/Voice/Unity/UtilityScripts/ConnectAndJoin.hpp"
// Including type: Photon.Voice.Unity.VoiceConnection
#include "Photon/Voice/Unity/VoiceConnection.hpp"
// Including type: Photon.Realtime.EnterRoomParams
#include "Photon/Realtime/EnterRoomParams.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Photon.Realtime.FriendInfo
#include "Photon/Realtime/FriendInfo.hpp"
// Including type: Photon.Realtime.DisconnectCause
#include "Photon/Realtime/DisconnectCause.hpp"
// Including type: Photon.Realtime.RegionHandler
#include "Photon/Realtime/RegionHandler.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.VoiceConnection voiceConnection
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::VoiceConnection*& Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::dyn_voiceConnection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::dyn_voiceConnection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceConnection"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::VoiceConnection**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean RandomRoom
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::dyn_RandomRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::dyn_RandomRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RandomRoom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean autoConnect
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::dyn_autoConnect() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::dyn_autoConnect");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoConnect"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean autoTransmit
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::dyn_autoTransmit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::dyn_autoTransmit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoTransmit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean publishUserId
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::dyn_publishUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::dyn_publishUserId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "publishUserId"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String RoomName
[[deprecated("Use field access instead!")]] ::StringW& Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::dyn_RoomName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::dyn_RoomName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RoomName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private readonly Photon.Realtime.EnterRoomParams enterRoomParams
[[deprecated("Use field access instead!")]] ::Photon::Realtime::EnterRoomParams*& Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::dyn_enterRoomParams() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::dyn_enterRoomParams");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "enterRoomParams"))->offset;
  return *reinterpret_cast<::Photon::Realtime::EnterRoomParams**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.ConnectAndJoin.get_IsConnected
bool Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::get_IsConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::get_IsConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.ConnectAndJoin.Awake
void Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.ConnectAndJoin.OnEnable
void Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.ConnectAndJoin.OnDisable
void Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.ConnectAndJoin.ConnectNow
void Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::ConnectNow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::ConnectNow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConnectNow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.ConnectAndJoin.OnCreatedRoom
void Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnCreatedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnCreatedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.ConnectAndJoin.OnCreateRoomFailed
void Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnCreateRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnCreateRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.ConnectAndJoin.OnFriendListUpdate
void Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnFriendListUpdate(::System::Collections::Generic::List_1<::Photon::Realtime::FriendInfo*>* friendList) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnFriendListUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, friendList);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.ConnectAndJoin.OnJoinedRoom
void Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.ConnectAndJoin.OnJoinRandomFailed
void Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnJoinRandomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnJoinRandomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.ConnectAndJoin.OnJoinRoomFailed
void Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnJoinRoomFailed(int16_t returnCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnJoinRoomFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, returnCode, message);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.ConnectAndJoin.OnLeftRoom
void Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnLeftRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.ConnectAndJoin.OnConnected
void Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnConnected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnConnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.ConnectAndJoin.OnConnectedToMaster
void Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnConnectedToMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnConnectedToMaster");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.ConnectAndJoin.OnDisconnected
void Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnDisconnected(::Photon::Realtime::DisconnectCause cause) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnDisconnected");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cause);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.ConnectAndJoin.OnRegionListReceived
void Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnRegionListReceived(::Photon::Realtime::RegionHandler* regionHandler) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnRegionListReceived");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, regionHandler);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.ConnectAndJoin.OnCustomAuthenticationResponse
void Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnCustomAuthenticationResponse(::System::Collections::Generic::Dictionary_2<::StringW, ::Il2CppObject*>* data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnCustomAuthenticationResponse");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, data);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.ConnectAndJoin.OnCustomAuthenticationFailed
void Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnCustomAuthenticationFailed(::StringW debugMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin::OnCustomAuthenticationFailed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::UtilityScripts::ConnectAndJoin*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, debugMessage);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.UtilityScripts.MicAmplifier
#include "Photon/Voice/Unity/UtilityScripts/MicAmplifier.hpp"
// Including type: Photon.Voice.Unity.UtilityScripts.MicAmplifierFloat
#include "Photon/Voice/Unity/UtilityScripts/MicAmplifierFloat.hpp"
// Including type: Photon.Voice.Unity.UtilityScripts.MicAmplifierShort
#include "Photon/Voice/Unity/UtilityScripts/MicAmplifierShort.hpp"
// Including type: Photon.Voice.Unity.PhotonVoiceCreatedParams
#include "Photon/Voice/Unity/PhotonVoiceCreatedParams.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single boostValue
[[deprecated("Use field access instead!")]] float& Photon::Voice::Unity::UtilityScripts::MicAmplifier::dyn_boostValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifier::dyn_boostValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "boostValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single amplificationFactor
[[deprecated("Use field access instead!")]] float& Photon::Voice::Unity::UtilityScripts::MicAmplifier::dyn_amplificationFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifier::dyn_amplificationFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "amplificationFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.UtilityScripts.MicAmplifierFloat floatProcessor
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat*& Photon::Voice::Unity::UtilityScripts::MicAmplifier::dyn_floatProcessor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifier::dyn_floatProcessor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "floatProcessor"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.UtilityScripts.MicAmplifierShort shortProcessor
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::UtilityScripts::MicAmplifierShort*& Photon::Voice::Unity::UtilityScripts::MicAmplifier::dyn_shortProcessor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifier::dyn_shortProcessor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shortProcessor"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::UtilityScripts::MicAmplifierShort**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifier.get_AmplificationFactor
float Photon::Voice::Unity::UtilityScripts::MicAmplifier::get_AmplificationFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifier::get_AmplificationFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AmplificationFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifier.set_AmplificationFactor
void Photon::Voice::Unity::UtilityScripts::MicAmplifier::set_AmplificationFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifier::set_AmplificationFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AmplificationFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifier.get_BoostValue
float Photon::Voice::Unity::UtilityScripts::MicAmplifier::get_BoostValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifier::get_BoostValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BoostValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifier.set_BoostValue
void Photon::Voice::Unity::UtilityScripts::MicAmplifier::set_BoostValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifier::set_BoostValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BoostValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifier.OnEnable
void Photon::Voice::Unity::UtilityScripts::MicAmplifier::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifier::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifier.OnDisable
void Photon::Voice::Unity::UtilityScripts::MicAmplifier::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifier::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifier.PhotonVoiceCreated
void Photon::Voice::Unity::UtilityScripts::MicAmplifier::PhotonVoiceCreated(::Photon::Voice::Unity::PhotonVoiceCreatedParams* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifier::PhotonVoiceCreated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PhotonVoiceCreated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.UtilityScripts.MicAmplifierFloat
#include "Photon/Voice/Unity/UtilityScripts/MicAmplifierFloat.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Single <AmplificationFactor>k__BackingField
[[deprecated("Use field access instead!")]] float& Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::dyn_$AmplificationFactor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::dyn_$AmplificationFactor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AmplificationFactor>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <BoostValue>k__BackingField
[[deprecated("Use field access instead!")]] float& Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::dyn_$BoostValue$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::dyn_$BoostValue$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BoostValue>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <MaxBefore>k__BackingField
[[deprecated("Use field access instead!")]] float& Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::dyn_$MaxBefore$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::dyn_$MaxBefore$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MaxBefore>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <MaxAfter>k__BackingField
[[deprecated("Use field access instead!")]] float& Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::dyn_$MaxAfter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::dyn_$MaxAfter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MaxAfter>k__BackingField"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Disabled>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::dyn_$Disabled$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::dyn_$Disabled$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Disabled>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifierFloat.get_AmplificationFactor
float Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::get_AmplificationFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::get_AmplificationFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AmplificationFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifierFloat.set_AmplificationFactor
void Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::set_AmplificationFactor(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::set_AmplificationFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AmplificationFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifierFloat.get_BoostValue
float Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::get_BoostValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::get_BoostValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BoostValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifierFloat.set_BoostValue
void Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::set_BoostValue(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::set_BoostValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BoostValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifierFloat.get_MaxBefore
float Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::get_MaxBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::get_MaxBefore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxBefore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifierFloat.set_MaxBefore
void Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::set_MaxBefore(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::set_MaxBefore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxBefore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifierFloat.get_MaxAfter
float Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::get_MaxAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::get_MaxAfter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxAfter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifierFloat.set_MaxAfter
void Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::set_MaxAfter(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::set_MaxAfter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxAfter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifierFloat.get_Disabled
bool Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::get_Disabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Disabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifierFloat.set_Disabled
void Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::set_Disabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::set_Disabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Disabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifierFloat.Process
::ArrayW<float> Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::Process(::ArrayW<float> buf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::Process");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method, buf);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifierFloat.Dispose
void Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::UtilityScripts::MicAmplifierFloat*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.UtilityScripts.MicAmplifierShort
#include "Photon/Voice/Unity/UtilityScripts/MicAmplifierShort.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int16 <AmplificationFactor>k__BackingField
[[deprecated("Use field access instead!")]] int16_t& Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::dyn_$AmplificationFactor$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::dyn_$AmplificationFactor$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<AmplificationFactor>k__BackingField"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int16 <BoostValue>k__BackingField
[[deprecated("Use field access instead!")]] int16_t& Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::dyn_$BoostValue$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::dyn_$BoostValue$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<BoostValue>k__BackingField"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int16 <MaxBefore>k__BackingField
[[deprecated("Use field access instead!")]] int16_t& Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::dyn_$MaxBefore$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::dyn_$MaxBefore$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MaxBefore>k__BackingField"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int16 <MaxAfter>k__BackingField
[[deprecated("Use field access instead!")]] int16_t& Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::dyn_$MaxAfter$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::dyn_$MaxAfter$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<MaxAfter>k__BackingField"))->offset;
  return *reinterpret_cast<int16_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean <Disabled>k__BackingField
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::dyn_$Disabled$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::dyn_$Disabled$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<Disabled>k__BackingField"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifierShort.get_AmplificationFactor
int16_t Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::get_AmplificationFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::get_AmplificationFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AmplificationFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifierShort.set_AmplificationFactor
void Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::set_AmplificationFactor(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::set_AmplificationFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AmplificationFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifierShort.get_BoostValue
int16_t Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::get_BoostValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::get_BoostValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_BoostValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifierShort.set_BoostValue
void Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::set_BoostValue(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::set_BoostValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_BoostValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifierShort.get_MaxBefore
int16_t Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::get_MaxBefore() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::get_MaxBefore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxBefore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifierShort.set_MaxBefore
void Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::set_MaxBefore(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::set_MaxBefore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxBefore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifierShort.get_MaxAfter
int16_t Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::get_MaxAfter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::get_MaxAfter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_MaxAfter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int16_t, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifierShort.set_MaxAfter
void Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::set_MaxAfter(int16_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::set_MaxAfter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_MaxAfter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifierShort.get_Disabled
bool Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::get_Disabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::get_Disabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Disabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifierShort.set_Disabled
void Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::set_Disabled(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::set_Disabled");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Disabled", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifierShort.Process
::ArrayW<int16_t> Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::Process(::ArrayW<int16_t> buf) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::Process");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::UtilityScripts::MicAmplifierShort*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<int16_t>, false>(this, ___internal__method, buf);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicAmplifierShort.Dispose
void Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicAmplifierShort::Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::UtilityScripts::MicAmplifierShort*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Photon.Voice.Unity.UtilityScripts.MicrophonePermission
#include "Photon/Voice/Unity/UtilityScripts/MicrophonePermission.hpp"
// Including type: Photon.Voice.Unity.Recorder
#include "Photon/Voice/Unity/Recorder.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// [CompilerGeneratedAttribute] Offset: 0xAB607C
// Autogenerated static field getter
// Get static field: static private System.Action`1<System.Boolean> MicrophonePermissionCallback
::System::Action_1<bool>* Photon::Voice::Unity::UtilityScripts::MicrophonePermission::_get_MicrophonePermissionCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicrophonePermission::_get_MicrophonePermissionCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Action_1<bool>*>("Photon.Voice.Unity.UtilityScripts", "MicrophonePermission", "MicrophonePermissionCallback"));
}
// Autogenerated static field setter
// Set static field: static private System.Action`1<System.Boolean> MicrophonePermissionCallback
void Photon::Voice::Unity::UtilityScripts::MicrophonePermission::_set_MicrophonePermissionCallback(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicrophonePermission::_set_MicrophonePermissionCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Photon.Voice.Unity.UtilityScripts", "MicrophonePermission", "MicrophonePermissionCallback", value));
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.Unity.Recorder recorder
[[deprecated("Use field access instead!")]] ::Photon::Voice::Unity::Recorder*& Photon::Voice::Unity::UtilityScripts::MicrophonePermission::dyn_recorder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicrophonePermission::dyn_recorder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "recorder"))->offset;
  return *reinterpret_cast<::Photon::Voice::Unity::Recorder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isRequesting
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::UtilityScripts::MicrophonePermission::dyn_isRequesting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicrophonePermission::dyn_isRequesting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRequesting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean hasPermission
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::UtilityScripts::MicrophonePermission::dyn_hasPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicrophonePermission::dyn_hasPermission");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasPermission"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean autoStart
[[deprecated("Use field access instead!")]] bool& Photon::Voice::Unity::UtilityScripts::MicrophonePermission::dyn_autoStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicrophonePermission::dyn_autoStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "autoStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicrophonePermission.add_MicrophonePermissionCallback
void Photon::Voice::Unity::UtilityScripts::MicrophonePermission::add_MicrophonePermissionCallback(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicrophonePermission::add_MicrophonePermissionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice.Unity.UtilityScripts", "MicrophonePermission", "add_MicrophonePermissionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicrophonePermission.remove_MicrophonePermissionCallback
void Photon::Voice::Unity::UtilityScripts::MicrophonePermission::remove_MicrophonePermissionCallback(::System::Action_1<bool>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicrophonePermission::remove_MicrophonePermissionCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Photon.Voice.Unity.UtilityScripts", "MicrophonePermission", "remove_MicrophonePermissionCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicrophonePermission.get_HasPermission
bool Photon::Voice::Unity::UtilityScripts::MicrophonePermission::get_HasPermission() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicrophonePermission::get_HasPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_HasPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicrophonePermission.set_HasPermission
void Photon::Voice::Unity::UtilityScripts::MicrophonePermission::set_HasPermission(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicrophonePermission::set_HasPermission");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_HasPermission", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicrophonePermission.InitVoice
void Photon::Voice::Unity::UtilityScripts::MicrophonePermission::InitVoice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicrophonePermission::InitVoice");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitVoice", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicrophonePermission.OnApplicationFocus
void Photon::Voice::Unity::UtilityScripts::MicrophonePermission::OnApplicationFocus(bool focus) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicrophonePermission::OnApplicationFocus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnApplicationFocus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(focus)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, focus);
}
// Autogenerated method: Photon.Voice.Unity.UtilityScripts.MicrophonePermission.Awake
void Photon::Voice::Unity::UtilityScripts::MicrophonePermission::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Photon::Voice::Unity::UtilityScripts::MicrophonePermission::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Voice::Unity::VoiceComponent*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
