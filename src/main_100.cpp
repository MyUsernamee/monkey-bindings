// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagationMaterial/Point
#include "GlobalNamespace/ONSPPropagationMaterial_Point.hpp"
// Including type: UnityEngine.Vector2
#include "UnityEngine/Vector2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single frequency
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPPropagationMaterial::Point::dyn_frequency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Point::dyn_frequency");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frequency"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single data
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPPropagationMaterial::Point::dyn_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Point::dyn_data");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "data"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagationMaterial/Spectrum
#include "GlobalNamespace/ONSPPropagationMaterial_Spectrum.hpp"
// Including type: ONSPPropagationMaterial/Spectrum/<>c
#include "GlobalNamespace/ONSPPropagationMaterial_Spectrum_--c.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: ONSPPropagationMaterial/Point
#include "GlobalNamespace/ONSPPropagationMaterial_Point.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 selection
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ONSPPropagationMaterial::Spectrum::dyn_selection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::dyn_selection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selection"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<ONSPPropagationMaterial/Point> points
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GlobalNamespace::ONSPPropagationMaterial::Point*>*& GlobalNamespace::ONSPPropagationMaterial::Spectrum::dyn_points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::dyn_points");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "points"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GlobalNamespace::ONSPPropagationMaterial::Point*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagationMaterial/Spectrum.get_Item
float GlobalNamespace::ONSPPropagationMaterial::Spectrum::get_Item(float f) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(f)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, f);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagationMaterial/Spectrum/<>c
#include "GlobalNamespace/ONSPPropagationMaterial_Spectrum_--c.hpp"
// Including type: System.Func`2
#include "System/Func_2.hpp"
// Including type: ONSPPropagationMaterial/Point
#include "GlobalNamespace/ONSPPropagationMaterial_Point.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly ONSPPropagationMaterial/Spectrum/<>c <>9
::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c* GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c*>("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly ONSPPropagationMaterial/Spectrum/<>c <>9
void GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9(::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ONSPPropagationMaterial/Point,System.Single> <>9__3_0
::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>* GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9__3_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9__3_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>*>("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9__3_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ONSPPropagationMaterial/Point,System.Single> <>9__3_0
void GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9__3_0(::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9__3_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9__3_0", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Func`2<ONSPPropagationMaterial/Point,System.Single> <>9__3_1
::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>* GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9__3_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_get_$$9__3_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>*>("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9__3_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Func`2<ONSPPropagationMaterial/Point,System.Single> <>9__3_1
void GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9__3_1(::System::Func_2<::GlobalNamespace::ONSPPropagationMaterial::Point*, float>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_set_$$9__3_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "ONSPPropagationMaterial/Spectrum/<>c", "<>9__3_1", value)));
}
// Autogenerated method: ONSPPropagationMaterial/Spectrum/<>c..cctor
void GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPPropagationMaterial/Spectrum/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: ONSPPropagationMaterial/Spectrum/<>c.<get_Item>b__3_0
float GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::$get_Item$b__3_0(::GlobalNamespace::ONSPPropagationMaterial::Point* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::<get_Item>b__3_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_Item>b__3_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, p);
}
// Autogenerated method: ONSPPropagationMaterial/Spectrum/<>c.<get_Item>b__3_1
float GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::$get_Item$b__3_1(::GlobalNamespace::ONSPPropagationMaterial::Point* p) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationMaterial::Spectrum::$$c::<get_Item>b__3_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<get_Item>b__3_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(p)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, p);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPPropagationSettings
#include "GlobalNamespace/ONSPPropagationSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single quality
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPPropagationSettings::dyn_quality() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationSettings::dyn_quality");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "quality"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPPropagationSettings.Update
void GlobalNamespace::ONSPPropagationSettings::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPPropagationSettings::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPSettings
#include "GlobalNamespace/ONSPSettings.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private ONSPSettings instance
::GlobalNamespace::ONSPSettings* GlobalNamespace::ONSPSettings::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPSettings::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ONSPSettings*>("", "ONSPSettings", "instance"));
}
// Autogenerated static field setter
// Set static field: static private ONSPSettings instance
void GlobalNamespace::ONSPSettings::_set_instance(::GlobalNamespace::ONSPSettings* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPSettings::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPSettings", "instance", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 voiceLimit
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ONSPSettings::dyn_voiceLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPSettings::dyn_voiceLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "voiceLimit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPSettings.get_Instance
::GlobalNamespace::ONSPSettings* GlobalNamespace::ONSPSettings::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPSettings::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPSettings", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::ONSPSettings*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPVersion
#include "GlobalNamespace/ONSPVersion.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public System.String strONSPS
::StringW GlobalNamespace::ONSPVersion::_get_strONSPS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::_get_strONSPS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "ONSPVersion", "strONSPS"));
}
// Autogenerated static field setter
// Set static field: static public System.String strONSPS
void GlobalNamespace::ONSPVersion::_set_strONSPS(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::_set_strONSPS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPVersion", "strONSPS", value));
}
// Autogenerated method: ONSPVersion.ONSP_GetVersion
void GlobalNamespace::ONSPVersion::ONSP_GetVersion(ByRef<int> Major, ByRef<int> Minor, ByRef<int> Patch) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::ONSP_GetVersion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPVersion", "ONSP_GetVersion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(Major), ::il2cpp_utils::ExtractType(Minor), ::il2cpp_utils::ExtractType(Patch)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(Major), byref(Minor), byref(Patch));
}
// Autogenerated method: ONSPVersion.Awake
void GlobalNamespace::ONSPVersion::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPVersion.Start
void GlobalNamespace::ONSPVersion::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPVersion.Update
void GlobalNamespace::ONSPVersion::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPVersion::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OculusSpatializerUnity
#include "GlobalNamespace/OculusSpatializerUnity.hpp"
// Including type: OculusSpatializerUnity/AudioRaycastCallback
#include "GlobalNamespace/OculusSpatializerUnity_AudioRaycastCallback.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: System.String
#include "System/String.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 HIT_COUNT
int GlobalNamespace::OculusSpatializerUnity::_get_HIT_COUNT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_get_HIT_COUNT");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("", "OculusSpatializerUnity", "HIT_COUNT"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 HIT_COUNT
void GlobalNamespace::OculusSpatializerUnity::_set_HIT_COUNT(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_set_HIT_COUNT");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusSpatializerUnity", "HIT_COUNT", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.LayerMask gLayerMask
::UnityEngine::LayerMask GlobalNamespace::OculusSpatializerUnity::_get_gLayerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_get_gLayerMask");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::LayerMask>("", "OculusSpatializerUnity", "gLayerMask"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.LayerMask gLayerMask
void GlobalNamespace::OculusSpatializerUnity::_set_gLayerMask(::UnityEngine::LayerMask value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_set_gLayerMask");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusSpatializerUnity", "gLayerMask", value));
}
// Autogenerated static field getter
// Get static field: static private System.String strOSP
::StringW GlobalNamespace::OculusSpatializerUnity::_get_strOSP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_get_strOSP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("", "OculusSpatializerUnity", "strOSP"));
}
// Autogenerated static field setter
// Set static field: static private System.String strOSP
void GlobalNamespace::OculusSpatializerUnity::_set_strOSP(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::_set_strOSP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "OculusSpatializerUnity", "strOSP", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask layerMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GlobalNamespace::OculusSpatializerUnity::dyn_layerMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_layerMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "layerMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean visualizeRoom
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OculusSpatializerUnity::dyn_visualizeRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_visualizeRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "visualizeRoom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean roomVisualizationInitialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OculusSpatializerUnity::dyn_roomVisualizationInitialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_roomVisualizationInitialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomVisualizationInitialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 raysPerSecond
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusSpatializerUnity::dyn_raysPerSecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_raysPerSecond");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raysPerSecond"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single roomInterpSpeed
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OculusSpatializerUnity::dyn_roomInterpSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_roomInterpSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomInterpSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxWallDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OculusSpatializerUnity::dyn_maxWallDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_maxWallDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxWallDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 rayCacheSize
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OculusSpatializerUnity::dyn_rayCacheSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_rayCacheSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rayCacheSize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean dynamicReflectionsEnabled
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OculusSpatializerUnity::dyn_dynamicReflectionsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_dynamicReflectionsEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dynamicReflectionsEnabled"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single particleSize
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OculusSpatializerUnity::dyn_particleSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_particleSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particleSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single particleOffset
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OculusSpatializerUnity::dyn_particleOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_particleOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particleOffset"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject room
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::OculusSpatializerUnity::dyn_room() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_room");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "room"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer[] wallRenderer
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Renderer*>& GlobalNamespace::OculusSpatializerUnity::dyn_wallRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_wallRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wallRenderer"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Renderer*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] dims
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::OculusSpatializerUnity::dyn_dims() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_dims");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dims"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] coefs
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::OculusSpatializerUnity::dyn_coefs() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_coefs");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "coefs"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] points
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::OculusSpatializerUnity::dyn_points() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_points");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "points"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] normals
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::OculusSpatializerUnity::dyn_normals() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_normals");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "normals"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem sys
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& GlobalNamespace::OculusSpatializerUnity::dyn_sys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_sys");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sys"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.ParticleSystem/Particle[] particles
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::ParticleSystem::Particle>& GlobalNamespace::OculusSpatializerUnity::dyn_particles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::dyn_particles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particles"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::ParticleSystem::Particle>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OculusSpatializerUnity.swapHandedness
::UnityEngine::Vector3 GlobalNamespace::OculusSpatializerUnity::swapHandedness(::UnityEngine::Vector3 vec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::swapHandedness");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "swapHandedness", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vec)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, vec);
}
// Autogenerated method: OculusSpatializerUnity.AudioRaycast
void GlobalNamespace::OculusSpatializerUnity::AudioRaycast(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::Vector3> point, ByRef<::UnityEngine::Vector3> normal, ::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::AudioRaycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "AudioRaycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(origin), ::il2cpp_utils::ExtractType(direction), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractType(data)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, origin, direction, byref(point), byref(normal), data);
}
// Autogenerated method: OculusSpatializerUnity.Start
void GlobalNamespace::OculusSpatializerUnity::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSpatializerUnity.OnDestroy
void GlobalNamespace::OculusSpatializerUnity::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSpatializerUnity.Update
void GlobalNamespace::OculusSpatializerUnity::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSpatializerUnity.inititalizeRoomVisualization
void GlobalNamespace::OculusSpatializerUnity::inititalizeRoomVisualization() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::inititalizeRoomVisualization");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "inititalizeRoomVisualization", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_AssignRaycastCallback
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_AssignRaycastCallback(::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback* callback, ::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_AssignRaycastCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_AssignRaycastCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, data);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_AssignRaycastCallback
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_AssignRaycastCallback(::System::IntPtr callback, ::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_AssignRaycastCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_AssignRaycastCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(data)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, data);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_SetDynamicRoomRaysPerSecond
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomRaysPerSecond(int RaysPerSecond) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomRaysPerSecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_SetDynamicRoomRaysPerSecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(RaysPerSecond)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, RaysPerSecond);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_SetDynamicRoomInterpSpeed
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomInterpSpeed(float InterpSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomInterpSpeed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_SetDynamicRoomInterpSpeed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(InterpSpeed)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, InterpSpeed);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_SetDynamicRoomMaxWallDistance
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomMaxWallDistance(float MaxWallDistance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomMaxWallDistance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_SetDynamicRoomMaxWallDistance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(MaxWallDistance)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, MaxWallDistance);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_SetDynamicRoomRaysRayCacheSize
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomRaysRayCacheSize(int RayCacheSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_SetDynamicRoomRaysRayCacheSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_SetDynamicRoomRaysRayCacheSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(RayCacheSize)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, RayCacheSize);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_UpdateRoomModel
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_UpdateRoomModel(float wetLevel) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_UpdateRoomModel");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_UpdateRoomModel", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(wetLevel)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, wetLevel);
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_GetRoomDimensions
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_GetRoomDimensions(::ArrayW<float> roomDimensions, ::ArrayW<float> reflectionsCoefs, ByRef<::UnityEngine::Vector3> position) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_GetRoomDimensions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_GetRoomDimensions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(roomDimensions), ::il2cpp_utils::ExtractType(reflectionsCoefs), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>()})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, roomDimensions, reflectionsCoefs, byref(position));
}
// Autogenerated method: OculusSpatializerUnity.OSP_Unity_GetRaycastHits
int GlobalNamespace::OculusSpatializerUnity::OSP_Unity_GetRaycastHits(::ArrayW<::UnityEngine::Vector3> points, ::ArrayW<::UnityEngine::Vector3> normals, int length) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::OSP_Unity_GetRaycastHits");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", "OSP_Unity_GetRaycastHits", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(points), ::il2cpp_utils::ExtractType(normals), ::il2cpp_utils::ExtractType(length)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, points, normals, length);
}
// Autogenerated method: OculusSpatializerUnity..cctor
void GlobalNamespace::OculusSpatializerUnity::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "OculusSpatializerUnity", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: OculusSpatializerUnity/AudioRaycastCallback
#include "GlobalNamespace/OculusSpatializerUnity_AudioRaycastCallback.hpp"
// Including type: UnityEngine.Vector3
#include "UnityEngine/Vector3.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: OculusSpatializerUnity/AudioRaycastCallback.Invoke
void GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::Invoke(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::Vector3> point, ByRef<::UnityEngine::Vector3> normal, ::System::IntPtr data) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, origin, direction, byref(point), byref(normal), data);
}
// Autogenerated method: OculusSpatializerUnity/AudioRaycastCallback.BeginInvoke
::System::IAsyncResult* GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::BeginInvoke(::UnityEngine::Vector3 origin, ::UnityEngine::Vector3 direction, ByRef<::UnityEngine::Vector3> point, ByRef<::UnityEngine::Vector3> normal, ::System::IntPtr data, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, origin, direction, byref(point), byref(normal), data, callback, object);
}
// Autogenerated method: OculusSpatializerUnity/AudioRaycastCallback.EndInvoke
void GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::EndInvoke(ByRef<::UnityEngine::Vector3> point, ByRef<::UnityEngine::Vector3> normal, ::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::OculusSpatializerUnity::AudioRaycastCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(point), byref(normal), result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ONSPReflectionZone
#include "GlobalNamespace/ONSPReflectionZone.hpp"
// Including type: UnityEngine.Audio.AudioMixerSnapshot
#include "UnityEngine/Audio/AudioMixerSnapshot.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.Stack`1<ReflectionSnapshot> snapshotList
::System::Collections::Generic::Stack_1<::GlobalNamespace::ReflectionSnapshot>* GlobalNamespace::ONSPReflectionZone::_get_snapshotList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::_get_snapshotList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::Stack_1<::GlobalNamespace::ReflectionSnapshot>*>("", "ONSPReflectionZone", "snapshotList"));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.Stack`1<ReflectionSnapshot> snapshotList
void GlobalNamespace::ONSPReflectionZone::_set_snapshotList(::System::Collections::Generic::Stack_1<::GlobalNamespace::ReflectionSnapshot>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::_set_snapshotList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPReflectionZone", "snapshotList", value));
}
// Autogenerated static field getter
// Get static field: static private ReflectionSnapshot currentSnapshot
::GlobalNamespace::ReflectionSnapshot GlobalNamespace::ONSPReflectionZone::_get_currentSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::_get_currentSnapshot");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ReflectionSnapshot>("", "ONSPReflectionZone", "currentSnapshot"));
}
// Autogenerated static field setter
// Set static field: static private ReflectionSnapshot currentSnapshot
void GlobalNamespace::ONSPReflectionZone::_set_currentSnapshot(::GlobalNamespace::ReflectionSnapshot value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::_set_currentSnapshot");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ONSPReflectionZone", "currentSnapshot", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Audio.AudioMixerSnapshot mixerSnapshot
[[deprecated("Use field access instead!")]] ::UnityEngine::Audio::AudioMixerSnapshot*& GlobalNamespace::ONSPReflectionZone::dyn_mixerSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::dyn_mixerSnapshot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mixerSnapshot"))->offset;
  return *reinterpret_cast<::UnityEngine::Audio::AudioMixerSnapshot**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fadeTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ONSPReflectionZone::dyn_fadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::dyn_fadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ONSPReflectionZone.Start
void GlobalNamespace::ONSPReflectionZone::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPReflectionZone.Update
void GlobalNamespace::ONSPReflectionZone::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPReflectionZone.OnTriggerEnter
void GlobalNamespace::ONSPReflectionZone::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: ONSPReflectionZone.OnTriggerExit
void GlobalNamespace::ONSPReflectionZone::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: ONSPReflectionZone.CheckForAudioListener
bool GlobalNamespace::ONSPReflectionZone::CheckForAudioListener(::UnityEngine::GameObject* gameObject) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::CheckForAudioListener");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForAudioListener", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(gameObject)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, gameObject);
}
// Autogenerated method: ONSPReflectionZone.PushCurrentMixerShapshot
void GlobalNamespace::ONSPReflectionZone::PushCurrentMixerShapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::PushCurrentMixerShapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PushCurrentMixerShapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPReflectionZone.PopCurrentMixerSnapshot
void GlobalNamespace::ONSPReflectionZone::PopCurrentMixerSnapshot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::PopCurrentMixerSnapshot");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PopCurrentMixerSnapshot", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPReflectionZone.SetReflectionValues
void GlobalNamespace::ONSPReflectionZone::SetReflectionValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::SetReflectionValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReflectionValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ONSPReflectionZone.SetReflectionValues
void GlobalNamespace::ONSPReflectionZone::SetReflectionValues(ByRef<::GlobalNamespace::ReflectionSnapshot> mss) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::SetReflectionValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetReflectionValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(mss)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(mss));
}
// Autogenerated method: ONSPReflectionZone..cctor
void GlobalNamespace::ONSPReflectionZone::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ONSPReflectionZone::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "ONSPReflectionZone", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TempMask
#include "GlobalNamespace/TempMask.hpp"
// Including type: TempMask/<MaskOnDuringDate>d__10
#include "GlobalNamespace/TempMask_-MaskOnDuringDate-d__10.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 year
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TempMask::dyn_year() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::dyn_year");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "year"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 month
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TempMask::dyn_month() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::dyn_month");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "month"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 day
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TempMask::dyn_day() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::dyn_day");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "day"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime dayOn
[[deprecated("Use field access instead!")]] ::System::DateTime& GlobalNamespace::TempMask::dyn_dayOn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::dyn_dayOn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dayOn"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer myRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::TempMask::dyn_myRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::dyn_myRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.DateTime myDate
[[deprecated("Use field access instead!")]] ::System::DateTime& GlobalNamespace::TempMask::dyn_myDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::dyn_myDate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myDate"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRRig myRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::TempMask::dyn_myRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::dyn_myRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TempMask.Awake
void GlobalNamespace::TempMask::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TempMask.OnEnable
void GlobalNamespace::TempMask::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TempMask.OnDisable
void GlobalNamespace::TempMask::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TempMask.MaskOnDuringDate
::System::Collections::IEnumerator* GlobalNamespace::TempMask::MaskOnDuringDate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::MaskOnDuringDate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MaskOnDuringDate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: TempMask/<MaskOnDuringDate>d__10
#include "GlobalNamespace/TempMask_-MaskOnDuringDate-d__10.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public TempMask <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::TempMask*& GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::TempMask**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TempMask/<MaskOnDuringDate>d__10.System.IDisposable.Dispose
void GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TempMask::$MaskOnDuringDate$d__10*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TempMask/<MaskOnDuringDate>d__10.MoveNext
bool GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TempMask::$MaskOnDuringDate$d__10*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: TempMask/<MaskOnDuringDate>d__10.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TempMask::$MaskOnDuringDate$d__10*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: TempMask/<MaskOnDuringDate>d__10.System.Collections.IEnumerator.Reset
void GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TempMask::$MaskOnDuringDate$d__10*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TempMask/<MaskOnDuringDate>d__10.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TempMask::$MaskOnDuringDate$d__10::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::TempMask::$MaskOnDuringDate$d__10*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CalibrationCube
#include "GlobalNamespace/CalibrationCube.hpp"
// Including type: PrimaryButtonWatcher
#include "GlobalNamespace/PrimaryButtonWatcher.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PrimaryButtonWatcher watcher
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PrimaryButtonWatcher*& GlobalNamespace::CalibrationCube::dyn_watcher() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CalibrationCube::dyn_watcher");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "watcher"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PrimaryButtonWatcher**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject rightController
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::CalibrationCube::dyn_rightController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CalibrationCube::dyn_rightController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightController"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject leftController
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::CalibrationCube::dyn_leftController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CalibrationCube::dyn_leftController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftController"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject playerBody
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::CalibrationCube::dyn_playerBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CalibrationCube::dyn_playerBody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerBody"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single calibratedLength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CalibrationCube::dyn_calibratedLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CalibrationCube::dyn_calibratedLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calibratedLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastCalibratedLength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CalibrationCube::dyn_lastCalibratedLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CalibrationCube::dyn_lastCalibratedLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastCalibratedLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minLength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CalibrationCube::dyn_minLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CalibrationCube::dyn_minLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxLength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CalibrationCube::dyn_maxLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CalibrationCube::dyn_maxLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single baseLength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::CalibrationCube::dyn_baseLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CalibrationCube::dyn_baseLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] calibrationPresets
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::CalibrationCube::dyn_calibrationPresets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CalibrationCube::dyn_calibrationPresets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calibrationPresets"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] calibrationPresetsTest
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::CalibrationCube::dyn_calibrationPresetsTest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CalibrationCube::dyn_calibrationPresetsTest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calibrationPresetsTest"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] calibrationPresetsTest2
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::CalibrationCube::dyn_calibrationPresetsTest2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CalibrationCube::dyn_calibrationPresetsTest2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calibrationPresetsTest2"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] calibrationPresetsTest3
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::CalibrationCube::dyn_calibrationPresetsTest3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CalibrationCube::dyn_calibrationPresetsTest3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calibrationPresetsTest3"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String[] calibrationPresetsTest4
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GlobalNamespace::CalibrationCube::dyn_calibrationPresetsTest4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CalibrationCube::dyn_calibrationPresetsTest4");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calibrationPresetsTest4"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String outputstring
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CalibrationCube::dyn_outputstring() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CalibrationCube::dyn_outputstring");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outputstring"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> stringList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GlobalNamespace::CalibrationCube::dyn_stringList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CalibrationCube::dyn_stringList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stringList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CalibrationCube.Awake
void GlobalNamespace::CalibrationCube::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CalibrationCube::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CalibrationCube.Start
void GlobalNamespace::CalibrationCube::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CalibrationCube::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CalibrationCube.OnTriggerEnter
void GlobalNamespace::CalibrationCube::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CalibrationCube::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: CalibrationCube.OnTriggerExit
void GlobalNamespace::CalibrationCube::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CalibrationCube::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: CalibrationCube.RecalibrateSize
void GlobalNamespace::CalibrationCube::RecalibrateSize(bool pressed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CalibrationCube::RecalibrateSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RecalibrateSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pressed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pressed);
}
// Autogenerated method: CalibrationCube.OnCollisionEnter
void GlobalNamespace::CalibrationCube::OnCollisionEnter(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CalibrationCube::OnCollisionEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated method: CalibrationCube.OnCollisionExit
void GlobalNamespace::CalibrationCube::OnCollisionExit(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CalibrationCube::OnCollisionExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PuppetFollow
#include "GlobalNamespace/PuppetFollow.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform sourceTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::PuppetFollow::dyn_sourceTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PuppetFollow::dyn_sourceTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform sourceBase
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::PuppetFollow::dyn_sourceBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PuppetFollow::dyn_sourceBase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sourceBase"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform puppetBase
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::PuppetFollow::dyn_puppetBase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PuppetFollow::dyn_puppetBase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "puppetBase"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PuppetFollow.FixedUpdate
void GlobalNamespace::PuppetFollow::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PuppetFollow::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TransformReset
#include "GlobalNamespace/TransformReset.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private TransformReset/OriginalGameObjectTransform[] transformList
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::TransformReset::OriginalGameObjectTransform>& GlobalNamespace::TransformReset::dyn_transformList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformReset::dyn_transformList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transformList"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::TransformReset::OriginalGameObjectTransform>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private TransformReset/OriginalGameObjectTransform[] tempTransformList
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::TransformReset::OriginalGameObjectTransform>& GlobalNamespace::TransformReset::dyn_tempTransformList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformReset::dyn_tempTransformList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempTransformList"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::TransformReset::OriginalGameObjectTransform>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TransformReset.Awake
void GlobalNamespace::TransformReset::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformReset::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TransformReset.ReturnTransforms
void GlobalNamespace::TransformReset::ReturnTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformReset::ReturnTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReturnTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: TransformReset.SetScale
void GlobalNamespace::TransformReset::SetScale(float ratio) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformReset::SetScale");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetScale", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ratio)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ratio);
}
// Autogenerated method: TransformReset.ResetTransforms
void GlobalNamespace::TransformReset::ResetTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformReset::ResetTransforms");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ResetTransforms", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: TransformReset/OriginalGameObjectTransform
#include "GlobalNamespace/TransformReset.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Transform _thisTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::TransformReset::OriginalGameObjectTransform::dyn__thisTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformReset::OriginalGameObjectTransform::dyn__thisTransform");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_thisTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 _thisPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::TransformReset::OriginalGameObjectTransform::dyn__thisPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformReset::OriginalGameObjectTransform::dyn__thisPosition");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_thisPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion _thisRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::TransformReset::OriginalGameObjectTransform::dyn__thisRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformReset::OriginalGameObjectTransform::dyn__thisRotation");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "_thisRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: TransformReset/OriginalGameObjectTransform..ctor
GlobalNamespace::TransformReset::OriginalGameObjectTransform::OriginalGameObjectTransform(::UnityEngine::Transform* constructionTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformReset::OriginalGameObjectTransform::.ctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, ".ctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(constructionTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, constructionTransform);
}
// Autogenerated method: TransformReset/OriginalGameObjectTransform.get_thisTransform
::UnityEngine::Transform* GlobalNamespace::TransformReset::OriginalGameObjectTransform::get_thisTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformReset::OriginalGameObjectTransform::get_thisTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_thisTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Transform*, false>(this, ___internal__method);
}
// Autogenerated method: TransformReset/OriginalGameObjectTransform.set_thisTransform
void GlobalNamespace::TransformReset::OriginalGameObjectTransform::set_thisTransform(::UnityEngine::Transform* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformReset::OriginalGameObjectTransform::set_thisTransform");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_thisTransform", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TransformReset/OriginalGameObjectTransform.get_thisPosition
::UnityEngine::Vector3 GlobalNamespace::TransformReset::OriginalGameObjectTransform::get_thisPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformReset::OriginalGameObjectTransform::get_thisPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_thisPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: TransformReset/OriginalGameObjectTransform.set_thisPosition
void GlobalNamespace::TransformReset::OriginalGameObjectTransform::set_thisPosition(::UnityEngine::Vector3 value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformReset::OriginalGameObjectTransform::set_thisPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_thisPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: TransformReset/OriginalGameObjectTransform.get_thisRotation
::UnityEngine::Quaternion GlobalNamespace::TransformReset::OriginalGameObjectTransform::get_thisRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformReset::OriginalGameObjectTransform::get_thisRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_thisRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method);
}
// Autogenerated method: TransformReset/OriginalGameObjectTransform.set_thisRotation
void GlobalNamespace::TransformReset::OriginalGameObjectTransform::set_thisRotation(::UnityEngine::Quaternion value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::TransformReset::OriginalGameObjectTransform::set_thisRotation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_thisRotation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRMap
#include "GlobalNamespace/VRMap.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.XRNode vrTargetNode
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::XRNode& GlobalNamespace::VRMap::dyn_vrTargetNode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMap::dyn_vrTargetNode");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vrTargetNode"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::XRNode*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform overrideTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::VRMap::dyn_overrideTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMap::dyn_overrideTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rigTarget
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::VRMap::dyn_rigTarget() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMap::dyn_rigTarget");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigTarget"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 trackingPositionOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRMap::dyn_trackingPositionOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMap::dyn_trackingPositionOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackingPositionOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 trackingRotationOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRMap::dyn_trackingRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMap::dyn_trackingRotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trackingRotationOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform headTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::VRMap::dyn_headTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMap::dyn_headTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 syncPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRMap::dyn_syncPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMap::dyn_syncPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "syncPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion syncRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::VRMap::dyn_syncRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMap::dyn_syncRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "syncRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single calcT
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRMap::dyn_calcT() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMap::dyn_calcT");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calcT"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.InputDevice myInputDevice
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& GlobalNamespace::VRMap::dyn_myInputDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMap::dyn_myInputDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myInputDevice"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 tempPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRMap::dyn_tempPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMap::dyn_tempPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion tempRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::VRMap::dyn_tempRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMap::dyn_tempRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 tempInt
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRMap::dyn_tempInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMap::dyn_tempInt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempInt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRMap.MapOther
void GlobalNamespace::VRMap::MapOther(float lerpValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMap::MapOther");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MapOther", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(lerpValue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lerpValue);
}
// Autogenerated method: VRMap.MapMine
void GlobalNamespace::VRMap::MapMine(float ratio, ::UnityEngine::Transform* playerOffsetTransform) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMap::MapMine");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MapMine", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ratio), ::il2cpp_utils::ExtractType(playerOffsetTransform)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ratio, playerOffsetTransform);
}
// Autogenerated method: VRMap.MapOtherFinger
void GlobalNamespace::VRMap::MapOtherFinger(float handSync, float lerpValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMap::MapOtherFinger");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::VRMap*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handSync, lerpValue);
}
// Autogenerated method: VRMap.MapMyFinger
void GlobalNamespace::VRMap::MapMyFinger(float lerpValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMap::MapMyFinger");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::VRMap*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lerpValue);
}
// Autogenerated method: VRMap.LerpFinger
void GlobalNamespace::VRMap::LerpFinger(float lerpValue, bool isOther) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMap::LerpFinger");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::VRMap*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lerpValue, isOther);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRMapIndex
#include "GlobalNamespace/VRMapIndex.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.InputFeatureUsage inputAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputFeatureUsage& GlobalNamespace::VRMapIndex::dyn_inputAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapIndex::dyn_inputAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputFeatureUsage*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single triggerTouch
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRMapIndex::dyn_triggerTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapIndex::dyn_triggerTouch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "triggerTouch"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single triggerValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRMapIndex::dyn_triggerValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapIndex::dyn_triggerValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "triggerValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform fingerBone1
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::VRMapIndex::dyn_fingerBone1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapIndex::dyn_fingerBone1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fingerBone1"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform fingerBone2
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::VRMapIndex::dyn_fingerBone2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapIndex::dyn_fingerBone2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fingerBone2"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform fingerBone3
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::VRMapIndex::dyn_fingerBone3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapIndex::dyn_fingerBone3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fingerBone3"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single closedAngles
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRMapIndex::dyn_closedAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapIndex::dyn_closedAngles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closedAngles"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 closedAngle1
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRMapIndex::dyn_closedAngle1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapIndex::dyn_closedAngle1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closedAngle1"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 closedAngle2
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRMapIndex::dyn_closedAngle2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapIndex::dyn_closedAngle2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closedAngle2"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 closedAngle3
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRMapIndex::dyn_closedAngle3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapIndex::dyn_closedAngle3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closedAngle3"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 startingAngle1
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRMapIndex::dyn_startingAngle1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapIndex::dyn_startingAngle1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingAngle1"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 startingAngle2
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRMapIndex::dyn_startingAngle2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapIndex::dyn_startingAngle2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingAngle2"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 startingAngle3
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRMapIndex::dyn_startingAngle3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapIndex::dyn_startingAngle3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingAngle3"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastAngle1
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRMapIndex::dyn_lastAngle1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapIndex::dyn_lastAngle1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastAngle1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastAngle2
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRMapIndex::dyn_lastAngle2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapIndex::dyn_lastAngle2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastAngle2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastAngle3
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRMapIndex::dyn_lastAngle3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapIndex::dyn_lastAngle3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastAngle3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.InputDevice myInputDevice
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& GlobalNamespace::VRMapIndex::dyn_myInputDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapIndex::dyn_myInputDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myInputDevice"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion[] angle1Table
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Quaternion>& GlobalNamespace::VRMapIndex::dyn_angle1Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapIndex::dyn_angle1Table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angle1Table"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion[] angle2Table
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Quaternion>& GlobalNamespace::VRMapIndex::dyn_angle2Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapIndex::dyn_angle2Table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angle2Table"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion[] angle3Table
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Quaternion>& GlobalNamespace::VRMapIndex::dyn_angle3Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapIndex::dyn_angle3Table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angle3Table"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single currentAngle1
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRMapIndex::dyn_currentAngle1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapIndex::dyn_currentAngle1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentAngle1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single currentAngle2
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRMapIndex::dyn_currentAngle2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapIndex::dyn_currentAngle2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentAngle2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single currentAngle3
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRMapIndex::dyn_currentAngle3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapIndex::dyn_currentAngle3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentAngle3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 myTempInt
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRMapIndex::dyn_myTempInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapIndex::dyn_myTempInt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myTempInt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRMapIndex.MapMyFinger
void GlobalNamespace::VRMapIndex::MapMyFinger(float lerpValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapIndex::MapMyFinger");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::VRMap*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lerpValue);
}
// Autogenerated method: VRMapIndex.LerpFinger
void GlobalNamespace::VRMapIndex::LerpFinger(float lerpValue, bool isOther) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapIndex::LerpFinger");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::VRMap*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lerpValue, isOther);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRMapMiddle
#include "GlobalNamespace/VRMapMiddle.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.InputFeatureUsage inputAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputFeatureUsage& GlobalNamespace::VRMapMiddle::dyn_inputAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapMiddle::dyn_inputAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputFeatureUsage*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single gripValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRMapMiddle::dyn_gripValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapMiddle::dyn_gripValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gripValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform fingerBone1
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::VRMapMiddle::dyn_fingerBone1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapMiddle::dyn_fingerBone1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fingerBone1"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform fingerBone2
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::VRMapMiddle::dyn_fingerBone2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapMiddle::dyn_fingerBone2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fingerBone2"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform fingerBone3
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::VRMapMiddle::dyn_fingerBone3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapMiddle::dyn_fingerBone3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fingerBone3"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single closedAngles
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRMapMiddle::dyn_closedAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapMiddle::dyn_closedAngles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closedAngles"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 closedAngle1
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRMapMiddle::dyn_closedAngle1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapMiddle::dyn_closedAngle1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closedAngle1"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 closedAngle2
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRMapMiddle::dyn_closedAngle2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapMiddle::dyn_closedAngle2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closedAngle2"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 closedAngle3
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRMapMiddle::dyn_closedAngle3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapMiddle::dyn_closedAngle3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closedAngle3"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 startingAngle1
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRMapMiddle::dyn_startingAngle1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapMiddle::dyn_startingAngle1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingAngle1"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 startingAngle2
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRMapMiddle::dyn_startingAngle2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapMiddle::dyn_startingAngle2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingAngle2"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 startingAngle3
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRMapMiddle::dyn_startingAngle3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapMiddle::dyn_startingAngle3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingAngle3"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion[] angle1Table
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Quaternion>& GlobalNamespace::VRMapMiddle::dyn_angle1Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapMiddle::dyn_angle1Table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angle1Table"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion[] angle2Table
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Quaternion>& GlobalNamespace::VRMapMiddle::dyn_angle2Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapMiddle::dyn_angle2Table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angle2Table"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion[] angle3Table
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Quaternion>& GlobalNamespace::VRMapMiddle::dyn_angle3Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapMiddle::dyn_angle3Table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angle3Table"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastAngle1
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRMapMiddle::dyn_lastAngle1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapMiddle::dyn_lastAngle1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastAngle1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastAngle2
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRMapMiddle::dyn_lastAngle2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapMiddle::dyn_lastAngle2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastAngle2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastAngle3
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRMapMiddle::dyn_lastAngle3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapMiddle::dyn_lastAngle3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastAngle3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single currentAngle1
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRMapMiddle::dyn_currentAngle1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapMiddle::dyn_currentAngle1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentAngle1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single currentAngle2
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRMapMiddle::dyn_currentAngle2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapMiddle::dyn_currentAngle2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentAngle2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single currentAngle3
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRMapMiddle::dyn_currentAngle3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapMiddle::dyn_currentAngle3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentAngle3"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.InputDevice tempDevice
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& GlobalNamespace::VRMapMiddle::dyn_tempDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapMiddle::dyn_tempDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempDevice"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 myTempInt
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRMapMiddle::dyn_myTempInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapMiddle::dyn_myTempInt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myTempInt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRMapMiddle.MapMyFinger
void GlobalNamespace::VRMapMiddle::MapMyFinger(float lerpValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapMiddle::MapMyFinger");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::VRMap*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lerpValue);
}
// Autogenerated method: VRMapMiddle.LerpFinger
void GlobalNamespace::VRMapMiddle::LerpFinger(float lerpValue, bool isOther) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapMiddle::LerpFinger");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::VRMap*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lerpValue, isOther);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRMapThumb
#include "GlobalNamespace/VRMapThumb.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.XR.InputFeatureUsage inputAxis
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputFeatureUsage& GlobalNamespace::VRMapThumb::dyn_inputAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapThumb::dyn_inputAxis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inputAxis"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputFeatureUsage*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean primaryButtonTouch
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::VRMapThumb::dyn_primaryButtonTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapThumb::dyn_primaryButtonTouch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "primaryButtonTouch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean primaryButtonPress
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::VRMapThumb::dyn_primaryButtonPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapThumb::dyn_primaryButtonPress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "primaryButtonPress"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean secondaryButtonTouch
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::VRMapThumb::dyn_secondaryButtonTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapThumb::dyn_secondaryButtonTouch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secondaryButtonTouch"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean secondaryButtonPress
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::VRMapThumb::dyn_secondaryButtonPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapThumb::dyn_secondaryButtonPress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secondaryButtonPress"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform fingerBone1
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::VRMapThumb::dyn_fingerBone1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapThumb::dyn_fingerBone1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fingerBone1"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform fingerBone2
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::VRMapThumb::dyn_fingerBone2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapThumb::dyn_fingerBone2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fingerBone2"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 closedAngle1
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRMapThumb::dyn_closedAngle1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapThumb::dyn_closedAngle1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closedAngle1"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 closedAngle2
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRMapThumb::dyn_closedAngle2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapThumb::dyn_closedAngle2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "closedAngle2"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 startingAngle1
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRMapThumb::dyn_startingAngle1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapThumb::dyn_startingAngle1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingAngle1"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 startingAngle2
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRMapThumb::dyn_startingAngle2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapThumb::dyn_startingAngle2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingAngle2"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion[] angle1Table
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Quaternion>& GlobalNamespace::VRMapThumb::dyn_angle1Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapThumb::dyn_angle1Table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angle1Table"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion[] angle2Table
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Quaternion>& GlobalNamespace::VRMapThumb::dyn_angle2Table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapThumb::dyn_angle2Table");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angle2Table"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single currentAngle1
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRMapThumb::dyn_currentAngle1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapThumb::dyn_currentAngle1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentAngle1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single currentAngle2
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRMapThumb::dyn_currentAngle2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapThumb::dyn_currentAngle2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentAngle2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastAngle1
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRMapThumb::dyn_lastAngle1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapThumb::dyn_lastAngle1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastAngle1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 lastAngle2
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRMapThumb::dyn_lastAngle2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapThumb::dyn_lastAngle2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastAngle2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.InputDevice tempDevice
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& GlobalNamespace::VRMapThumb::dyn_tempDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapThumb::dyn_tempDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempDevice"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 myTempInt
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRMapThumb::dyn_myTempInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapThumb::dyn_myTempInt");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myTempInt"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRMapThumb.MapMyFinger
void GlobalNamespace::VRMapThumb::MapMyFinger(float lerpValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapThumb::MapMyFinger");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::VRMap*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lerpValue);
}
// Autogenerated method: VRMapThumb.LerpFinger
void GlobalNamespace::VRMapThumb::LerpFinger(float lerpValue, bool isOther) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRMapThumb::LerpFinger");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::VRMap*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, lerpValue, isOther);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: VRRig/<OccasionalUpdate>d__86
#include "GlobalNamespace/VRRig_-OccasionalUpdate-d__86.hpp"
// Including type: VRRig/<>c
#include "GlobalNamespace/VRRig_--c.hpp"
// Including type: VRMap
#include "GlobalNamespace/VRMap.hpp"
// Including type: VRMapThumb
#include "GlobalNamespace/VRMapThumb.hpp"
// Including type: VRMapIndex
#include "GlobalNamespace/VRMapIndex.hpp"
// Including type: VRMapMiddle
#include "GlobalNamespace/VRMapMiddle.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: UnityEngine.SkinnedMeshRenderer
#include "UnityEngine/SkinnedMeshRenderer.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
// Including type: ActionableItem
#include "GlobalNamespace/ActionableItem.hpp"
// Including type: Photon.Voice.PUN.PhotonVoiceView
#include "Photon/Voice/PUN/PhotonVoiceView.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: Photon.Pun.PhotonStream
#include "Photon/Pun/PhotonStream.hpp"
// Including type: PlayFab.ClientModels.GetUserInventoryResult
#include "PlayFab/ClientModels/GetUserInventoryResult.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VRMap head
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRMap*& GlobalNamespace::VRRig::dyn_head() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_head");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "head"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRMap rightHand
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRMap*& GlobalNamespace::VRRig::dyn_rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_rightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHand"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRMap leftHand
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRMap*& GlobalNamespace::VRRig::dyn_leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHand"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRMap**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRMapThumb leftThumb
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRMapThumb*& GlobalNamespace::VRRig::dyn_leftThumb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_leftThumb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftThumb"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRMapThumb**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRMapIndex leftIndex
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRMapIndex*& GlobalNamespace::VRRig::dyn_leftIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_leftIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftIndex"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRMapIndex**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRMapMiddle leftMiddle
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRMapMiddle*& GlobalNamespace::VRRig::dyn_leftMiddle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_leftMiddle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftMiddle"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRMapMiddle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRMapThumb rightThumb
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRMapThumb*& GlobalNamespace::VRRig::dyn_rightThumb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_rightThumb");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightThumb"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRMapThumb**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRMapIndex rightIndex
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRMapIndex*& GlobalNamespace::VRRig::dyn_rightIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_rightIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightIndex"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRMapIndex**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRMapMiddle rightMiddle
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRMapMiddle*& GlobalNamespace::VRRig::dyn_rightMiddle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_rightMiddle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightMiddle"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRMapMiddle**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isOfflineVRRig
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::VRRig::dyn_isOfflineVRRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_isOfflineVRRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isOfflineVRRig"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject mainCamera
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::VRRig::dyn_mainCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_mainCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mainCamera"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform playerOffsetTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::VRRig::dyn_playerOffsetTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_playerOffsetTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerOffsetTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 SDKIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRRig::dyn_SDKIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_SDKIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "SDKIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isMyPlayer
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::VRRig::dyn_isMyPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_isMyPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isMyPlayer"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource leftHandPlayer
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::VRRig::dyn_leftHandPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_leftHandPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandPlayer"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource rightHandPlayer
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::VRRig::dyn_rightHandPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_rightHandPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandPlayer"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource tagSound
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::VRRig::dyn_tagSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_tagSound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagSound"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single ratio
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRRig::dyn_ratio() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_ratio");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ratio"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform headConstraint
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::VRRig::dyn_headConstraint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_headConstraint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headConstraint"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 headBodyOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRRig::dyn_headBodyOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_headBodyOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headBodyOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject headMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::VRRig::dyn_headMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_headMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 syncPos
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::VRRig::dyn_syncPos() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_syncPos");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "syncPos"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion syncRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::VRRig::dyn_syncRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_syncRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "syncRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip[] clipToPlay
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioClip*>& GlobalNamespace::VRRig::dyn_clipToPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_clipToPlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clipToPlay"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip[] handTapSound
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioClip*>& GlobalNamespace::VRRig::dyn_handTapSound() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_handTapSound");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handTapSound"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentMatIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRRig::dyn_currentMatIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_currentMatIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentMatIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 setMatIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRRig::dyn_setMatIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_setMatIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setMatIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 tempMatIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRRig::dyn_tempMatIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_tempMatIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempMatIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lerpValueFingers
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRRig::dyn_lerpValueFingers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_lerpValueFingers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lerpValueFingers"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lerpValueBody
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRRig::dyn_lerpValueBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_lerpValueBody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lerpValueBody"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject backpack
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::VRRig::dyn_backpack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_backpack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "backpack"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftHandTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::VRRig::dyn_leftHandTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_leftHandTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightHandTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::VRRig::dyn_rightHandTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_rightHandTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.SkinnedMeshRenderer mainSkin
[[deprecated("Use field access instead!")]] ::UnityEngine::SkinnedMeshRenderer*& GlobalNamespace::VRRig::dyn_mainSkin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_mainSkin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mainSkin"))->offset;
  return *reinterpret_cast<::UnityEngine::SkinnedMeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Player myPlayer
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::VRRig::dyn_myPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_myPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myPlayer"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject spectatorSkin
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::VRRig::dyn_spectatorSkin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_spectatorSkin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spectatorSkin"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 handSync
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRRig::dyn_handSync() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_handSync");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handSync"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material[] materialsToChangeTo
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Material*>& GlobalNamespace::VRRig::dyn_materialsToChangeTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_materialsToChangeTo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialsToChangeTo"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Material*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single red
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRRig::dyn_red() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_red");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "red"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single green
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRRig::dyn_green() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_green");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "green"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single blue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRRig::dyn_blue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_blue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String playerName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::VRRig::dyn_playerName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_playerName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text playerText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::VRRig::dyn_playerText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_playerText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean showName
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::VRRig::dyn_showName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_showName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "showName"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] cosmetics
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::VRRig::dyn_cosmetics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_cosmetics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cosmetics"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String concatStringOfCosmeticsAllowed
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::VRRig::dyn_concatStringOfCosmeticsAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_concatStringOfCosmeticsAllowed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "concatStringOfCosmeticsAllowed"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean initializedCosmetics
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::VRRig::dyn_initializedCosmetics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_initializedCosmetics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initializedCosmetics"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String badge
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::VRRig::dyn_badge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_badge");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "badge"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String face
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::VRRig::dyn_face() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_face");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "face"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String hat
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::VRRig::dyn_hat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_hat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hat"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String leftHandHold
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::VRRig::dyn_leftHandHold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_leftHandHold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandHold"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String rightHandHold
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::VRRig::dyn_rightHandHold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_rightHandHold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandHold"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String tryOnRoomBadge
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::VRRig::dyn_tryOnRoomBadge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_tryOnRoomBadge");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tryOnRoomBadge"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String tryOnRoomFace
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::VRRig::dyn_tryOnRoomFace() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_tryOnRoomFace");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tryOnRoomFace"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String tryOnRoomHat
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::VRRig::dyn_tryOnRoomHat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_tryOnRoomHat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tryOnRoomHat"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String tryOnRoomLeftHandHold
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::VRRig::dyn_tryOnRoomLeftHandHold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_tryOnRoomLeftHandHold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tryOnRoomLeftHandHold"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String tryOnRoomRightHandHold
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::VRRig::dyn_tryOnRoomRightHandHold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_tryOnRoomRightHandHold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tryOnRoomRightHandHold"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean inTryOnRoom
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::VRRig::dyn_inTryOnRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_inTryOnRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inTryOnRoom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean muted
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::VRRig::dyn_muted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_muted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "muted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single timeSpawned
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRRig::dyn_timeSpawned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_timeSpawned");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeSpawned"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single doNotLerpConstant
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRRig::dyn_doNotLerpConstant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_doNotLerpConstant");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "doNotLerpConstant"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String tempString
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::VRRig::dyn_tempString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_tempString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Player tempPlayer
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::VRRig::dyn_tempPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_tempPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempPlayer"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRRig tempRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::VRRig::dyn_tempRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_tempRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single[] speedArray
[[deprecated("Use field access instead!")]] ::ArrayW<float>& GlobalNamespace::VRRig::dyn_speedArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_speedArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "speedArray"))->offset;
  return *reinterpret_cast<::ArrayW<float>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double handLerpValues
[[deprecated("Use field access instead!")]] double& GlobalNamespace::VRRig::dyn_handLerpValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_handLerpValues");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handLerpValues"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::VRRig::dyn_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ParticleSystem lavaParticleSystem
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& GlobalNamespace::VRRig::dyn_lavaParticleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_lavaParticleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lavaParticleSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ParticleSystem rockParticleSystem
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& GlobalNamespace::VRRig::dyn_rockParticleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_rockParticleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rockParticleSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ParticleSystem iceParticleSystem
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& GlobalNamespace::VRRig::dyn_iceParticleSystem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_iceParticleSystem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iceParticleSystem"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String tempItemName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::VRRig::dyn_tempItemName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_tempItemName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempItemName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.CosmeticsController/CosmeticItem tempItem
[[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::CosmeticItem& GlobalNamespace::VRRig::dyn_tempItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_tempItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempItem"))->offset;
  return *reinterpret_cast<::GorillaNetworking::CosmeticsController::CosmeticItem*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String tempItemId
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::VRRig::dyn_tempItemId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_tempItemId");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempItemId"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 tempItemCost
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRRig::dyn_tempItemCost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_tempItemCost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempItemCost"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 leftHandHoldableStatus
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRRig::dyn_leftHandHoldableStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_leftHandHoldableStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandHoldableStatus"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 rightHandHoldableStatus
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRRig::dyn_rightHandHoldableStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_rightHandHoldableStatus");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandHoldableStatus"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource[] musicDrums
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioSource*>& GlobalNamespace::VRRig::dyn_musicDrums() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_musicDrums");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "musicDrums"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioSource*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ActionableItem[] instrumentSelfOnly
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::ActionableItem*>& GlobalNamespace::VRRig::dyn_instrumentSelfOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_instrumentSelfOnly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "instrumentSelfOnly"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::ActionableItem*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bonkTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRRig::dyn_bonkTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_bonkTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bonkTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bonkCooldown
[[deprecated("Use field access instead!")]] float& GlobalNamespace::VRRig::dyn_bonkCooldown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_bonkCooldown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bonkCooldown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isQuitting
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::VRRig::dyn_isQuitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_isQuitting");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isQuitting"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRRig tempVRRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::VRRig::dyn_tempVRRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_tempVRRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempVRRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject huntComputer
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::VRRig::dyn_huntComputer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_huntComputer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "huntComputer"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Voice.PUN.PhotonVoiceView myPhotonVoiceView
[[deprecated("Use field access instead!")]] ::Photon::Voice::PUN::PhotonVoiceView*& GlobalNamespace::VRRig::dyn_myPhotonVoiceView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_myPhotonVoiceView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myPhotonVoiceView"))->offset;
  return *reinterpret_cast<::Photon::Voice::PUN::PhotonVoiceView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private VRRig senderRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::VRRig::dyn_senderRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::dyn_senderRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "senderRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRRig.Start
void GlobalNamespace::VRRig::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRRig.OccasionalUpdate
::System::Collections::IEnumerator* GlobalNamespace::VRRig::OccasionalUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::OccasionalUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OccasionalUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: VRRig.LateUpdate
void GlobalNamespace::VRRig::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRRig.OnDestroy
void GlobalNamespace::VRRig::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRRig.SetHeadBodyOffset
void GlobalNamespace::VRRig::SetHeadBodyOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::SetHeadBodyOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetHeadBodyOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRRig.VRRigResize
void GlobalNamespace::VRRig::VRRigResize(float ratioVar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::VRRigResize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "VRRigResize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ratioVar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, ratioVar);
}
// Autogenerated method: VRRig.ReturnHandPosition
int GlobalNamespace::VRRig::ReturnHandPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::ReturnHandPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReturnHandPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: VRRig.Photon.Pun.IPunInstantiateMagicCallback.OnPhotonInstantiate
void GlobalNamespace::VRRig::Photon_Pun_IPunInstantiateMagicCallback_OnPhotonInstantiate(::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::Photon.Pun.IPunInstantiateMagicCallback.OnPhotonInstantiate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::VRRig*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info);
}
// Autogenerated method: VRRig.Photon.Pun.IPunObservable.OnPhotonSerializeView
void GlobalNamespace::VRRig::Photon_Pun_IPunObservable_OnPhotonSerializeView(::Photon::Pun::PhotonStream* stream, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::Photon.Pun.IPunObservable.OnPhotonSerializeView");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::VRRig*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, stream, info);
}
// Autogenerated method: VRRig.ChangeMaterial
void GlobalNamespace::VRRig::ChangeMaterial(int materialIndex, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::ChangeMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(materialIndex), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, materialIndex, info);
}
// Autogenerated method: VRRig.ChangeMaterialLocal
void GlobalNamespace::VRRig::ChangeMaterialLocal(int materialIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::ChangeMaterialLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeMaterialLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(materialIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, materialIndex);
}
// Autogenerated method: VRRig.InitializeNoobMaterial
void GlobalNamespace::VRRig::InitializeNoobMaterial(float red, float green, float blue, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::InitializeNoobMaterial");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeNoobMaterial", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(red), ::il2cpp_utils::ExtractType(green), ::il2cpp_utils::ExtractType(blue), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, red, green, blue, info);
}
// Autogenerated method: VRRig.InitializeNoobMaterialLocal
void GlobalNamespace::VRRig::InitializeNoobMaterialLocal(float red, float green, float blue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::InitializeNoobMaterialLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeNoobMaterialLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(red), ::il2cpp_utils::ExtractType(green), ::il2cpp_utils::ExtractType(blue)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, red, green, blue);
}
// Autogenerated method: VRRig.NormalizeName
::StringW GlobalNamespace::VRRig::NormalizeName(bool doIt, ::StringW text) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::NormalizeName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NormalizeName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(doIt), ::il2cpp_utils::ExtractType(text)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, doIt, text);
}
// Autogenerated method: VRRig.SetJumpLimit
void GlobalNamespace::VRRig::SetJumpLimit(float maxJumpSpeed, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::SetJumpLimit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetJumpLimit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxJumpSpeed), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, maxJumpSpeed, info);
}
// Autogenerated method: VRRig.SetJumpLimitLocal
void GlobalNamespace::VRRig::SetJumpLimitLocal(float maxJumpSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::SetJumpLimitLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetJumpLimitLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(maxJumpSpeed)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, maxJumpSpeed);
}
// Autogenerated method: VRRig.SetJumpMultiplier
void GlobalNamespace::VRRig::SetJumpMultiplier(float jumpMultiplier, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::SetJumpMultiplier");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetJumpMultiplier", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jumpMultiplier), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, jumpMultiplier, info);
}
// Autogenerated method: VRRig.SetJumpMultiplierLocal
void GlobalNamespace::VRRig::SetJumpMultiplierLocal(float jumpMultiplier) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::SetJumpMultiplierLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetJumpMultiplierLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(jumpMultiplier)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, jumpMultiplier);
}
// Autogenerated method: VRRig.SetTaggedTime
void GlobalNamespace::VRRig::SetTaggedTime(::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::SetTaggedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetTaggedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info);
}
// Autogenerated method: VRRig.SetSlowedTime
void GlobalNamespace::VRRig::SetSlowedTime(::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::SetSlowedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSlowedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info);
}
// Autogenerated method: VRRig.SetJoinTaggedTime
void GlobalNamespace::VRRig::SetJoinTaggedTime(::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::SetJoinTaggedTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetJoinTaggedTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info);
}
// Autogenerated method: VRRig.RequestMaterialColor
void GlobalNamespace::VRRig::RequestMaterialColor(::Photon::Realtime::Player* askingPlayer, bool noneBool) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::RequestMaterialColor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestMaterialColor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(askingPlayer), ::il2cpp_utils::ExtractType(noneBool)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, askingPlayer, noneBool);
}
// Autogenerated method: VRRig.RequestCosmetics
void GlobalNamespace::VRRig::RequestCosmetics(::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::RequestCosmetics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RequestCosmetics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info);
}
// Autogenerated method: VRRig.PlayTagSound
void GlobalNamespace::VRRig::PlayTagSound(int soundIndex, float soundVolume, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::PlayTagSound");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayTagSound", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundIndex), ::il2cpp_utils::ExtractType(soundVolume), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, soundIndex, soundVolume, info);
}
// Autogenerated method: VRRig.Bonk
void GlobalNamespace::VRRig::Bonk(int soundIndex, float bonkPercent, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::Bonk");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Bonk", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundIndex), ::il2cpp_utils::ExtractType(bonkPercent), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, soundIndex, bonkPercent, info);
}
// Autogenerated method: VRRig.PlayDrum
void GlobalNamespace::VRRig::PlayDrum(int drumIndex, float drumVolume, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::PlayDrum");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayDrum", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(drumIndex), ::il2cpp_utils::ExtractType(drumVolume), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, drumIndex, drumVolume, info);
}
// Autogenerated method: VRRig.PlaySelfOnlyInstrument
void GlobalNamespace::VRRig::PlaySelfOnlyInstrument(int selfOnlyIndex, int noteIndex, float instrumentVol, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::PlaySelfOnlyInstrument");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlaySelfOnlyInstrument", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(selfOnlyIndex), ::il2cpp_utils::ExtractType(noteIndex), ::il2cpp_utils::ExtractType(instrumentVol), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, selfOnlyIndex, noteIndex, instrumentVol, info);
}
// Autogenerated method: VRRig.PlayHandTap
void GlobalNamespace::VRRig::PlayHandTap(int soundIndex, bool isLeftHand, float tapVolume, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::PlayHandTap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayHandTap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundIndex), ::il2cpp_utils::ExtractType(isLeftHand), ::il2cpp_utils::ExtractType(tapVolume), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, soundIndex, isLeftHand, tapVolume, info);
}
// Autogenerated method: VRRig.PlayHandTapLocal
void GlobalNamespace::VRRig::PlayHandTapLocal(int soundIndex, bool isLeftHand, float tapVolume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::PlayHandTapLocal");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PlayHandTapLocal", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(soundIndex), ::il2cpp_utils::ExtractType(isLeftHand), ::il2cpp_utils::ExtractType(tapVolume)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, soundIndex, isLeftHand, tapVolume);
}
// Autogenerated method: VRRig.UpdateCosmetics
void GlobalNamespace::VRRig::UpdateCosmetics(::StringW newBadge, ::StringW newFace, ::StringW newHat, ::StringW newLeftHandHold, ::StringW newRightHandHold, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::UpdateCosmetics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCosmetics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newBadge), ::il2cpp_utils::ExtractType(newFace), ::il2cpp_utils::ExtractType(newHat), ::il2cpp_utils::ExtractType(newLeftHandHold), ::il2cpp_utils::ExtractType(newRightHandHold), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newBadge, newFace, newHat, newLeftHandHold, newRightHandHold, info);
}
// Autogenerated method: VRRig.UpdateCosmeticsWithTryon
void GlobalNamespace::VRRig::UpdateCosmeticsWithTryon(::StringW newBadge, ::StringW newFace, ::StringW newHat, ::StringW newLeftHandHold, ::StringW newRightHandHold, ::StringW tryOnBadge, ::StringW tryOnFace, ::StringW tryOnHat, ::StringW tryOnLeftHandHold, ::StringW tryOnRightHandHold, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::UpdateCosmeticsWithTryon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCosmeticsWithTryon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newBadge), ::il2cpp_utils::ExtractType(newFace), ::il2cpp_utils::ExtractType(newHat), ::il2cpp_utils::ExtractType(newLeftHandHold), ::il2cpp_utils::ExtractType(newRightHandHold), ::il2cpp_utils::ExtractType(tryOnBadge), ::il2cpp_utils::ExtractType(tryOnFace), ::il2cpp_utils::ExtractType(tryOnHat), ::il2cpp_utils::ExtractType(tryOnLeftHandHold), ::il2cpp_utils::ExtractType(tryOnRightHandHold), ::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newBadge, newFace, newHat, newLeftHandHold, newRightHandHold, tryOnBadge, tryOnFace, tryOnHat, tryOnLeftHandHold, tryOnRightHandHold, info);
}
// Autogenerated method: VRRig.UpdateAllowedCosmetics
void GlobalNamespace::VRRig::UpdateAllowedCosmetics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::UpdateAllowedCosmetics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateAllowedCosmetics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRRig.LocalUpdateCosmetics
void GlobalNamespace::VRRig::LocalUpdateCosmetics(::StringW newBadge, ::StringW newFace, ::StringW newHat, ::StringW newLeftHandHold, ::StringW newRightHandHold) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::LocalUpdateCosmetics");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalUpdateCosmetics", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newBadge), ::il2cpp_utils::ExtractType(newFace), ::il2cpp_utils::ExtractType(newHat), ::il2cpp_utils::ExtractType(newLeftHandHold), ::il2cpp_utils::ExtractType(newRightHandHold)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newBadge, newFace, newHat, newLeftHandHold, newRightHandHold);
}
// Autogenerated method: VRRig.LocalUpdateCosmeticsWithTryon
void GlobalNamespace::VRRig::LocalUpdateCosmeticsWithTryon(::StringW newBadge, ::StringW newFace, ::StringW newHat, ::StringW newLeftHandHold, ::StringW newRightHandHold, ::StringW tryOnBadge, ::StringW tryOnFace, ::StringW tryOnHat, ::StringW tryOnLeftHandHold, ::StringW tryOnRightHandHold) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::LocalUpdateCosmeticsWithTryon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LocalUpdateCosmeticsWithTryon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newBadge), ::il2cpp_utils::ExtractType(newFace), ::il2cpp_utils::ExtractType(newHat), ::il2cpp_utils::ExtractType(newLeftHandHold), ::il2cpp_utils::ExtractType(newRightHandHold), ::il2cpp_utils::ExtractType(tryOnBadge), ::il2cpp_utils::ExtractType(tryOnFace), ::il2cpp_utils::ExtractType(tryOnHat), ::il2cpp_utils::ExtractType(tryOnLeftHandHold), ::il2cpp_utils::ExtractType(tryOnRightHandHold)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newBadge, newFace, newHat, newLeftHandHold, newRightHandHold, tryOnBadge, tryOnFace, tryOnHat, tryOnLeftHandHold, tryOnRightHandHold);
}
// Autogenerated method: VRRig.CheckForEarlyAccess
void GlobalNamespace::VRRig::CheckForEarlyAccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::CheckForEarlyAccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckForEarlyAccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRRig.SetCosmeticsActive
void GlobalNamespace::VRRig::SetCosmeticsActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::SetCosmeticsActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCosmeticsActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRRig.GetUserCosmeticsAllowed
void GlobalNamespace::VRRig::GetUserCosmeticsAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::GetUserCosmeticsAllowed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserCosmeticsAllowed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRRig.Quitting
void GlobalNamespace::VRRig::Quitting() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::Quitting");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Quitting", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRRig.GenerateFingerAngleLookupTables
void GlobalNamespace::VRRig::GenerateFingerAngleLookupTables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::GenerateFingerAngleLookupTables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateFingerAngleLookupTables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRRig.GenerateTableThumb
void GlobalNamespace::VRRig::GenerateTableThumb(ByRef<::GlobalNamespace::VRMapThumb*> thumb) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::GenerateTableThumb");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateTableThumb", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(thumb)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(thumb));
}
// Autogenerated method: VRRig.GenerateTableIndex
void GlobalNamespace::VRRig::GenerateTableIndex(ByRef<::GlobalNamespace::VRMapIndex*> index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::GenerateTableIndex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateTableIndex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(index));
}
// Autogenerated method: VRRig.GenerateTableMiddle
void GlobalNamespace::VRRig::GenerateTableMiddle(ByRef<::GlobalNamespace::VRMapMiddle*> middle) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::GenerateTableMiddle");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateTableMiddle", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(middle)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(middle));
}
// Autogenerated method: VRRig.SanitizeQuaternion
::UnityEngine::Quaternion GlobalNamespace::VRRig::SanitizeQuaternion(::UnityEngine::Quaternion quat) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::SanitizeQuaternion");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SanitizeQuaternion", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(quat)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Quaternion, false>(this, ___internal__method, quat);
}
// Autogenerated method: VRRig.SanitizeVector3
::UnityEngine::Vector3 GlobalNamespace::VRRig::SanitizeVector3(::UnityEngine::Vector3 vec) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::SanitizeVector3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SanitizeVector3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(vec)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, vec);
}
// Autogenerated method: VRRig.<GetUserCosmeticsAllowed>b__121_0
void GlobalNamespace::VRRig::$GetUserCosmeticsAllowed$b__121_0(::PlayFab::ClientModels::GetUserInventoryResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::<GetUserCosmeticsAllowed>b__121_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetUserCosmeticsAllowed>b__121_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: VRRig.<GetUserCosmeticsAllowed>b__121_1
void GlobalNamespace::VRRig::$GetUserCosmeticsAllowed$b__121_1(::PlayFab::PlayFabError* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::<GetUserCosmeticsAllowed>b__121_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetUserCosmeticsAllowed>b__121_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: VRRig/<OccasionalUpdate>d__86
#include "GlobalNamespace/VRRig_-OccasionalUpdate-d__86.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::VRRig::$OccasionalUpdate$d__86::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::$OccasionalUpdate$d__86::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::VRRig::$OccasionalUpdate$d__86::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::$OccasionalUpdate$d__86::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRRig <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::VRRig::$OccasionalUpdate$d__86::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::$OccasionalUpdate$d__86::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: VRRig/<OccasionalUpdate>d__86.System.IDisposable.Dispose
void GlobalNamespace::VRRig::$OccasionalUpdate$d__86::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::$OccasionalUpdate$d__86::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::VRRig::$OccasionalUpdate$d__86*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRRig/<OccasionalUpdate>d__86.MoveNext
bool GlobalNamespace::VRRig::$OccasionalUpdate$d__86::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::$OccasionalUpdate$d__86::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::VRRig::$OccasionalUpdate$d__86*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: VRRig/<OccasionalUpdate>d__86.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::VRRig::$OccasionalUpdate$d__86::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::$OccasionalUpdate$d__86::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::VRRig::$OccasionalUpdate$d__86*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: VRRig/<OccasionalUpdate>d__86.System.Collections.IEnumerator.Reset
void GlobalNamespace::VRRig::$OccasionalUpdate$d__86::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::$OccasionalUpdate$d__86::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::VRRig::$OccasionalUpdate$d__86*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: VRRig/<OccasionalUpdate>d__86.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::VRRig::$OccasionalUpdate$d__86::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::$OccasionalUpdate$d__86::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::VRRig::$OccasionalUpdate$d__86*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: VRRig/<>c
#include "GlobalNamespace/VRRig_--c.hpp"
// Including type: System.Predicate`1
#include "System/Predicate_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly VRRig/<>c <>9
::GlobalNamespace::VRRig::$$c* GlobalNamespace::VRRig::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::VRRig::$$c*>("", "VRRig/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly VRRig/<>c <>9
void GlobalNamespace::VRRig::$$c::_set_$$9(::GlobalNamespace::VRRig::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "VRRig/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Predicate`1<System.Char> <>9__98_0
::System::Predicate_1<::Il2CppChar>* GlobalNamespace::VRRig::$$c::_get_$$9__98_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::$$c::_get_$$9__98_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Predicate_1<::Il2CppChar>*>("", "VRRig/<>c", "<>9__98_0")));
}
// Autogenerated static field setter
// Set static field: static public System.Predicate`1<System.Char> <>9__98_0
void GlobalNamespace::VRRig::$$c::_set_$$9__98_0(::System::Predicate_1<::Il2CppChar>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::$$c::_set_$$9__98_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "VRRig/<>c", "<>9__98_0", value)));
}
// Autogenerated method: VRRig/<>c..cctor
void GlobalNamespace::VRRig::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "VRRig/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: VRRig/<>c.<NormalizeName>b__98_0
bool GlobalNamespace::VRRig::$$c::$NormalizeName$b__98_0(::Il2CppChar c) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::VRRig::$$c::<NormalizeName>b__98_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<NormalizeName>b__98_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(c)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, c);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BetaButton
#include "GlobalNamespace/BetaButton.hpp"
// Including type: BetaButton/<ButtonColorUpdate>d__6
#include "GlobalNamespace/BetaButton_-ButtonColorUpdate-d__6.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject betaParent
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::BetaButton::dyn_betaParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetaButton::dyn_betaParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "betaParent"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 count
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetaButton::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetaButton::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single buttonFadeTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BetaButton::dyn_buttonFadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetaButton::dyn_buttonFadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonFadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text messageText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::BetaButton::dyn_messageText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetaButton::dyn_messageText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "messageText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BetaButton.ButtonColorUpdate
::System::Collections::IEnumerator* GlobalNamespace::BetaButton::ButtonColorUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetaButton::ButtonColorUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ButtonColorUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: BetaButton.Start
void GlobalNamespace::BetaButton::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetaButton::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BetaButton.ButtonActivation
void GlobalNamespace::BetaButton::ButtonActivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetaButton::ButtonActivation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: BetaButton/<ButtonColorUpdate>d__6
#include "GlobalNamespace/BetaButton_-ButtonColorUpdate-d__6.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::BetaButton::$ButtonColorUpdate$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetaButton::$ButtonColorUpdate$d__6::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::BetaButton::$ButtonColorUpdate$d__6::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetaButton::$ButtonColorUpdate$d__6::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public BetaButton <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::BetaButton*& GlobalNamespace::BetaButton::$ButtonColorUpdate$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetaButton::$ButtonColorUpdate$d__6::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::BetaButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BetaButton/<ButtonColorUpdate>d__6.System.IDisposable.Dispose
void GlobalNamespace::BetaButton::$ButtonColorUpdate$d__6::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetaButton::$ButtonColorUpdate$d__6::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BetaButton::$ButtonColorUpdate$d__6*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BetaButton/<ButtonColorUpdate>d__6.MoveNext
bool GlobalNamespace::BetaButton::$ButtonColorUpdate$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetaButton::$ButtonColorUpdate$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BetaButton::$ButtonColorUpdate$d__6*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: BetaButton/<ButtonColorUpdate>d__6.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::BetaButton::$ButtonColorUpdate$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetaButton::$ButtonColorUpdate$d__6::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BetaButton::$ButtonColorUpdate$d__6*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: BetaButton/<ButtonColorUpdate>d__6.System.Collections.IEnumerator.Reset
void GlobalNamespace::BetaButton::$ButtonColorUpdate$d__6::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetaButton::$ButtonColorUpdate$d__6::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BetaButton::$ButtonColorUpdate$d__6*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BetaButton/<ButtonColorUpdate>d__6.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::BetaButton::$ButtonColorUpdate$d__6::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetaButton::$ButtonColorUpdate$d__6::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::BetaButton::$ButtonColorUpdate$d__6*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BetaChecker
#include "GlobalNamespace/BetaChecker.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] objectsToEnable
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::BetaChecker::dyn_objectsToEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetaChecker::dyn_objectsToEnable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objectsToEnable"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean doNotEnable
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::BetaChecker::dyn_doNotEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetaChecker::dyn_doNotEnable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "doNotEnable"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BetaChecker.Start
void GlobalNamespace::BetaChecker::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetaChecker::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BetaChecker.Update
void GlobalNamespace::BetaChecker::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BetaChecker::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CheckoutCartButton
#include "GlobalNamespace/CheckoutCartButton.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.CosmeticsController/CosmeticItem currentCosmeticItem
[[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::CosmeticItem& GlobalNamespace::CheckoutCartButton::dyn_currentCosmeticItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheckoutCartButton::dyn_currentCosmeticItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentCosmeticItem"))->offset;
  return *reinterpret_cast<::GorillaNetworking::CosmeticsController::CosmeticItem*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image currentImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::CheckoutCartButton::dyn_currentImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheckoutCartButton::dyn_currentImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer button
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::CheckoutCartButton::dyn_button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheckoutCartButton::dyn_button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "button"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material blank
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::CheckoutCartButton::dyn_blank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheckoutCartButton::dyn_blank");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blank"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String noCosmeticText
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CheckoutCartButton::dyn_noCosmeticText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheckoutCartButton::dyn_noCosmeticText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noCosmeticText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text buttonText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::CheckoutCartButton::dyn_buttonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheckoutCartButton::dyn_buttonText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CheckoutCartButton.Start
void GlobalNamespace::CheckoutCartButton::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheckoutCartButton::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CheckoutCartButton.UpdateColor
void GlobalNamespace::CheckoutCartButton::UpdateColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheckoutCartButton::UpdateColor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CheckoutCartButton.ButtonActivationWithHand
void GlobalNamespace::CheckoutCartButton::ButtonActivationWithHand(bool isLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheckoutCartButton::ButtonActivationWithHand");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isLeftHand);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CosmeticBoundaryTrigger
#include "GlobalNamespace/CosmeticBoundaryTrigger.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VRRig rigRef
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::CosmeticBoundaryTrigger::dyn_rigRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticBoundaryTrigger::dyn_rigRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigRef"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CosmeticBoundaryTrigger.OnTriggerEnter
void GlobalNamespace::CosmeticBoundaryTrigger::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticBoundaryTrigger::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: CosmeticBoundaryTrigger.OnTriggerExit
void GlobalNamespace::CosmeticBoundaryTrigger::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticBoundaryTrigger::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CosmeticItem
#include "GlobalNamespace/CosmeticItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CosmeticStand
#include "GlobalNamespace/CosmeticStand.hpp"
// Including type: HeadModel
#include "GlobalNamespace/HeadModel.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.CosmeticsController/CosmeticItem thisCosmeticItem
[[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::CosmeticItem& GlobalNamespace::CosmeticStand::dyn_thisCosmeticItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticStand::dyn_thisCosmeticItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thisCosmeticItem"))->offset;
  return *reinterpret_cast<::GorillaNetworking::CosmeticsController::CosmeticItem*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String thisCosmeticName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::CosmeticStand::dyn_thisCosmeticName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticStand::dyn_thisCosmeticName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thisCosmeticName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HeadModel thisHeadModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HeadModel*& GlobalNamespace::CosmeticStand::dyn_thisHeadModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticStand::dyn_thisHeadModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thisHeadModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HeadModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text slotPriceText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::CosmeticStand::dyn_slotPriceText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticStand::dyn_slotPriceText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slotPriceText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CosmeticStand.InitializeCosmetic
void GlobalNamespace::CosmeticStand::InitializeCosmetic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticStand::InitializeCosmetic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeCosmetic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CosmeticStand.<InitializeCosmetic>b__4_0
bool GlobalNamespace::CosmeticStand::$InitializeCosmetic$b__4_0(::GorillaNetworking::CosmeticsController::CosmeticItem x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticStand::<InitializeCosmetic>b__4_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<InitializeCosmetic>b__4_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: CosmeticStand.ButtonActivation
void GlobalNamespace::CosmeticStand::ButtonActivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticStand::ButtonActivation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CosmeticsControllerUpdateStand
#include "GlobalNamespace/CosmeticsControllerUpdateStand.hpp"
// Including type: GorillaNetworking.CosmeticsController
#include "GorillaNetworking/CosmeticsController.hpp"
// Including type: HeadModel
#include "GlobalNamespace/HeadModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.CosmeticsController cosmeticsController
[[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController*& GlobalNamespace::CosmeticsControllerUpdateStand::dyn_cosmeticsController() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticsControllerUpdateStand::dyn_cosmeticsController");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cosmeticsController"))->offset;
  return *reinterpret_cast<::GorillaNetworking::CosmeticsController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean FailEntitlement
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CosmeticsControllerUpdateStand::dyn_FailEntitlement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticsControllerUpdateStand::dyn_FailEntitlement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "FailEntitlement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean PlayerUnlocked
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CosmeticsControllerUpdateStand::dyn_PlayerUnlocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticsControllerUpdateStand::dyn_PlayerUnlocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "PlayerUnlocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ItemNotGrantedYet
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CosmeticsControllerUpdateStand::dyn_ItemNotGrantedYet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticsControllerUpdateStand::dyn_ItemNotGrantedYet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ItemNotGrantedYet"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ItemSuccessfullyGranted
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CosmeticsControllerUpdateStand::dyn_ItemSuccessfullyGranted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticsControllerUpdateStand::dyn_ItemSuccessfullyGranted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ItemSuccessfullyGranted"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean AttemptToConsumeEntitlement
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CosmeticsControllerUpdateStand::dyn_AttemptToConsumeEntitlement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticsControllerUpdateStand::dyn_AttemptToConsumeEntitlement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "AttemptToConsumeEntitlement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean EntitlementSuccessfullyConsumed
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CosmeticsControllerUpdateStand::dyn_EntitlementSuccessfullyConsumed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticsControllerUpdateStand::dyn_EntitlementSuccessfullyConsumed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "EntitlementSuccessfullyConsumed"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean LockSuccessfullyCleared
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CosmeticsControllerUpdateStand::dyn_LockSuccessfullyCleared() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticsControllerUpdateStand::dyn_LockSuccessfullyCleared");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "LockSuccessfullyCleared"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean RunDebug
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::CosmeticsControllerUpdateStand::dyn_RunDebug() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticsControllerUpdateStand::dyn_RunDebug");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "RunDebug"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HeadModel[] inventoryHeadModels
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::HeadModel*>& GlobalNamespace::CosmeticsControllerUpdateStand::dyn_inventoryHeadModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticsControllerUpdateStand::dyn_inventoryHeadModels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inventoryHeadModels"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::HeadModel*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CosmeticsControllerUpdateStand.CallGetIAPPurchases
void GlobalNamespace::CosmeticsControllerUpdateStand::CallGetIAPPurchases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticsControllerUpdateStand::CallGetIAPPurchases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CallGetIAPPurchases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CosmeticsControllerUpdateStand.UpdateCosmeticStands
void GlobalNamespace::CosmeticsControllerUpdateStand::UpdateCosmeticStands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticsControllerUpdateStand::UpdateCosmeticStands");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCosmeticStands", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CosmeticsControllerUpdateStand.UpdateInventoryHeadModels
void GlobalNamespace::CosmeticsControllerUpdateStand::UpdateInventoryHeadModels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CosmeticsControllerUpdateStand::UpdateInventoryHeadModels");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateInventoryHeadModels", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: EarlyAccessButton
#include "GlobalNamespace/EarlyAccessButton.hpp"
// Including type: EarlyAccessButton/<ButtonColorUpdate>d__4
#include "GlobalNamespace/EarlyAccessButton_-ButtonColorUpdate-d__4.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: EarlyAccessButton.Awake
void GlobalNamespace::EarlyAccessButton::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EarlyAccessButton::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EarlyAccessButton.Update
void GlobalNamespace::EarlyAccessButton::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EarlyAccessButton::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EarlyAccessButton.AlreadyOwn
void GlobalNamespace::EarlyAccessButton::AlreadyOwn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EarlyAccessButton::AlreadyOwn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AlreadyOwn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EarlyAccessButton.ButtonColorUpdate
::System::Collections::IEnumerator* GlobalNamespace::EarlyAccessButton::ButtonColorUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EarlyAccessButton::ButtonColorUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ButtonColorUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: EarlyAccessButton.ButtonActivation
void GlobalNamespace::EarlyAccessButton::ButtonActivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EarlyAccessButton::ButtonActivation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: EarlyAccessButton/<ButtonColorUpdate>d__4
#include "GlobalNamespace/EarlyAccessButton_-ButtonColorUpdate-d__4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::EarlyAccessButton::$ButtonColorUpdate$d__4::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EarlyAccessButton::$ButtonColorUpdate$d__4::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::EarlyAccessButton::$ButtonColorUpdate$d__4::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EarlyAccessButton::$ButtonColorUpdate$d__4::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EarlyAccessButton <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EarlyAccessButton*& GlobalNamespace::EarlyAccessButton::$ButtonColorUpdate$d__4::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EarlyAccessButton::$ButtonColorUpdate$d__4::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EarlyAccessButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: EarlyAccessButton/<ButtonColorUpdate>d__4.System.IDisposable.Dispose
void GlobalNamespace::EarlyAccessButton::$ButtonColorUpdate$d__4::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EarlyAccessButton::$ButtonColorUpdate$d__4::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::EarlyAccessButton::$ButtonColorUpdate$d__4*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EarlyAccessButton/<ButtonColorUpdate>d__4.MoveNext
bool GlobalNamespace::EarlyAccessButton::$ButtonColorUpdate$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EarlyAccessButton::$ButtonColorUpdate$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::EarlyAccessButton::$ButtonColorUpdate$d__4*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: EarlyAccessButton/<ButtonColorUpdate>d__4.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::EarlyAccessButton::$ButtonColorUpdate$d__4::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EarlyAccessButton::$ButtonColorUpdate$d__4::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::EarlyAccessButton::$ButtonColorUpdate$d__4*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: EarlyAccessButton/<ButtonColorUpdate>d__4.System.Collections.IEnumerator.Reset
void GlobalNamespace::EarlyAccessButton::$ButtonColorUpdate$d__4::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EarlyAccessButton::$ButtonColorUpdate$d__4::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::EarlyAccessButton::$ButtonColorUpdate$d__4*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: EarlyAccessButton/<ButtonColorUpdate>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::EarlyAccessButton::$ButtonColorUpdate$d__4::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::EarlyAccessButton::$ButtonColorUpdate$d__4::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::EarlyAccessButton::$ButtonColorUpdate$d__4*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: FittingRoomButton
#include "GlobalNamespace/FittingRoomButton.hpp"
// Including type: UnityEngine.UI.Image
#include "UnityEngine/UI/Image.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.CosmeticsController/CosmeticItem currentCosmeticItem
[[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::CosmeticItem& GlobalNamespace::FittingRoomButton::dyn_currentCosmeticItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FittingRoomButton::dyn_currentCosmeticItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentCosmeticItem"))->offset;
  return *reinterpret_cast<::GorillaNetworking::CosmeticsController::CosmeticItem*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Image currentImage
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Image*& GlobalNamespace::FittingRoomButton::dyn_currentImage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FittingRoomButton::dyn_currentImage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentImage"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Image**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.MeshRenderer button
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::FittingRoomButton::dyn_button() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FittingRoomButton::dyn_button");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "button"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material blank
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::FittingRoomButton::dyn_blank() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FittingRoomButton::dyn_blank");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "blank"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String noCosmeticText
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::FittingRoomButton::dyn_noCosmeticText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FittingRoomButton::dyn_noCosmeticText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "noCosmeticText"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text buttonText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::FittingRoomButton::dyn_buttonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FittingRoomButton::dyn_buttonText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: FittingRoomButton.Start
void GlobalNamespace::FittingRoomButton::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FittingRoomButton::Start");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FittingRoomButton.UpdateColor
void GlobalNamespace::FittingRoomButton::UpdateColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FittingRoomButton::UpdateColor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: FittingRoomButton.ButtonActivationWithHand
void GlobalNamespace::FittingRoomButton::ButtonActivationWithHand(bool isLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::FittingRoomButton::ButtonActivationWithHand");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isLeftHand);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HeadModel
#include "GlobalNamespace/HeadModel.hpp"
// Including type: HeadModel/<DisableAfterASecond>d__6
#include "GlobalNamespace/HeadModel_-DisableAfterASecond-d__6.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] cosmetics
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::HeadModel::dyn_cosmetics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadModel::dyn_cosmetics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cosmetics"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.GameObject objRef
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::HeadModel::dyn_objRef() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadModel::dyn_objRef");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "objRef"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.GameObject> currentActiveObjects
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::GameObject*>*& GlobalNamespace::HeadModel::dyn_currentActiveObjects() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadModel::dyn_currentActiveObjects");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentActiveObjects"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<System.String,UnityEngine.GameObject> cosmeticDict
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::GameObject*>*& GlobalNamespace::HeadModel::dyn_cosmeticDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadModel::dyn_cosmeticDict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cosmeticDict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::UnityEngine::GameObject*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean initialized
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::HeadModel::dyn_initialized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadModel::dyn_initialized");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "initialized"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HeadModel.Awake
void GlobalNamespace::HeadModel::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadModel::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HeadModel.DisableAfterASecond
::System::Collections::IEnumerator* GlobalNamespace::HeadModel::DisableAfterASecond() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadModel::DisableAfterASecond");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DisableAfterASecond", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: HeadModel.OnEnable
void GlobalNamespace::HeadModel::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadModel::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HeadModel.SetCosmeticActive
void GlobalNamespace::HeadModel::SetCosmeticActive(::StringW activeCosmeticName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadModel::SetCosmeticActive");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCosmeticActive", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activeCosmeticName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, activeCosmeticName);
}
// Autogenerated method: HeadModel.SetCosmeticActiveArray
void GlobalNamespace::HeadModel::SetCosmeticActiveArray(::ArrayW<::StringW> activeCosmeticNames) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadModel::SetCosmeticActiveArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetCosmeticActiveArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(activeCosmeticNames)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, activeCosmeticNames);
}
// Autogenerated method: HeadModel.SetChildRenderers
void GlobalNamespace::HeadModel::SetChildRenderers(::UnityEngine::GameObject* obj, bool setEnabled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadModel::SetChildRenderers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetChildRenderers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(setEnabled)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, setEnabled);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: HeadModel/<DisableAfterASecond>d__6
#include "GlobalNamespace/HeadModel_-DisableAfterASecond-d__6.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::HeadModel::$DisableAfterASecond$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadModel::$DisableAfterASecond$d__6::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::HeadModel::$DisableAfterASecond$d__6::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadModel::$DisableAfterASecond$d__6::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HeadModel <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HeadModel*& GlobalNamespace::HeadModel::$DisableAfterASecond$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadModel::$DisableAfterASecond$d__6::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HeadModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: HeadModel/<DisableAfterASecond>d__6.System.IDisposable.Dispose
void GlobalNamespace::HeadModel::$DisableAfterASecond$d__6::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadModel::$DisableAfterASecond$d__6::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HeadModel::$DisableAfterASecond$d__6*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HeadModel/<DisableAfterASecond>d__6.MoveNext
bool GlobalNamespace::HeadModel::$DisableAfterASecond$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadModel::$DisableAfterASecond$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HeadModel::$DisableAfterASecond$d__6*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: HeadModel/<DisableAfterASecond>d__6.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::HeadModel::$DisableAfterASecond$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadModel::$DisableAfterASecond$d__6::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HeadModel::$DisableAfterASecond$d__6*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: HeadModel/<DisableAfterASecond>d__6.System.Collections.IEnumerator.Reset
void GlobalNamespace::HeadModel::$DisableAfterASecond$d__6::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadModel::$DisableAfterASecond$d__6::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HeadModel::$DisableAfterASecond$d__6*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: HeadModel/<DisableAfterASecond>d__6.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::HeadModel::$DisableAfterASecond$d__6::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HeadModel::$DisableAfterASecond$d__6::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::HeadModel::$DisableAfterASecond$d__6*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ActionableItem
#include "GlobalNamespace/ActionableItem.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public VRRig myRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::ActionableItem::dyn_myRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::dyn_myRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRRig myOnlineRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::ActionableItem::dyn_myOnlineRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::dyn_myOnlineRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myOnlineRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 myState
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ActionableItem::dyn_myState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::dyn_myState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myState"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean forLeftHand
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ActionableItem::dyn_forLeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::dyn_forLeftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forLeftHand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.InputDevice myInputDevice
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::InputDevice& GlobalNamespace::ActionableItem::dyn_myInputDevice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::dyn_myInputDevice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myInputDevice"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::InputDevice*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean primaryButtonPress
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ActionableItem::dyn_primaryButtonPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::dyn_primaryButtonPress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "primaryButtonPress"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean secondaryButtonPress
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ActionableItem::dyn_secondaryButtonPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::dyn_secondaryButtonPress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secondaryButtonPress"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single indexTrigger
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ActionableItem::dyn_indexTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::dyn_indexTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indexTrigger"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single myThreshold
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ActionableItem::dyn_myThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::dyn_myThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single hysterisis
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ActionableItem::dyn_hysterisis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::dyn_hysterisis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hysterisis"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ActionableItem/ActivationType myActivationType
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ActionableItem::ActivationType& GlobalNamespace::ActionableItem::dyn_myActivationType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::dyn_myActivationType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myActivationType"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ActionableItem::ActivationType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean latched
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ActionableItem::dyn_latched() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::dyn_latched");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "latched"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isLocal
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ActionableItem::dyn_isLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::dyn_isLocal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isLocal"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean testActivate
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ActionableItem::dyn_testActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::dyn_testActivate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testActivate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean testDeactivate
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::ActionableItem::dyn_testDeactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::dyn_testDeactivate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testDeactivate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ActionableItem.Awake
void GlobalNamespace::ActionableItem::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ActionableItem.Update
void GlobalNamespace::ActionableItem::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ActionableItem.StateChange
void GlobalNamespace::ActionableItem::StateChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::StateChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ActionableItem*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ActionableItem.CanActivate
bool GlobalNamespace::ActionableItem::CanActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::CanActivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ActionableItem*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ActionableItem.CanDeactivate
bool GlobalNamespace::ActionableItem::CanDeactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::CanDeactivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ActionableItem*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ActionableItem.OnActivate
void GlobalNamespace::ActionableItem::OnActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::OnActivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ActionableItem*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ActionableItem.OnDeactivate
void GlobalNamespace::ActionableItem::OnDeactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::OnDeactivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ActionableItem*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ActionableItem.IsMyItem
bool GlobalNamespace::ActionableItem::IsMyItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::IsMyItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsMyItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ActionableItem.PlayNote
void GlobalNamespace::ActionableItem::PlayNote(int note, float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::PlayNote");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ActionableItem*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note, volume);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ActionableItem/ActivationType
#include "GlobalNamespace/ActionableItem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ActionableItem/ActivationType Thumb
::GlobalNamespace::ActionableItem::ActivationType GlobalNamespace::ActionableItem::ActivationType::_get_Thumb() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::ActivationType::_get_Thumb");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ActionableItem::ActivationType>("", "ActionableItem/ActivationType", "Thumb"));
}
// Autogenerated static field setter
// Set static field: static public ActionableItem/ActivationType Thumb
void GlobalNamespace::ActionableItem::ActivationType::_set_Thumb(::GlobalNamespace::ActionableItem::ActivationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::ActivationType::_set_Thumb");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ActionableItem/ActivationType", "Thumb", value));
}
// Autogenerated static field getter
// Get static field: static public ActionableItem/ActivationType Index
::GlobalNamespace::ActionableItem::ActivationType GlobalNamespace::ActionableItem::ActivationType::_get_Index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::ActivationType::_get_Index");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ActionableItem::ActivationType>("", "ActionableItem/ActivationType", "Index"));
}
// Autogenerated static field setter
// Set static field: static public ActionableItem/ActivationType Index
void GlobalNamespace::ActionableItem::ActivationType::_set_Index(::GlobalNamespace::ActionableItem::ActivationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::ActivationType::_set_Index");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ActionableItem/ActivationType", "Index", value));
}
// Autogenerated static field getter
// Get static field: static public ActionableItem/ActivationType Middle
::GlobalNamespace::ActionableItem::ActivationType GlobalNamespace::ActionableItem::ActivationType::_get_Middle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::ActivationType::_get_Middle");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ActionableItem::ActivationType>("", "ActionableItem/ActivationType", "Middle"));
}
// Autogenerated static field setter
// Set static field: static public ActionableItem/ActivationType Middle
void GlobalNamespace::ActionableItem::ActivationType::_set_Middle(::GlobalNamespace::ActionableItem::ActivationType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::ActivationType::_set_Middle");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ActionableItem/ActivationType", "Middle", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ActionableItem::ActivationType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ActionableItem::ActivationType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ChestObjectHysteresis
#include "GlobalNamespace/ChestObjectHysteresis.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single angleHysteresis
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ChestObjectHysteresis::dyn_angleHysteresis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestObjectHysteresis::dyn_angleHysteresis");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angleHysteresis"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single angleBetween
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ChestObjectHysteresis::dyn_angleBetween() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestObjectHysteresis::dyn_angleBetween");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angleBetween"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform angleFollower
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::ChestObjectHysteresis::dyn_angleFollower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestObjectHysteresis::dyn_angleFollower");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angleFollower"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion lastAngleQuat
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::ChestObjectHysteresis::dyn_lastAngleQuat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestObjectHysteresis::dyn_lastAngleQuat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastAngleQuat"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Quaternion currentAngleQuat
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::ChestObjectHysteresis::dyn_currentAngleQuat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestObjectHysteresis::dyn_currentAngleQuat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentAngleQuat"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ChestObjectHysteresis.Start
void GlobalNamespace::ChestObjectHysteresis::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestObjectHysteresis::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ChestObjectHysteresis.LateUpdate
void GlobalNamespace::ChestObjectHysteresis::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestObjectHysteresis::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Drum
#include "GlobalNamespace/Drum.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean disabler
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Drum::dyn_disabler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Drum::dyn_disabler");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disabler"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource mySource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::Drum::dyn_mySource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Drum::dyn_mySource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mySource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 myIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Drum::dyn_myIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Drum::dyn_myIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: DrumsItem
#include "GlobalNamespace/DrumsItem.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: GorillaTriggerColliderHandIndicator
#include "GlobalNamespace/GorillaTriggerColliderHandIndicator.hpp"
// Including type: Drum
#include "GlobalNamespace/Drum.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Collider[] collidersForThisDrum
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& GlobalNamespace::DrumsItem::dyn_collidersForThisDrum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrumsItem::dyn_collidersForThisDrum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collidersForThisDrum"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Collider> collidersForThisDrumList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Collider*>*& GlobalNamespace::DrumsItem::dyn_collidersForThisDrumList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrumsItem::dyn_collidersForThisDrumList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collidersForThisDrumList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Collider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource[] drumsAS
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioSource*>& GlobalNamespace::DrumsItem::dyn_drumsAS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrumsItem::dyn_drumsAS");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "drumsAS"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioSource*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxDrumVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DrumsItem::dyn_maxDrumVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrumsItem::dyn_maxDrumVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDrumVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minDrumVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DrumsItem::dyn_minDrumVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrumsItem::dyn_minDrumVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minDrumVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxDrumVolumeVelocity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DrumsItem::dyn_maxDrumVolumeVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrumsItem::dyn_maxDrumVolumeVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxDrumVolumeVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean rightHandIn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DrumsItem::dyn_rightHandIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrumsItem::dyn_rightHandIn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandIn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean leftHandIn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DrumsItem::dyn_leftHandIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrumsItem::dyn_leftHandIn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandIn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single volToPlay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DrumsItem::dyn_volToPlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrumsItem::dyn_volToPlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "volToPlay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaTriggerColliderHandIndicator rightHandIndicator
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaTriggerColliderHandIndicator*& GlobalNamespace::DrumsItem::dyn_rightHandIndicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrumsItem::dyn_rightHandIndicator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandIndicator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaTriggerColliderHandIndicator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaTriggerColliderHandIndicator leftHandIndicator
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaTriggerColliderHandIndicator*& GlobalNamespace::DrumsItem::dyn_leftHandIndicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrumsItem::dyn_leftHandIndicator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandIndicator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaTriggerColliderHandIndicator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit[] collidersHit
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RaycastHit>& GlobalNamespace::DrumsItem::dyn_collidersHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrumsItem::dyn_collidersHit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collidersHit"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RaycastHit>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] actualColliders
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& GlobalNamespace::DrumsItem::dyn_actualColliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrumsItem::dyn_actualColliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "actualColliders"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask drumsTouchable
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GlobalNamespace::DrumsItem::dyn_drumsTouchable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrumsItem::dyn_drumsTouchable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "drumsTouchable"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single sphereRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::DrumsItem::dyn_sphereRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrumsItem::dyn_sphereRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sphereRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 spherecastSweep
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::DrumsItem::dyn_spherecastSweep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrumsItem::dyn_spherecastSweep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spherecastSweep"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 collidersHitCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DrumsItem::dyn_collidersHitCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrumsItem::dyn_collidersHitCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collidersHitCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.RaycastHit> hitList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::RaycastHit>*& GlobalNamespace::DrumsItem::dyn_hitList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrumsItem::dyn_hitList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hitList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::RaycastHit>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Drum tempDrum
[[deprecated("Use field access instead!")]] ::GlobalNamespace::Drum*& GlobalNamespace::DrumsItem::dyn_tempDrum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrumsItem::dyn_tempDrum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempDrum"))->offset;
  return *reinterpret_cast<::GlobalNamespace::Drum**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean drumHit
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::DrumsItem::dyn_drumHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrumsItem::dyn_drumHit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "drumHit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit nullHit
[[deprecated("Use field access instead!")]] ::UnityEngine::RaycastHit& GlobalNamespace::DrumsItem::dyn_nullHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrumsItem::dyn_nullHit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nullHit"))->offset;
  return *reinterpret_cast<::UnityEngine::RaycastHit*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 onlineOffset
[[deprecated("Use field access instead!")]] int& GlobalNamespace::DrumsItem::dyn_onlineOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrumsItem::dyn_onlineOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "onlineOffset"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRRig myRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::DrumsItem::dyn_myRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrumsItem::dyn_myRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: DrumsItem.Start
void GlobalNamespace::DrumsItem::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrumsItem::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DrumsItem.LateUpdate
void GlobalNamespace::DrumsItem::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrumsItem::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: DrumsItem.CheckHandHit
void GlobalNamespace::DrumsItem::CheckHandHit(ByRef<bool> handIn, ByRef<::GlobalNamespace::GorillaTriggerColliderHandIndicator*> handIndicator, bool isLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrumsItem::CheckHandHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckHandHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handIn), ::il2cpp_utils::ExtractType(handIndicator), ::il2cpp_utils::ExtractType(isLeftHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(handIn), byref(handIndicator), isLeftHand);
}
// Autogenerated method: DrumsItem.RayCastHitCompare
int GlobalNamespace::DrumsItem::RayCastHitCompare(::UnityEngine::RaycastHit a, ::UnityEngine::RaycastHit b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrumsItem::RayCastHitCompare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "RayCastHitCompare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, a, b);
}
// Autogenerated method: DrumsItem.DrumHit
void GlobalNamespace::DrumsItem::DrumHit(::GlobalNamespace::Drum* tempDrumInner, bool isLeftHand, float hitVelocity) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::DrumsItem::DrumHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DrumHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(tempDrumInner), ::il2cpp_utils::ExtractType(isLeftHand), ::il2cpp_utils::ExtractType(hitVelocity)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, tempDrumInner, isLeftHand, hitVelocity);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: HitChecker
#include "GlobalNamespace/HitChecker.hpp"
// Including type: UnityEngine.LayerMask
#include "UnityEngine/LayerMask.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GorillaTriggerColliderHandIndicator
#include "GlobalNamespace/GorillaTriggerColliderHandIndicator.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: HitChecker.CheckHandHit
void GlobalNamespace::HitChecker::CheckHandHit(ByRef<int> collidersHitCount, ::UnityEngine::LayerMask layerMask, float sphereRadius, ByRef<::UnityEngine::RaycastHit> nullHit, ByRef<::ArrayW<::UnityEngine::RaycastHit>> raycastHits, ByRef<::System::Collections::Generic::List_1<::UnityEngine::RaycastHit>*> raycastHitList, ByRef<::UnityEngine::Vector3> spherecastSweep, ByRef<::GlobalNamespace::GorillaTriggerColliderHandIndicator*> handIndicator) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HitChecker::CheckHandHit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "HitChecker", "CheckHandHit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collidersHitCount), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(sphereRadius), ::il2cpp_utils::ExtractType(nullHit), ::il2cpp_utils::ExtractType(raycastHits), ::il2cpp_utils::ExtractType(raycastHitList), ::il2cpp_utils::ExtractType(spherecastSweep), ::il2cpp_utils::ExtractType(handIndicator)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(collidersHitCount), layerMask, sphereRadius, byref(nullHit), byref(raycastHits), byref(raycastHitList), byref(spherecastSweep), byref(handIndicator));
}
// Autogenerated method: HitChecker.CheckHandIn
bool GlobalNamespace::HitChecker::CheckHandIn(ByRef<bool> anyHit, ByRef<::ArrayW<::UnityEngine::Collider*>> colliderHit, float sphereRadius, int layerMask, ByRef<::GlobalNamespace::GorillaTriggerColliderHandIndicator*> handIndicator, ByRef<::System::Collections::Generic::List_1<::UnityEngine::Collider*>*> collidersToBeIn) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HitChecker::CheckHandIn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "HitChecker", "CheckHandIn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(anyHit), ::il2cpp_utils::ExtractType(colliderHit), ::il2cpp_utils::ExtractType(sphereRadius), ::il2cpp_utils::ExtractType(layerMask), ::il2cpp_utils::ExtractType(handIndicator), ::il2cpp_utils::ExtractType(collidersToBeIn)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, byref(anyHit), byref(colliderHit), sphereRadius, layerMask, byref(handIndicator), byref(collidersToBeIn));
}
// Autogenerated method: HitChecker.RayCastHitCompare
int GlobalNamespace::HitChecker::RayCastHitCompare(::UnityEngine::RaycastHit a, ::UnityEngine::RaycastHit b) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::HitChecker::RayCastHitCompare");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "HitChecker", "RayCastHitCompare", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(a), ::il2cpp_utils::ExtractType(b)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, a, b);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: OneStringGuitar
#include "GlobalNamespace/OneStringGuitar.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
// Including type: GorillaTriggerColliderHandIndicator
#include "GlobalNamespace/GorillaTriggerColliderHandIndicator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 chestOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OneStringGuitar::dyn_chestOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_chestOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chestOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion holdingOffsetRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::OneStringGuitar::dyn_holdingOffsetRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_holdingOffsetRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "holdingOffsetRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion chestRotationOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::OneStringGuitar::dyn_chestRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_chestRotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chestRotationOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Collider chestCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& GlobalNamespace::OneStringGuitar::dyn_chestCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_chestCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chestCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lerpValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OneStringGuitar::dyn_lerpValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_lerpValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lerpValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::OneStringGuitar::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform parentHand
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OneStringGuitar::dyn_parentHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_parentHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentHand"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single unsnapDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OneStringGuitar::dyn_unsnapDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_unsnapDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unsnapDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single snapDistance
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OneStringGuitar::dyn_snapDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_snapDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "snapDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 startPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OneStringGuitar::dyn_startPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_startPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion startQuat
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::OneStringGuitar::dyn_startQuat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_startQuat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startQuat"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 reverseGripPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OneStringGuitar::dyn_reverseGripPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_reverseGripPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverseGripPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion reverseGripQuat
[[deprecated("Use field access instead!")]] ::UnityEngine::Quaternion& GlobalNamespace::OneStringGuitar::dyn_reverseGripQuat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_reverseGripQuat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reverseGripQuat"))->offset;
  return *reinterpret_cast<::UnityEngine::Quaternion*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single angleLerpSnap
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OneStringGuitar::dyn_angleLerpSnap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_angleLerpSnap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angleLerpSnap"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single vectorLerpSnap
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OneStringGuitar::dyn_vectorLerpSnap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_vectorLerpSnap");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vectorLerpSnap"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean angleSnapped
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OneStringGuitar::dyn_angleSnapped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_angleSnapped");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "angleSnapped"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean positionSnapped
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OneStringGuitar::dyn_positionSnapped() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_positionSnapped");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionSnapped"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform chestTouch
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::OneStringGuitar::dyn_chestTouch() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_chestTouch");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "chestTouch"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 collidersHitCount
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OneStringGuitar::dyn_collidersHitCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_collidersHitCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collidersHitCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] collidersHit
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& GlobalNamespace::OneStringGuitar::dyn_collidersHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_collidersHit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collidersHit"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit[] raycastHits
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RaycastHit>& GlobalNamespace::OneStringGuitar::dyn_raycastHits() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_raycastHits");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raycastHits"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RaycastHit>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.RaycastHit> raycastHitList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::RaycastHit>*& GlobalNamespace::OneStringGuitar::dyn_raycastHitList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_raycastHitList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "raycastHitList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::RaycastHit>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit nullHit
[[deprecated("Use field access instead!")]] ::UnityEngine::RaycastHit& GlobalNamespace::OneStringGuitar::dyn_nullHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_nullHit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nullHit"))->offset;
  return *reinterpret_cast<::UnityEngine::RaycastHit*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Collider[] collidersToBeIn
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& GlobalNamespace::OneStringGuitar::dyn_collidersToBeIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_collidersToBeIn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collidersToBeIn"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask interactableMask
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GlobalNamespace::OneStringGuitar::dyn_interactableMask() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_interactableMask");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "interactableMask"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentFretIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OneStringGuitar::dyn_currentFretIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_currentFretIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentFretIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 lastFretIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OneStringGuitar::dyn_lastFretIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_lastFretIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastFretIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Collider[] frets
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& GlobalNamespace::OneStringGuitar::dyn_frets() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_frets");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frets"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Collider> fretsList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Collider*>*& GlobalNamespace::OneStringGuitar::dyn_fretsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_fretsList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fretsList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Collider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioClip[] audioClips
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::AudioClip*>& GlobalNamespace::OneStringGuitar::dyn_audioClips() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_audioClips");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioClips"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::AudioClip*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaTriggerColliderHandIndicator leftHandIndicator
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaTriggerColliderHandIndicator*& GlobalNamespace::OneStringGuitar::dyn_leftHandIndicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_leftHandIndicator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandIndicator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaTriggerColliderHandIndicator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaTriggerColliderHandIndicator rightHandIndicator
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaTriggerColliderHandIndicator*& GlobalNamespace::OneStringGuitar::dyn_rightHandIndicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_rightHandIndicator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandIndicator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaTriggerColliderHandIndicator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaTriggerColliderHandIndicator fretHandIndicator
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaTriggerColliderHandIndicator*& GlobalNamespace::OneStringGuitar::dyn_fretHandIndicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_fretHandIndicator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fretHandIndicator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaTriggerColliderHandIndicator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaTriggerColliderHandIndicator strumHandIndicator
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaTriggerColliderHandIndicator*& GlobalNamespace::OneStringGuitar::dyn_strumHandIndicator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_strumHandIndicator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strumHandIndicator"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaTriggerColliderHandIndicator**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single sphereRadius
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OneStringGuitar::dyn_sphereRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_sphereRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sphereRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean anyHit
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OneStringGuitar::dyn_anyHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_anyHit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "anyHit"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean handIn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::OneStringGuitar::dyn_handIn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_handIn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handIn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 spherecastSweep
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::OneStringGuitar::dyn_spherecastSweep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_spherecastSweep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "spherecastSweep"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Collider strumCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& GlobalNamespace::OneStringGuitar::dyn_strumCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_strumCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strumCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OneStringGuitar::dyn_maxVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_maxVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minVolume
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OneStringGuitar::dyn_minVolume() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_minVolume");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minVolume"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxVelocity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::OneStringGuitar::dyn_maxVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_maxVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Collider> strumList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Collider*>*& GlobalNamespace::OneStringGuitar::dyn_strumList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_strumList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "strumList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Collider*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 selfInstrumentIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::OneStringGuitar::dyn_selfInstrumentIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::dyn_selfInstrumentIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "selfInstrumentIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: OneStringGuitar.Start
void GlobalNamespace::OneStringGuitar::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OneStringGuitar.LateUpdate
void GlobalNamespace::OneStringGuitar::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OneStringGuitar.Unsnap
bool GlobalNamespace::OneStringGuitar::Unsnap() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::Unsnap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unsnap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OneStringGuitar.CheckFretFinger
void GlobalNamespace::OneStringGuitar::CheckFretFinger(::UnityEngine::Transform* finger) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::CheckFretFinger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckFretFinger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finger)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, finger);
}
// Autogenerated method: OneStringGuitar.UpdateNonPlayingPosition
void GlobalNamespace::OneStringGuitar::UpdateNonPlayingPosition(::UnityEngine::Vector3 positionTarget, ::UnityEngine::Quaternion rotationTarget) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::UpdateNonPlayingPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateNonPlayingPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(positionTarget), ::il2cpp_utils::ExtractType(rotationTarget)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, positionTarget, rotationTarget);
}
// Autogenerated method: OneStringGuitar.GenerateVectorOffset
void GlobalNamespace::OneStringGuitar::GenerateVectorOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::GenerateVectorOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateVectorOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OneStringGuitar.GenerateReverseGripOffset
void GlobalNamespace::OneStringGuitar::GenerateReverseGripOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::GenerateReverseGripOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateReverseGripOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OneStringGuitar.GenerateClubOffset
void GlobalNamespace::OneStringGuitar::GenerateClubOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::GenerateClubOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateClubOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OneStringGuitar.PlayNote
void GlobalNamespace::OneStringGuitar::PlayNote(int note, float volume) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::PlayNote");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ActionableItem*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, note, volume);
}
// Autogenerated method: OneStringGuitar.CanDeactivate
bool GlobalNamespace::OneStringGuitar::CanDeactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::CanDeactivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ActionableItem*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OneStringGuitar.CanActivate
bool GlobalNamespace::OneStringGuitar::CanActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::CanActivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ActionableItem*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: OneStringGuitar.OnActivate
void GlobalNamespace::OneStringGuitar::OnActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::OnActivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ActionableItem*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: OneStringGuitar.StateChange
void GlobalNamespace::OneStringGuitar::StateChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::OneStringGuitar::StateChange");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ActionableItem*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UmbrellaItem
#include "GlobalNamespace/UmbrellaItem.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform[] umbrellaBones
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Transform*>& GlobalNamespace::UmbrellaItem::dyn_umbrellaBones() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UmbrellaItem::dyn_umbrellaBones");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "umbrellaBones"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Transform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion[] startingAngles
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Quaternion>& GlobalNamespace::UmbrellaItem::dyn_startingAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UmbrellaItem::dyn_startingAngles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingAngles"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Quaternion[] endingAngles
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Quaternion>& GlobalNamespace::UmbrellaItem::dyn_endingAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UmbrellaItem::dyn_endingAngles");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endingAngles"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Quaternion>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UmbrellaItem umbrellaToCopy
[[deprecated("Use field access instead!")]] ::GlobalNamespace::UmbrellaItem*& GlobalNamespace::UmbrellaItem::dyn_umbrellaToCopy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UmbrellaItem::dyn_umbrellaToCopy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "umbrellaToCopy"))->offset;
  return *reinterpret_cast<::GlobalNamespace::UmbrellaItem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lerpValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::UmbrellaItem::dyn_lerpValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UmbrellaItem::dyn_lerpValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lerpValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Collider umbrellaRainDestroyTrigger
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& GlobalNamespace::UmbrellaItem::dyn_umbrellaRainDestroyTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UmbrellaItem::dyn_umbrellaRainDestroyTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "umbrellaRainDestroyTrigger"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UmbrellaItem.OnDisable
void GlobalNamespace::UmbrellaItem::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UmbrellaItem::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UmbrellaItem.LateUpdate
void GlobalNamespace::UmbrellaItem::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UmbrellaItem::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UmbrellaItem.GenerateEndingAngles
void GlobalNamespace::UmbrellaItem::GenerateEndingAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UmbrellaItem::GenerateEndingAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateEndingAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UmbrellaItem.GenerateStartingAngles
void GlobalNamespace::UmbrellaItem::GenerateStartingAngles() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UmbrellaItem::GenerateStartingAngles");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GenerateStartingAngles", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UmbrellaItem.OnActivate
void GlobalNamespace::UmbrellaItem::OnActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UmbrellaItem::OnActivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ActionableItem*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UmbrellaItem.CanActivate
bool GlobalNamespace::UmbrellaItem::CanActivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UmbrellaItem::CanActivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ActionableItem*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: UmbrellaItem.CanDeactivate
bool GlobalNamespace::UmbrellaItem::CanDeactivate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::UmbrellaItem::CanDeactivate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ActionableItem*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PurchaseCurrencyButton
#include "GlobalNamespace/PurchaseCurrencyButton.hpp"
// Including type: PurchaseCurrencyButton/<ButtonColorUpdate>d__3
#include "GlobalNamespace/PurchaseCurrencyButton_-ButtonColorUpdate-d__3.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String purchaseCurrencySize
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PurchaseCurrencyButton::dyn_purchaseCurrencySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PurchaseCurrencyButton::dyn_purchaseCurrencySize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "purchaseCurrencySize"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single buttonFadeTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::PurchaseCurrencyButton::dyn_buttonFadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PurchaseCurrencyButton::dyn_buttonFadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonFadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PurchaseCurrencyButton.ButtonColorUpdate
::System::Collections::IEnumerator* GlobalNamespace::PurchaseCurrencyButton::ButtonColorUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PurchaseCurrencyButton::ButtonColorUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ButtonColorUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: PurchaseCurrencyButton.ButtonActivation
void GlobalNamespace::PurchaseCurrencyButton::ButtonActivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PurchaseCurrencyButton::ButtonActivation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PurchaseCurrencyButton/<ButtonColorUpdate>d__3
#include "GlobalNamespace/PurchaseCurrencyButton_-ButtonColorUpdate-d__3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PurchaseCurrencyButton::$ButtonColorUpdate$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PurchaseCurrencyButton::$ButtonColorUpdate$d__3::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::PurchaseCurrencyButton::$ButtonColorUpdate$d__3::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PurchaseCurrencyButton::$ButtonColorUpdate$d__3::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PurchaseCurrencyButton <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PurchaseCurrencyButton*& GlobalNamespace::PurchaseCurrencyButton::$ButtonColorUpdate$d__3::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PurchaseCurrencyButton::$ButtonColorUpdate$d__3::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PurchaseCurrencyButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PurchaseCurrencyButton/<ButtonColorUpdate>d__3.System.IDisposable.Dispose
void GlobalNamespace::PurchaseCurrencyButton::$ButtonColorUpdate$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PurchaseCurrencyButton::$ButtonColorUpdate$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PurchaseCurrencyButton::$ButtonColorUpdate$d__3*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PurchaseCurrencyButton/<ButtonColorUpdate>d__3.MoveNext
bool GlobalNamespace::PurchaseCurrencyButton::$ButtonColorUpdate$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PurchaseCurrencyButton::$ButtonColorUpdate$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PurchaseCurrencyButton::$ButtonColorUpdate$d__3*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PurchaseCurrencyButton/<ButtonColorUpdate>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::PurchaseCurrencyButton::$ButtonColorUpdate$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PurchaseCurrencyButton::$ButtonColorUpdate$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PurchaseCurrencyButton::$ButtonColorUpdate$d__3*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: PurchaseCurrencyButton/<ButtonColorUpdate>d__3.System.Collections.IEnumerator.Reset
void GlobalNamespace::PurchaseCurrencyButton::$ButtonColorUpdate$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PurchaseCurrencyButton::$ButtonColorUpdate$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PurchaseCurrencyButton::$ButtonColorUpdate$d__3*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PurchaseCurrencyButton/<ButtonColorUpdate>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::PurchaseCurrencyButton::$ButtonColorUpdate$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PurchaseCurrencyButton::$ButtonColorUpdate$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PurchaseCurrencyButton::$ButtonColorUpdate$d__3*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PurchaseItemButton
#include "GlobalNamespace/PurchaseItemButton.hpp"
// Including type: PurchaseItemButton/<ButtonColorUpdate>d__2
#include "GlobalNamespace/PurchaseItemButton_-ButtonColorUpdate-d__2.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String buttonSide
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::PurchaseItemButton::dyn_buttonSide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PurchaseItemButton::dyn_buttonSide");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonSide"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PurchaseItemButton.ButtonColorUpdate
::System::Collections::IEnumerator* GlobalNamespace::PurchaseItemButton::ButtonColorUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PurchaseItemButton::ButtonColorUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ButtonColorUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: PurchaseItemButton.ButtonActivationWithHand
void GlobalNamespace::PurchaseItemButton::ButtonActivationWithHand(bool isLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PurchaseItemButton::ButtonActivationWithHand");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isLeftHand);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: PurchaseItemButton/<ButtonColorUpdate>d__2
#include "GlobalNamespace/PurchaseItemButton_-ButtonColorUpdate-d__2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::PurchaseItemButton::$ButtonColorUpdate$d__2::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PurchaseItemButton::$ButtonColorUpdate$d__2::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::PurchaseItemButton::$ButtonColorUpdate$d__2::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PurchaseItemButton::$ButtonColorUpdate$d__2::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PurchaseItemButton <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PurchaseItemButton*& GlobalNamespace::PurchaseItemButton::$ButtonColorUpdate$d__2::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PurchaseItemButton::$ButtonColorUpdate$d__2::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PurchaseItemButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PurchaseItemButton/<ButtonColorUpdate>d__2.System.IDisposable.Dispose
void GlobalNamespace::PurchaseItemButton::$ButtonColorUpdate$d__2::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PurchaseItemButton::$ButtonColorUpdate$d__2::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PurchaseItemButton::$ButtonColorUpdate$d__2*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PurchaseItemButton/<ButtonColorUpdate>d__2.MoveNext
bool GlobalNamespace::PurchaseItemButton::$ButtonColorUpdate$d__2::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PurchaseItemButton::$ButtonColorUpdate$d__2::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PurchaseItemButton::$ButtonColorUpdate$d__2*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: PurchaseItemButton/<ButtonColorUpdate>d__2.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::PurchaseItemButton::$ButtonColorUpdate$d__2::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PurchaseItemButton::$ButtonColorUpdate$d__2::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PurchaseItemButton::$ButtonColorUpdate$d__2*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: PurchaseItemButton/<ButtonColorUpdate>d__2.System.Collections.IEnumerator.Reset
void GlobalNamespace::PurchaseItemButton::$ButtonColorUpdate$d__2::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PurchaseItemButton::$ButtonColorUpdate$d__2::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PurchaseItemButton::$ButtonColorUpdate$d__2*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PurchaseItemButton/<ButtonColorUpdate>d__2.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::PurchaseItemButton::$ButtonColorUpdate$d__2::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PurchaseItemButton::$ButtonColorUpdate$d__2::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::PurchaseItemButton::$ButtonColorUpdate$d__2*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ShoppingCart
#include "GlobalNamespace/ShoppingCart.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public ShoppingCart instance
::GlobalNamespace::ShoppingCart* GlobalNamespace::ShoppingCart::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShoppingCart::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::ShoppingCart*>("", "ShoppingCart", "instance"));
}
// Autogenerated static field setter
// Set static field: static public ShoppingCart instance
void GlobalNamespace::ShoppingCart::_set_instance(::GlobalNamespace::ShoppingCart* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShoppingCart::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "ShoppingCart", "instance", value));
}
// Autogenerated method: ShoppingCart.Awake
void GlobalNamespace::ShoppingCart::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShoppingCart::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ShoppingCart.Start
void GlobalNamespace::ShoppingCart::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShoppingCart::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ShoppingCart.Update
void GlobalNamespace::ShoppingCart::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ShoppingCart::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: SmoothLoop
#include "GlobalNamespace/SmoothLoop.hpp"
// Including type: SmoothLoop/<DelayedStart>d__6
#include "GlobalNamespace/SmoothLoop_-DelayedStart-d__6.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource source
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::SmoothLoop::dyn_source() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothLoop::dyn_source");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "source"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single delay
[[deprecated("Use field access instead!")]] float& GlobalNamespace::SmoothLoop::dyn_delay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothLoop::dyn_delay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "delay"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean randomStart
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::SmoothLoop::dyn_randomStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothLoop::dyn_randomStart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "randomStart"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SmoothLoop.Start
void GlobalNamespace::SmoothLoop::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothLoop::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SmoothLoop.Update
void GlobalNamespace::SmoothLoop::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothLoop::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SmoothLoop.OnEnable
void GlobalNamespace::SmoothLoop::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothLoop::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SmoothLoop.DelayedStart
::System::Collections::IEnumerator* GlobalNamespace::SmoothLoop::DelayedStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothLoop::DelayedStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DelayedStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: SmoothLoop/<DelayedStart>d__6
#include "GlobalNamespace/SmoothLoop_-DelayedStart-d__6.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::SmoothLoop::$DelayedStart$d__6::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothLoop::$DelayedStart$d__6::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::SmoothLoop::$DelayedStart$d__6::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothLoop::$DelayedStart$d__6::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public SmoothLoop <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::SmoothLoop*& GlobalNamespace::SmoothLoop::$DelayedStart$d__6::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothLoop::$DelayedStart$d__6::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::SmoothLoop**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: SmoothLoop/<DelayedStart>d__6.System.IDisposable.Dispose
void GlobalNamespace::SmoothLoop::$DelayedStart$d__6::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothLoop::$DelayedStart$d__6::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SmoothLoop::$DelayedStart$d__6*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SmoothLoop/<DelayedStart>d__6.MoveNext
bool GlobalNamespace::SmoothLoop::$DelayedStart$d__6::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothLoop::$DelayedStart$d__6::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SmoothLoop::$DelayedStart$d__6*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: SmoothLoop/<DelayedStart>d__6.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::SmoothLoop::$DelayedStart$d__6::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothLoop::$DelayedStart$d__6::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SmoothLoop::$DelayedStart$d__6*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: SmoothLoop/<DelayedStart>d__6.System.Collections.IEnumerator.Reset
void GlobalNamespace::SmoothLoop::$DelayedStart$d__6::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothLoop::$DelayedStart$d__6::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SmoothLoop::$DelayedStart$d__6*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: SmoothLoop/<DelayedStart>d__6.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::SmoothLoop::$DelayedStart$d__6::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::SmoothLoop::$DelayedStart$d__6::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::SmoothLoop::$DelayedStart$d__6*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WardrobeFunctionButton
#include "GlobalNamespace/WardrobeFunctionButton.hpp"
// Including type: WardrobeFunctionButton/<ButtonColorUpdate>d__4
#include "GlobalNamespace/WardrobeFunctionButton_-ButtonColorUpdate-d__4.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String function
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::WardrobeFunctionButton::dyn_function() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WardrobeFunctionButton::dyn_function");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "function"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single buttonFadeTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::WardrobeFunctionButton::dyn_buttonFadeTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WardrobeFunctionButton::dyn_buttonFadeTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "buttonFadeTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WardrobeFunctionButton.ButtonColorUpdate
::System::Collections::IEnumerator* GlobalNamespace::WardrobeFunctionButton::ButtonColorUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WardrobeFunctionButton::ButtonColorUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ButtonColorUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: WardrobeFunctionButton.ButtonActivation
void GlobalNamespace::WardrobeFunctionButton::ButtonActivation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WardrobeFunctionButton::ButtonActivation");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WardrobeFunctionButton.UpdateColor
void GlobalNamespace::WardrobeFunctionButton::UpdateColor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WardrobeFunctionButton::UpdateColor");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: WardrobeFunctionButton/<ButtonColorUpdate>d__4
#include "GlobalNamespace/WardrobeFunctionButton_-ButtonColorUpdate-d__4.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::WardrobeFunctionButton::$ButtonColorUpdate$d__4::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WardrobeFunctionButton::$ButtonColorUpdate$d__4::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::WardrobeFunctionButton::$ButtonColorUpdate$d__4::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WardrobeFunctionButton::$ButtonColorUpdate$d__4::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public WardrobeFunctionButton <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::WardrobeFunctionButton*& GlobalNamespace::WardrobeFunctionButton::$ButtonColorUpdate$d__4::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WardrobeFunctionButton::$ButtonColorUpdate$d__4::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::WardrobeFunctionButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WardrobeFunctionButton/<ButtonColorUpdate>d__4.System.IDisposable.Dispose
void GlobalNamespace::WardrobeFunctionButton::$ButtonColorUpdate$d__4::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WardrobeFunctionButton::$ButtonColorUpdate$d__4::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::WardrobeFunctionButton::$ButtonColorUpdate$d__4*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WardrobeFunctionButton/<ButtonColorUpdate>d__4.MoveNext
bool GlobalNamespace::WardrobeFunctionButton::$ButtonColorUpdate$d__4::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WardrobeFunctionButton::$ButtonColorUpdate$d__4::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::WardrobeFunctionButton::$ButtonColorUpdate$d__4*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: WardrobeFunctionButton/<ButtonColorUpdate>d__4.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::WardrobeFunctionButton::$ButtonColorUpdate$d__4::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WardrobeFunctionButton::$ButtonColorUpdate$d__4::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::WardrobeFunctionButton::$ButtonColorUpdate$d__4*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: WardrobeFunctionButton/<ButtonColorUpdate>d__4.System.Collections.IEnumerator.Reset
void GlobalNamespace::WardrobeFunctionButton::$ButtonColorUpdate$d__4::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WardrobeFunctionButton::$ButtonColorUpdate$d__4::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::WardrobeFunctionButton::$ButtonColorUpdate$d__4*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: WardrobeFunctionButton/<ButtonColorUpdate>d__4.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::WardrobeFunctionButton::$ButtonColorUpdate$d__4::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WardrobeFunctionButton::$ButtonColorUpdate$d__4::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::WardrobeFunctionButton::$ButtonColorUpdate$d__4*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: WardrobeItemButton
#include "GlobalNamespace/WardrobeItemButton.hpp"
// Including type: HeadModel
#include "GlobalNamespace/HeadModel.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public HeadModel controlledModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HeadModel*& GlobalNamespace::WardrobeItemButton::dyn_controlledModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WardrobeItemButton::dyn_controlledModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controlledModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HeadModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.CosmeticsController/CosmeticItem currentCosmeticItem
[[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::CosmeticItem& GlobalNamespace::WardrobeItemButton::dyn_currentCosmeticItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WardrobeItemButton::dyn_currentCosmeticItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentCosmeticItem"))->offset;
  return *reinterpret_cast<::GorillaNetworking::CosmeticsController::CosmeticItem*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: WardrobeItemButton.ButtonActivationWithHand
void GlobalNamespace::WardrobeItemButton::ButtonActivationWithHand(bool isLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::WardrobeItemButton::ButtonActivationWithHand");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaPressableButton*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isLeftHand);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaBodyPhysics
#include "GlobalNamespace/GorillaBodyPhysics.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject bodyCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaBodyPhysics::dyn_bodyCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBodyPhysics::dyn_bodyCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 bodyColliderOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaBodyPhysics::dyn_bodyColliderOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBodyPhysics::dyn_bodyColliderOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyColliderOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform headsetTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaBodyPhysics::dyn_headsetTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBodyPhysics::dyn_headsetTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headsetTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaBodyPhysics.FixedUpdate
void GlobalNamespace::GorillaBodyPhysics::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBodyPhysics::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaCameraFollow
#include "GlobalNamespace/GorillaCameraFollow.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform playerHead
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaCameraFollow::dyn_playerHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraFollow::dyn_playerHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerHead"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject cameraParent
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaCameraFollow::dyn_cameraParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraFollow::dyn_cameraParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraParent"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 headOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaCameraFollow::dyn_headOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraFollow::dyn_headOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 eulerRotationOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaCameraFollow::dyn_eulerRotationOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraFollow::dyn_eulerRotationOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "eulerRotationOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaCameraFollow.Start
void GlobalNamespace::GorillaCameraFollow::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraFollow::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaCameraFollow.LateUpdate
void GlobalNamespace::GorillaCameraFollow::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraFollow::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaCameraSceneTrigger
#include "GlobalNamespace/GorillaCameraSceneTrigger.hpp"
// Including type: GorillaSceneCamera
#include "GlobalNamespace/GorillaSceneCamera.hpp"
// Including type: GorillaCameraTriggerIndex
#include "GlobalNamespace/GorillaCameraTriggerIndex.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GorillaSceneCamera sceneCamera
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaSceneCamera*& GlobalNamespace::GorillaCameraSceneTrigger::dyn_sceneCamera() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraSceneTrigger::dyn_sceneCamera");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneCamera"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaSceneCamera**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaCameraTriggerIndex currentSceneTrigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaCameraTriggerIndex*& GlobalNamespace::GorillaCameraSceneTrigger::dyn_currentSceneTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraSceneTrigger::dyn_currentSceneTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentSceneTrigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaCameraTriggerIndex**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaCameraTriggerIndex mostRecentSceneTrigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaCameraTriggerIndex*& GlobalNamespace::GorillaCameraSceneTrigger::dyn_mostRecentSceneTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraSceneTrigger::dyn_mostRecentSceneTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mostRecentSceneTrigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaCameraTriggerIndex**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaCameraSceneTrigger.ChangeScene
void GlobalNamespace::GorillaCameraSceneTrigger::ChangeScene(::GlobalNamespace::GorillaCameraTriggerIndex* triggerLeft) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraSceneTrigger::ChangeScene");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeScene", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(triggerLeft)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, triggerLeft);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaCameraTriggerIndex
#include "GlobalNamespace/GorillaCameraTriggerIndex.hpp"
// Including type: GorillaCameraSceneTrigger
#include "GlobalNamespace/GorillaCameraSceneTrigger.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 sceneTriggerIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaCameraTriggerIndex::dyn_sceneTriggerIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraTriggerIndex::dyn_sceneTriggerIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneTriggerIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaCameraSceneTrigger parentTrigger
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaCameraSceneTrigger*& GlobalNamespace::GorillaCameraTriggerIndex::dyn_parentTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraTriggerIndex::dyn_parentTrigger");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parentTrigger"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaCameraSceneTrigger**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaCameraTriggerIndex.Start
void GlobalNamespace::GorillaCameraTriggerIndex::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraTriggerIndex::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaCameraTriggerIndex.OnTriggerEnter
void GlobalNamespace::GorillaCameraTriggerIndex::OnTriggerEnter(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraTriggerIndex::OnTriggerEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated method: GorillaCameraTriggerIndex.OnTriggerExit
void GlobalNamespace::GorillaCameraTriggerIndex::OnTriggerExit(::UnityEngine::Collider* other) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCameraTriggerIndex::OnTriggerExit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnTriggerExit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(other)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, other);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaHandHistory
#include "GlobalNamespace/GorillaHandHistory.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 direction
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaHandHistory::dyn_direction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHandHistory::dyn_direction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "direction"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaHandHistory::dyn_lastPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHandHistory::dyn_lastPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastLastPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaHandHistory::dyn_lastLastPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHandHistory::dyn_lastLastPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastLastPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaHandHistory.Start
void GlobalNamespace::GorillaHandHistory::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHandHistory::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHandHistory.FixedUpdate
void GlobalNamespace::GorillaHandHistory::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHandHistory::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaHeadset
#include "GlobalNamespace/GorillaHeadset.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GorillaHeadset.Start
void GlobalNamespace::GorillaHeadset::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHeadset::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHeadset.Update
void GlobalNamespace::GorillaHeadset::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHeadset::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaIKHandTarget
#include "GlobalNamespace/GorillaIKHandTarget.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRController
#include "UnityEngine/XR/Interaction/Toolkit/XRController.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject handToStickTo
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaIKHandTarget::dyn_handToStickTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKHandTarget::dyn_handToStickTo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handToStickTo"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean isLeftHand
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaIKHandTarget::dyn_isLeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKHandTarget::dyn_isLeftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isLeftHand"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single hapticStrength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaIKHandTarget::dyn_hapticStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKHandTarget::dyn_hapticStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hapticStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody thisRigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GlobalNamespace::GorillaIKHandTarget::dyn_thisRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKHandTarget::dyn_thisRigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thisRigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.XRController controllerReference
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::XRController*& GlobalNamespace::GorillaIKHandTarget::dyn_controllerReference() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKHandTarget::dyn_controllerReference");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "controllerReference"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::XRController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaIKHandTarget.Start
void GlobalNamespace::GorillaIKHandTarget::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKHandTarget::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaIKHandTarget.FixedUpdate
void GlobalNamespace::GorillaIKHandTarget::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKHandTarget::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaIKHandTarget.OnCollisionEnter
void GlobalNamespace::GorillaIKHandTarget::OnCollisionEnter(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaIKHandTarget::OnCollisionEnter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionEnter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaPlaySpace
#include "GlobalNamespace/GorillaPlaySpace.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private GorillaPlaySpace _instance
::GlobalNamespace::GorillaPlaySpace* GlobalNamespace::GorillaPlaySpace::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaPlaySpace*>("", "GorillaPlaySpace", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private GorillaPlaySpace _instance
void GlobalNamespace::GorillaPlaySpace::_set__instance(::GlobalNamespace::GorillaPlaySpace* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaPlaySpace", "_instance", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Collider headCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& GlobalNamespace::GorillaPlaySpace::dyn_headCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_headCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Collider bodyCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& GlobalNamespace::GorillaPlaySpace::dyn_bodyCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_bodyCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightHandTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaPlaySpace::dyn_rightHandTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_rightHandTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftHandTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaPlaySpace::dyn_leftHandTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_leftHandTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 headColliderOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaPlaySpace::dyn_headColliderOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_headColliderOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headColliderOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 bodyColliderOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaPlaySpace::dyn_bodyColliderOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_bodyColliderOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyColliderOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastLeftHandPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaPlaySpace::dyn_lastLeftHandPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_lastLeftHandPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastLeftHandPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastRightHandPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaPlaySpace::dyn_lastRightHandPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_lastRightHandPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastRightHandPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastLeftHandPositionForTag
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaPlaySpace::dyn_lastLeftHandPositionForTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_lastLeftHandPositionForTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastLeftHandPositionForTag"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastRightHandPositionForTag
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaPlaySpace::dyn_lastRightHandPositionForTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_lastRightHandPositionForTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastRightHandPositionForTag"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastBodyPositionForTag
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaPlaySpace::dyn_lastBodyPositionForTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_lastBodyPositionForTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastBodyPositionForTag"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastHeadPositionForTag
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaPlaySpace::dyn_lastHeadPositionForTag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_lastHeadPositionForTag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastHeadPositionForTag"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody playspaceRigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GlobalNamespace::GorillaPlaySpace::dyn_playspaceRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_playspaceRigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playspaceRigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform headsetTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaPlaySpace::dyn_headsetTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_headsetTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headsetTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 rightHandOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaPlaySpace::dyn_rightHandOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_rightHandOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 leftHandOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaPlaySpace::dyn_leftHandOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_leftHandOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRRig vrRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::GorillaPlaySpace::dyn_vrRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_vrRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vrRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRRig offlineVRRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::GorillaPlaySpace::dyn_offlineVRRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_offlineVRRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "offlineVRRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single vibrationCooldown
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_vibrationCooldown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_vibrationCooldown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vibrationCooldown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single vibrationDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_vibrationDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_vibrationDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vibrationDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single leftLastTouchedSurface
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_leftLastTouchedSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_leftLastTouchedSurface");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftLastTouchedSurface"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single rightLastTouchedSurface
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_rightLastTouchedSurface() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_rightLastTouchedSurface");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightLastTouchedSurface"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRRig myVRRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::GorillaPlaySpace::dyn_myVRRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_myVRRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "myVRRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single bodyHeight
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_bodyHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_bodyHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tagCooldown
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_tagCooldown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_tagCooldown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagCooldown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single taggedTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_taggedTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_taggedTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "taggedTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single disconnectTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_disconnectTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_disconnectTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disconnectTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxStepVelocity
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_maxStepVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_maxStepVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxStepVelocity"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single hapticWaitSeconds
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_hapticWaitSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_hapticWaitSeconds");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hapticWaitSeconds"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tapHapticDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_tapHapticDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_tapHapticDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tapHapticDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tapHapticStrength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_tapHapticStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_tapHapticStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tapHapticStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tagHapticDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_tagHapticDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_tagHapticDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagHapticDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single tagHapticStrength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_tagHapticStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_tagHapticStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tagHapticStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single taggedHapticDuration
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_taggedHapticDuration() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_taggedHapticDuration");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "taggedHapticDuration"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single taggedHapticStrength
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpace::dyn_taggedHapticStrength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::dyn_taggedHapticStrength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "taggedHapticStrength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaPlaySpace.get_Instance
::GlobalNamespace::GorillaPlaySpace* GlobalNamespace::GorillaPlaySpace::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaPlaySpace", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GlobalNamespace::GorillaPlaySpace*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaPlaySpace.Awake
void GlobalNamespace::GorillaPlaySpace::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpace::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaPlaySpaceForces
#include "GlobalNamespace/GorillaPlaySpaceForces.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject rightHand
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaPlaySpaceForces::dyn_rightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_rightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject leftHand
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaPlaySpaceForces::dyn_leftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_leftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Collider bodyCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& GlobalNamespace::GorillaPlaySpaceForces::dyn_bodyCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_bodyCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider leftHandCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& GlobalNamespace::GorillaPlaySpaceForces::dyn_leftHandCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_leftHandCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider rightHandCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& GlobalNamespace::GorillaPlaySpaceForces::dyn_rightHandCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_rightHandCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightHandTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaPlaySpaceForces::dyn_rightHandTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_rightHandTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftHandTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaPlaySpaceForces::dyn_leftHandTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_leftHandTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody leftHandRigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GlobalNamespace::GorillaPlaySpaceForces::dyn_leftHandRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_leftHandRigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandRigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody rightHandRigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GlobalNamespace::GorillaPlaySpaceForces::dyn_rightHandRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_rightHandRigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandRigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 bodyColliderOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaPlaySpaceForces::dyn_bodyColliderOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_bodyColliderOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyColliderOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single forceConstant
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaPlaySpaceForces::dyn_forceConstant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_forceConstant");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forceConstant"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastLeftHandPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaPlaySpaceForces::dyn_lastLeftHandPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_lastLeftHandPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastLeftHandPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastRightHandPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaPlaySpaceForces::dyn_lastRightHandPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_lastRightHandPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastRightHandPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody playspaceRigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GlobalNamespace::GorillaPlaySpaceForces::dyn_playspaceRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_playspaceRigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playspaceRigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform headsetTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::GorillaPlaySpaceForces::dyn_headsetTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::dyn_headsetTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headsetTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaPlaySpaceForces.Start
void GlobalNamespace::GorillaPlaySpaceForces::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlaySpaceForces.FixedUpdate
void GlobalNamespace::GorillaPlaySpaceForces::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlaySpaceForces::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaQuitBox
#include "GlobalNamespace/GorillaQuitBox.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GorillaQuitBox.Start
void GlobalNamespace::GorillaQuitBox::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaQuitBox::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaQuitBox.OnBoxTriggered
void GlobalNamespace::GorillaQuitBox::OnBoxTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaQuitBox::OnBoxTriggered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTriggerBox*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaSceneTransform
#include "GlobalNamespace/GorillaSceneTransform.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 scenePosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaSceneTransform::dyn_scenePosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSceneTransform::dyn_scenePosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scenePosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 sceneRotation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaSceneTransform::dyn_sceneRotation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSceneTransform::dyn_sceneRotation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneRotation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Collider sceneCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::Collider*& GlobalNamespace::GorillaSceneTransform::dyn_sceneCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSceneTransform::dyn_sceneCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::Collider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaSceneCamera
#include "GlobalNamespace/GorillaSceneCamera.hpp"
// Including type: GorillaSceneTransform
#include "GlobalNamespace/GorillaSceneTransform.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GorillaSceneTransform[] sceneTransforms
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::GorillaSceneTransform*>& GlobalNamespace::GorillaSceneCamera::dyn_sceneTransforms() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSceneCamera::dyn_sceneTransforms");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sceneTransforms"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::GorillaSceneTransform*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaSceneCamera.SetSceneCamera
void GlobalNamespace::GorillaSceneCamera::SetSceneCamera(int sceneIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSceneCamera::SetSceneCamera");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetSceneCamera", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sceneIndex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, sceneIndex);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaSurfaceOverride
#include "GlobalNamespace/GorillaSurfaceOverride.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 overrideIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaSurfaceOverride::dyn_overrideIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaSurfaceOverride::dyn_overrideIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaTriggerBox
#include "GlobalNamespace/GorillaTriggerBox.hpp"
// Including type: GorillaTriggerBox/<TestTrigger>d__3
#include "GlobalNamespace/GorillaTriggerBox_-TestTrigger-d__3.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean triggerBoxOnce
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaTriggerBox::dyn_triggerBoxOnce() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerBox::dyn_triggerBoxOnce");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "triggerBoxOnce"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTriggerBox.OnEnable
void GlobalNamespace::GorillaTriggerBox::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerBox::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTriggerBox.OnDisable
void GlobalNamespace::GorillaTriggerBox::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerBox::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTriggerBox.TestTrigger
::System::Collections::IEnumerator* GlobalNamespace::GorillaTriggerBox::TestTrigger() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerBox::TestTrigger");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "TestTrigger", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTriggerBox.OnBoxTriggered
void GlobalNamespace::GorillaTriggerBox::OnBoxTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerBox::OnBoxTriggered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTriggerBox*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaTriggerBox/<TestTrigger>d__3
#include "GlobalNamespace/GorillaTriggerBox_-TestTrigger-d__3.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaTriggerBox::$TestTrigger$d__3::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerBox::$TestTrigger$d__3::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaTriggerBox::$TestTrigger$d__3::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerBox::$TestTrigger$d__3::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaTriggerBox <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaTriggerBox*& GlobalNamespace::GorillaTriggerBox::$TestTrigger$d__3::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerBox::$TestTrigger$d__3::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaTriggerBox**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTriggerBox/<TestTrigger>d__3.System.IDisposable.Dispose
void GlobalNamespace::GorillaTriggerBox::$TestTrigger$d__3::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerBox::$TestTrigger$d__3::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTriggerBox::$TestTrigger$d__3*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTriggerBox/<TestTrigger>d__3.MoveNext
bool GlobalNamespace::GorillaTriggerBox::$TestTrigger$d__3::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerBox::$TestTrigger$d__3::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTriggerBox::$TestTrigger$d__3*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTriggerBox/<TestTrigger>d__3.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::GorillaTriggerBox::$TestTrigger$d__3::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerBox::$TestTrigger$d__3::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTriggerBox::$TestTrigger$d__3*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTriggerBox/<TestTrigger>d__3.System.Collections.IEnumerator.Reset
void GlobalNamespace::GorillaTriggerBox::$TestTrigger$d__3::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerBox::$TestTrigger$d__3::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTriggerBox::$TestTrigger$d__3*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaTriggerBox/<TestTrigger>d__3.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GorillaTriggerBox::$TestTrigger$d__3::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerBox::$TestTrigger$d__3::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTriggerBox::$TestTrigger$d__3*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaTriggerBoxGameFlag
#include "GlobalNamespace/GorillaTriggerBoxGameFlag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String functionName
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaTriggerBoxGameFlag::dyn_functionName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerBoxGameFlag::dyn_functionName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "functionName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTriggerBoxGameFlag.OnBoxTriggered
void GlobalNamespace::GorillaTriggerBoxGameFlag::OnBoxTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerBoxGameFlag::OnBoxTriggered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTriggerBox*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaTriggerBoxTeleport
#include "GlobalNamespace/GorillaTriggerBoxTeleport.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 teleportLocation
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaTriggerBoxTeleport::dyn_teleportLocation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerBoxTeleport::dyn_teleportLocation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "teleportLocation"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject cameraOffest
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaTriggerBoxTeleport::dyn_cameraOffest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerBoxTeleport::dyn_cameraOffest");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cameraOffest"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaTriggerBoxTeleport.OnBoxTriggered
void GlobalNamespace::GorillaTriggerBoxTeleport::OnBoxTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaTriggerBoxTeleport::OnBoxTriggered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTriggerBox*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaWalkingGrab
#include "GlobalNamespace/GorillaWalkingGrab.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.Collision
#include "UnityEngine/Collision.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject handToStickTo
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GlobalNamespace::GorillaWalkingGrab::dyn_handToStickTo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaWalkingGrab::dyn_handToStickTo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "handToStickTo"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single ratioToUse
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaWalkingGrab::dyn_ratioToUse() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaWalkingGrab::dyn_ratioToUse");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ratioToUse"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single forceMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaWalkingGrab::dyn_forceMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaWalkingGrab::dyn_forceMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "forceMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 historySteps
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaWalkingGrab::dyn_historySteps() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaWalkingGrab::dyn_historySteps");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "historySteps"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Rigidbody playspaceRigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GlobalNamespace::GorillaWalkingGrab::dyn_playspaceRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaWalkingGrab::dyn_playspaceRigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playspaceRigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody thisRigidbody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GlobalNamespace::GorillaWalkingGrab::dyn_thisRigidbody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaWalkingGrab::dyn_thisRigidbody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "thisRigidbody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaWalkingGrab::dyn_lastPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaWalkingGrab::dyn_lastPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 maybeLastPositionIDK
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaWalkingGrab::dyn_maybeLastPositionIDK() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaWalkingGrab::dyn_maybeLastPositionIDK");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maybeLastPositionIDK"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] positionHistory
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GlobalNamespace::GorillaWalkingGrab::dyn_positionHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaWalkingGrab::dyn_positionHistory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "positionHistory"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 historyIndex
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaWalkingGrab::dyn_historyIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaWalkingGrab::dyn_historyIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "historyIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaWalkingGrab.Start
void GlobalNamespace::GorillaWalkingGrab::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaWalkingGrab::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaWalkingGrab.FixedUpdate
void GlobalNamespace::GorillaWalkingGrab::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaWalkingGrab::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaWalkingGrab.MakeJump
bool GlobalNamespace::GorillaWalkingGrab::MakeJump() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaWalkingGrab::MakeJump");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MakeJump", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaWalkingGrab.OnCollisionStay
void GlobalNamespace::GorillaWalkingGrab::OnCollisionStay(::UnityEngine::Collision* collision) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaWalkingGrab::OnCollisionStay");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnCollisionStay", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(collision)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, collision);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PrimaryButtonEvent
#include "GlobalNamespace/PrimaryButtonEvent.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: PrimaryButtonWatcher
#include "GlobalNamespace/PrimaryButtonWatcher.hpp"
// Including type: PrimaryButtonEvent
#include "GlobalNamespace/PrimaryButtonEvent.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public PrimaryButtonEvent primaryButtonPress
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PrimaryButtonEvent*& GlobalNamespace::PrimaryButtonWatcher::dyn_primaryButtonPress() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrimaryButtonWatcher::dyn_primaryButtonPress");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "primaryButtonPress"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PrimaryButtonEvent**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean lastButtonState
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::PrimaryButtonWatcher::dyn_lastButtonState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrimaryButtonWatcher::dyn_lastButtonState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastButtonState"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.InputDevice> devicesWithPrimaryButton
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::InputDevice>*& GlobalNamespace::PrimaryButtonWatcher::dyn_devicesWithPrimaryButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrimaryButtonWatcher::dyn_devicesWithPrimaryButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "devicesWithPrimaryButton"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::InputDevice>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: PrimaryButtonWatcher.Awake
void GlobalNamespace::PrimaryButtonWatcher::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrimaryButtonWatcher::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PrimaryButtonWatcher.OnEnable
void GlobalNamespace::PrimaryButtonWatcher::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrimaryButtonWatcher::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PrimaryButtonWatcher.OnDisable
void GlobalNamespace::PrimaryButtonWatcher::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrimaryButtonWatcher::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: PrimaryButtonWatcher.InputDevices_deviceConnected
void GlobalNamespace::PrimaryButtonWatcher::InputDevices_deviceConnected(::UnityEngine::XR::InputDevice device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrimaryButtonWatcher::InputDevices_deviceConnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InputDevices_deviceConnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device);
}
// Autogenerated method: PrimaryButtonWatcher.InputDevices_deviceDisconnected
void GlobalNamespace::PrimaryButtonWatcher::InputDevices_deviceDisconnected(::UnityEngine::XR::InputDevice device) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrimaryButtonWatcher::InputDevices_deviceDisconnected");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InputDevices_deviceDisconnected", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(device)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, device);
}
// Autogenerated method: PrimaryButtonWatcher.Update
void GlobalNamespace::PrimaryButtonWatcher::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::PrimaryButtonWatcher::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: AddCollidersToParticleSystemTriggers
#include "GlobalNamespace/AddCollidersToParticleSystemTriggers.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.ParticleSystem
#include "UnityEngine/ParticleSystem.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Collider[] collidersToAdd
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& GlobalNamespace::AddCollidersToParticleSystemTriggers::dyn_collidersToAdd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AddCollidersToParticleSystemTriggers::dyn_collidersToAdd");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collidersToAdd"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.ParticleSystem particleSystemToUpdate
[[deprecated("Use field access instead!")]] ::UnityEngine::ParticleSystem*& GlobalNamespace::AddCollidersToParticleSystemTriggers::dyn_particleSystemToUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AddCollidersToParticleSystemTriggers::dyn_particleSystemToUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "particleSystemToUpdate"))->offset;
  return *reinterpret_cast<::UnityEngine::ParticleSystem**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 count
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AddCollidersToParticleSystemTriggers::dyn_count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AddCollidersToParticleSystemTriggers::dyn_count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 index
[[deprecated("Use field access instead!")]] int& GlobalNamespace::AddCollidersToParticleSystemTriggers::dyn_index() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AddCollidersToParticleSystemTriggers::dyn_index");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "index"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: AddCollidersToParticleSystemTriggers.Update
void GlobalNamespace::AddCollidersToParticleSystemTriggers::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::AddCollidersToParticleSystemTriggers::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: BlinkingLight
#include "GlobalNamespace/BlinkingLight.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: UnityEngine.MeshRenderer
#include "UnityEngine/MeshRenderer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material[] materialArray
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Material*>& GlobalNamespace::BlinkingLight::dyn_materialArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlinkingLight::dyn_materialArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialArray"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Material*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BlinkingLight::dyn_minTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlinkingLight::dyn_minTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BlinkingLight::dyn_maxTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlinkingLight::dyn_maxTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single nextChange
[[deprecated("Use field access instead!")]] float& GlobalNamespace::BlinkingLight::dyn_nextChange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlinkingLight::dyn_nextChange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nextChange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshRenderer meshRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshRenderer*& GlobalNamespace::BlinkingLight::dyn_meshRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlinkingLight::dyn_meshRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meshRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshRenderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: BlinkingLight.Awake
void GlobalNamespace::BlinkingLight::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlinkingLight::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: BlinkingLight.Update
void GlobalNamespace::BlinkingLight::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::BlinkingLight::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaFlag
#include "GlobalNamespace/GorillaFlag.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean isRedFlag
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaFlag::dyn_isRedFlag() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFlag::dyn_isRedFlag");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRedFlag"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaFlag.OnTriggered
void GlobalNamespace::GorillaFlag::OnTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFlag::OnTriggered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTrigger*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaFlagSpawn
#include "GlobalNamespace/GorillaFlagSpawn.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean isRedFlagSpawn
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaFlagSpawn::dyn_isRedFlagSpawn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaFlagSpawn::dyn_isRedFlagSpawn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRedFlagSpawn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaPlayerCounter
#include "GlobalNamespace/GorillaPlayerCounter.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean isRedTeam
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaPlayerCounter::dyn_isRedTeam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerCounter::dyn_isRedTeam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRedTeam"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text text
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GorillaPlayerCounter::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerCounter::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String attribute
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaPlayerCounter::dyn_attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerCounter::dyn_attribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attribute"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaPlayerCounter.Awake
void GlobalNamespace::GorillaPlayerCounter::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerCounter::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaPlayerCounter.Update
void GlobalNamespace::GorillaPlayerCounter::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaPlayerCounter::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaScoreCounter
#include "GlobalNamespace/GorillaScoreCounter.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean isRedTeam
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaScoreCounter::dyn_isRedTeam() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreCounter::dyn_isRedTeam");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isRedTeam"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text text
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GlobalNamespace::GorillaScoreCounter::dyn_text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreCounter::dyn_text");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "text"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String attribute
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaScoreCounter::dyn_attribute() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreCounter::dyn_attribute");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attribute"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaScoreCounter.Awake
void GlobalNamespace::GorillaScoreCounter::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreCounter::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaScoreCounter.Update
void GlobalNamespace::GorillaScoreCounter::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaScoreCounter::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Campfire
#include "GlobalNamespace/Campfire.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform baseFire
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::Campfire::dyn_baseFire() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_baseFire");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseFire"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform middleFire
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::Campfire::dyn_middleFire() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_middleFire");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "middleFire"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform topFire
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::Campfire::dyn_topFire() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_topFire");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "topFire"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single baseMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_baseMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_baseMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "baseMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single middleMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_middleMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_middleMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "middleMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single topMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_topMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_topMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "topMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bottomRange
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_bottomRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_bottomRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bottomRange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single middleRange
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_middleRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_middleRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "middleRange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single topRange
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_topRange() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_topRange");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "topRange"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastAngleBottom
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_lastAngleBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_lastAngleBottom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastAngleBottom"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastAngleMiddle
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_lastAngleMiddle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_lastAngleMiddle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastAngleMiddle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastAngleTop
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_lastAngleTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_lastAngleTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastAngleTop"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single perlinStepBottom
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_perlinStepBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_perlinStepBottom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perlinStepBottom"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single perlinStepMiddle
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_perlinStepMiddle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_perlinStepMiddle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perlinStepMiddle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single perlinStepTop
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_perlinStepTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_perlinStepTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perlinStepTop"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single perlinBottom
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_perlinBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_perlinBottom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perlinBottom"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single perlinMiddle
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_perlinMiddle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_perlinMiddle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perlinMiddle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single perlinTop
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_perlinTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_perlinTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "perlinTop"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single startingRotationBottom
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_startingRotationBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_startingRotationBottom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingRotationBottom"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single startingRotationMiddle
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_startingRotationMiddle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_startingRotationMiddle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingRotationMiddle"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single startingRotationTop
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_startingRotationTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_startingRotationTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingRotationTop"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single slerp
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_slerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_slerp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slerp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean mergedBottom
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Campfire::dyn_mergedBottom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_mergedBottom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mergedBottom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean mergedMiddle
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Campfire::dyn_mergedMiddle() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_mergedMiddle");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mergedMiddle"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean mergedTop
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Campfire::dyn_mergedTop() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_mergedTop");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mergedTop"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String lastTimeOfDay
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::Campfire::dyn_lastTimeOfDay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_lastTimeOfDay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastTimeOfDay"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Material mat
[[deprecated("Use field access instead!")]] ::UnityEngine::Material*& GlobalNamespace::Campfire::dyn_mat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_mat");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mat"))->offset;
  return *reinterpret_cast<::UnityEngine::Material**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single h
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_h() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_h");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "h"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single s
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_s() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_s");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "s"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single v
[[deprecated("Use field access instead!")]] float& GlobalNamespace::Campfire::dyn_v() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_v");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "v"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 overrideDayNight
[[deprecated("Use field access instead!")]] int& GlobalNamespace::Campfire::dyn_overrideDayNight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_overrideDayNight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overrideDayNight"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 tempVec
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::Campfire::dyn_tempVec() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_tempVec");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempVec"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean[] isActive
[[deprecated("Use field access instead!")]] ::ArrayW<bool>& GlobalNamespace::Campfire::dyn_isActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_isActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isActive"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean wasActive
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::Campfire::dyn_wasActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::dyn_wasActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wasActive"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Campfire.Start
void GlobalNamespace::Campfire::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Campfire.LateUpdate
void GlobalNamespace::Campfire::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Campfire.Flap
void GlobalNamespace::Campfire::Flap(ByRef<float> perlinValue, float perlinStep, ByRef<float> lastAngle, ByRef<::UnityEngine::Transform*> flameTransform, float range, float multiplier, ByRef<bool> isMerged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::Flap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Flap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(perlinValue), ::il2cpp_utils::ExtractType(perlinStep), ::il2cpp_utils::ExtractType(lastAngle), ::il2cpp_utils::ExtractType(flameTransform), ::il2cpp_utils::ExtractType(range), ::il2cpp_utils::ExtractType(multiplier), ::il2cpp_utils::ExtractType(isMerged)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(perlinValue), perlinStep, byref(lastAngle), byref(flameTransform), range, multiplier, byref(isMerged));
}
// Autogenerated method: Campfire.ReturnToOff
void GlobalNamespace::Campfire::ReturnToOff(ByRef<::UnityEngine::Transform*> startTransform, float targetAngle, ByRef<bool> isMerged) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::Campfire::ReturnToOff");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReturnToOff", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startTransform), ::il2cpp_utils::ExtractType(targetAngle), ::il2cpp_utils::ExtractType(isMerged)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(startTransform), targetAngle, byref(isMerged));
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: CheatUpdate
#include "GlobalNamespace/CheatUpdate.hpp"
// Including type: CheatUpdate/<UpdateNumberOfPlayers>d__1
#include "GlobalNamespace/CheatUpdate_-UpdateNumberOfPlayers-d__1.hpp"
// Including type: CheatUpdate/<UpdatePlayerCount>d__2
#include "GlobalNamespace/CheatUpdate_-UpdatePlayerCount-d__2.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: CheatUpdate.Start
void GlobalNamespace::CheatUpdate::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CheatUpdate.UpdateNumberOfPlayers
::System::Collections::IEnumerator* GlobalNamespace::CheatUpdate::UpdateNumberOfPlayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::UpdateNumberOfPlayers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateNumberOfPlayers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: CheatUpdate.UpdatePlayerCount
::System::Collections::IEnumerator* GlobalNamespace::CheatUpdate::UpdatePlayerCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::UpdatePlayerCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePlayerCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CheatUpdate/<UpdateNumberOfPlayers>d__1
#include "GlobalNamespace/CheatUpdate_-UpdateNumberOfPlayers-d__1.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CheatUpdate <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::CheatUpdate*& GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::CheatUpdate**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CheatUpdate/<UpdateNumberOfPlayers>d__1.System.IDisposable.Dispose
void GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CheatUpdate/<UpdateNumberOfPlayers>d__1.MoveNext
bool GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CheatUpdate/<UpdateNumberOfPlayers>d__1.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: CheatUpdate/<UpdateNumberOfPlayers>d__1.System.Collections.IEnumerator.Reset
void GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CheatUpdate/<UpdateNumberOfPlayers>d__1.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CheatUpdate::$UpdateNumberOfPlayers$d__1*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: CheatUpdate/<UpdatePlayerCount>d__2
#include "GlobalNamespace/CheatUpdate_-UpdatePlayerCount-d__2.hpp"
// Including type: UnityEngine.Networking.UnityWebRequest
#include "UnityEngine/Networking/UnityWebRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Networking.UnityWebRequest <www>5__2
[[deprecated("Use field access instead!")]] ::UnityEngine::Networking::UnityWebRequest*& GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::dyn_$www$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::dyn_$www$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<www>5__2"))->offset;
  return *reinterpret_cast<::UnityEngine::Networking::UnityWebRequest**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: CheatUpdate/<UpdatePlayerCount>d__2.System.IDisposable.Dispose
void GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CheatUpdate/<UpdatePlayerCount>d__2.MoveNext
bool GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: CheatUpdate/<UpdatePlayerCount>d__2.<>m__Finally1
void GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::$$m__Finally1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::<>m__Finally1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<>m__Finally1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CheatUpdate/<UpdatePlayerCount>d__2.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: CheatUpdate/<UpdatePlayerCount>d__2.System.Collections.IEnumerator.Reset
void GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: CheatUpdate/<UpdatePlayerCount>d__2.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::CheatUpdate::$UpdatePlayerCount$d__2*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: ChestHeartbeat
#include "GlobalNamespace/ChestHeartbeat.hpp"
// Including type: ChestHeartbeat/<HeartBeat>d__13
#include "GlobalNamespace/ChestHeartbeat_-HeartBeat-d__13.hpp"
// Including type: UnityEngine.AudioSource
#include "UnityEngine/AudioSource.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 millisToWait
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ChestHeartbeat::dyn_millisToWait() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::dyn_millisToWait");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "millisToWait"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 millisMin
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ChestHeartbeat::dyn_millisMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::dyn_millisMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "millisMin"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 lastShot
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ChestHeartbeat::dyn_lastShot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::dyn_lastShot");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastShot"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.AudioSource audioSource
[[deprecated("Use field access instead!")]] ::UnityEngine::AudioSource*& GlobalNamespace::ChestHeartbeat::dyn_audioSource() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::dyn_audioSource");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "audioSource"))->offset;
  return *reinterpret_cast<::UnityEngine::AudioSource**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform scaleTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GlobalNamespace::ChestHeartbeat::dyn_scaleTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::dyn_scaleTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "scaleTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single deltaTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ChestHeartbeat::dyn_deltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::dyn_deltaTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "deltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single heartMinSize
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ChestHeartbeat::dyn_heartMinSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::dyn_heartMinSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heartMinSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single heartMaxSize
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ChestHeartbeat::dyn_heartMaxSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::dyn_heartMaxSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "heartMaxSize"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single minTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ChestHeartbeat::dyn_minTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::dyn_minTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single maxTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ChestHeartbeat::dyn_maxTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::dyn_maxTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single endtime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ChestHeartbeat::dyn_endtime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::dyn_endtime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endtime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single currentTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ChestHeartbeat::dyn_currentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::dyn_currentTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ChestHeartbeat.Update
void GlobalNamespace::ChestHeartbeat::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ChestHeartbeat.HeartBeat
::System::Collections::IEnumerator* GlobalNamespace::ChestHeartbeat::HeartBeat() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::HeartBeat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "HeartBeat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: ChestHeartbeat/<HeartBeat>d__13
#include "GlobalNamespace/ChestHeartbeat_-HeartBeat-d__13.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public ChestHeartbeat <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::ChestHeartbeat*& GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::ChestHeartbeat**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single <startTime>5__2
[[deprecated("Use field access instead!")]] float& GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::dyn_$startTime$5__2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::dyn_$startTime$5__2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<startTime>5__2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: ChestHeartbeat/<HeartBeat>d__13.System.IDisposable.Dispose
void GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ChestHeartbeat/<HeartBeat>d__13.MoveNext
bool GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: ChestHeartbeat/<HeartBeat>d__13.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: ChestHeartbeat/<HeartBeat>d__13.System.Collections.IEnumerator.Reset
void GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: ChestHeartbeat/<HeartBeat>d__13.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::ChestHeartbeat::$HeartBeat$d__13*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Gorilla1v1TagManager
#include "GlobalNamespace/Gorilla1v1TagManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaBallManager
#include "GlobalNamespace/GorillaBallManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 ballAnchor
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GlobalNamespace::GorillaBallManager::dyn_ballAnchor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBallManager::dyn_ballAnchor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ballAnchor"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaBallManager.Awake
void GlobalNamespace::GorillaBallManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBallManager::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 55));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaBallWall
#include "GlobalNamespace/GorillaBallWall.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaBallWall instance
::GlobalNamespace::GorillaBallWall* GlobalNamespace::GorillaBallWall::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBallWall::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaBallWall*>("", "GorillaBallWall", "instance"));
}
// Autogenerated static field setter
// Set static field: static public GorillaBallWall instance
void GlobalNamespace::GorillaBallWall::_set_instance(::GlobalNamespace::GorillaBallWall* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBallWall::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaBallWall", "instance", value));
}
// Autogenerated method: GorillaBallWall.Awake
void GlobalNamespace::GorillaBallWall::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBallWall::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaBallWall.Update
void GlobalNamespace::GorillaBallWall::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaBallWall::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaCTFManager
#include "GlobalNamespace/GorillaCTFManager.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaCTFUI
#include "GlobalNamespace/GorillaCTFUI.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: GorillaCTFUI.Start
void GlobalNamespace::GorillaCTFUI::Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCTFUI::Start");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Start", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaCTFUI.Update
void GlobalNamespace::GorillaCTFUI::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaCTFUI::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaColor
#include "GlobalNamespace/GorillaColor.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean setRandomly
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaColor::dyn_setRandomly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaColor::dyn_setRandomly");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setRandomly"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaDayNight
#include "GlobalNamespace/GorillaDayNight.hpp"
// Including type: GorillaDayNight/<LightMapSet>d__25
#include "GlobalNamespace/GorillaDayNight_-LightMapSet-d__25.hpp"
// Including type: GorillaLightmapData
#include "GlobalNamespace/GorillaLightmapData.hpp"
// Including type: UnityEngine.LightmapData
#include "UnityEngine/LightmapData.hpp"
// Including type: System.Threading.Thread
#include "System/Threading/Thread.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaDayNight instance
::GlobalNamespace::GorillaDayNight* GlobalNamespace::GorillaDayNight::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaDayNight*>("", "GorillaDayNight", "instance"));
}
// Autogenerated static field setter
// Set static field: static public GorillaDayNight instance
void GlobalNamespace::GorillaDayNight::_set_instance(::GlobalNamespace::GorillaDayNight* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaDayNight", "instance", value));
}
// Autogenerated instance field getter
// Get instance field: public GorillaLightmapData[] lightmapDatas
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::GorillaLightmapData*>& GlobalNamespace::GorillaDayNight::dyn_lightmapDatas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_lightmapDatas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lightmapDatas"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::GorillaLightmapData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LightmapData[] workingLightMapDatas
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::LightmapData*>& GlobalNamespace::GorillaDayNight::dyn_workingLightMapDatas() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_workingLightMapDatas");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "workingLightMapDatas"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::LightmapData*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.LightmapData workingLightMapData
[[deprecated("Use field access instead!")]] ::UnityEngine::LightmapData*& GlobalNamespace::GorillaDayNight::dyn_workingLightMapData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_workingLightMapData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "workingLightMapData"))->offset;
  return *reinterpret_cast<::UnityEngine::LightmapData**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lerpValue
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaDayNight::dyn_lerpValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_lerpValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lerpValue"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean done
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaDayNight::dyn_done() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_done");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "done"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean finishedStep
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaDayNight::dyn_finishedStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_finishedStep");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finishedStep"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] fromPixels
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& GlobalNamespace::GorillaDayNight::dyn_fromPixels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_fromPixels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fromPixels"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] toPixels
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& GlobalNamespace::GorillaDayNight::dyn_toPixels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_toPixels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "toPixels"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Color[] mixedPixels
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Color>& GlobalNamespace::GorillaDayNight::dyn_mixedPixels() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_mixedPixels");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mixedPixels"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Color>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 firstData
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaDayNight::dyn_firstData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_firstData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstData"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 secondData
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaDayNight::dyn_secondData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_secondData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secondData"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 i
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaDayNight::dyn_i() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_i");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "i"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 j
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaDayNight::dyn_j() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_j");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "j"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 k
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaDayNight::dyn_k() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_k");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "k"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 l
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaDayNight::dyn_l() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_l");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "l"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Thread lightsThread
[[deprecated("Use field access instead!")]] ::System::Threading::Thread*& GlobalNamespace::GorillaDayNight::dyn_lightsThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_lightsThread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lightsThread"))->offset;
  return *reinterpret_cast<::System::Threading::Thread**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Threading.Thread dirsThread
[[deprecated("Use field access instead!")]] ::System::Threading::Thread*& GlobalNamespace::GorillaDayNight::dyn_dirsThread() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_dirsThread");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dirsThread"))->offset;
  return *reinterpret_cast<::System::Threading::Thread**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean test
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaDayNight::dyn_test() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_test");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "test"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean working
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaDayNight::dyn_working() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::dyn_working");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "working"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaDayNight.Awake
void GlobalNamespace::GorillaDayNight::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaDayNight.Update
void GlobalNamespace::GorillaDayNight::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaDayNight.DoWork
void GlobalNamespace::GorillaDayNight::DoWork() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::DoWork");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoWork", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaDayNight.DoLightsStep
void GlobalNamespace::GorillaDayNight::DoLightsStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::DoLightsStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoLightsStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaDayNight.DoDirsStep
void GlobalNamespace::GorillaDayNight::DoDirsStep() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::DoDirsStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoDirsStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaDayNight.LightMapSet
::System::Collections::IEnumerator* GlobalNamespace::GorillaDayNight::LightMapSet(int setFirstData, int setSecondData, float setLerp) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::LightMapSet");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LightMapSet", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(setFirstData), ::il2cpp_utils::ExtractType(setSecondData), ::il2cpp_utils::ExtractType(setLerp)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, setFirstData, setSecondData, setLerp);
}
// Autogenerated method: GorillaDayNight.<LightMapSet>b__25_0
bool GlobalNamespace::GorillaDayNight::$LightMapSet$b__25_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::<LightMapSet>b__25_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LightMapSet>b__25_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaDayNight.<LightMapSet>b__25_1
bool GlobalNamespace::GorillaDayNight::$LightMapSet$b__25_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::<LightMapSet>b__25_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<LightMapSet>b__25_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaDayNight/<LightMapSet>d__25
#include "GlobalNamespace/GorillaDayNight_-LightMapSet-d__25.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaDayNight <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaDayNight*& GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaDayNight**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 setFirstData
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::dyn_setFirstData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::dyn_setFirstData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setFirstData"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 setSecondData
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::dyn_setSecondData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::dyn_setSecondData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setSecondData"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single setLerp
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::dyn_setLerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::dyn_setLerp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "setLerp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaDayNight/<LightMapSet>d__25.System.IDisposable.Dispose
void GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaDayNight/<LightMapSet>d__25.MoveNext
bool GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaDayNight/<LightMapSet>d__25.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaDayNight/<LightMapSet>d__25.System.Collections.IEnumerator.Reset
void GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaDayNight/<LightMapSet>d__25.System.Collections.IEnumerator.get_Current
::Il2CppObject* GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaDayNight::$LightMapSet$d__25*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaGameManager
#include "GlobalNamespace/GorillaGameManager.hpp"
// Including type: GorillaGameManager/<>c
#include "GlobalNamespace/GorillaGameManager_--c.hpp"
// Including type: GorillaGameManager/<>c__DisplayClass40_0
#include "GlobalNamespace/GorillaGameManager_--c__DisplayClass40_0.hpp"
// Including type: Photon.Realtime.Room
#include "Photon/Realtime/Room.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: VRRig
#include "GlobalNamespace/VRRig.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: Photon.Pun.PhotonView
#include "Photon/Pun/PhotonView.hpp"
// Including type: Photon.Pun.PhotonMessageInfo
#include "Photon/Pun/PhotonMessageInfo.hpp"
// Including type: PlayFab.ClientModels.GetSharedGroupDataResult
#include "PlayFab/ClientModels/GetSharedGroupDataResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaGameManager instance
::GlobalNamespace::GorillaGameManager* GlobalNamespace::GorillaGameManager::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaGameManager*>("", "GorillaGameManager", "instance"));
}
// Autogenerated static field setter
// Set static field: static public GorillaGameManager instance
void GlobalNamespace::GorillaGameManager::_set_instance(::GlobalNamespace::GorillaGameManager* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("", "GorillaGameManager", "instance", value));
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Room currentRoom
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Room*& GlobalNamespace::GorillaGameManager::dyn_currentRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_currentRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentRoom"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Room**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Object obj
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GlobalNamespace::GorillaGameManager::dyn_obj() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_obj");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "obj"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single stepVolumeMax
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaGameManager::dyn_stepVolumeMax() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_stepVolumeMax");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stepVolumeMax"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single stepVolumeMin
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaGameManager::dyn_stepVolumeMin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_stepVolumeMin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stepVolumeMin"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fastJumpLimit
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaGameManager::dyn_fastJumpLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_fastJumpLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fastJumpLimit"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single fastJumpMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaGameManager::dyn_fastJumpMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_fastJumpMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fastJumpMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single slowJumpLimit
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaGameManager::dyn_slowJumpLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_slowJumpLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slowJumpLimit"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single slowJumpMultiplier
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaGameManager::dyn_slowJumpMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_slowJumpMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slowJumpMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Byte roomSize
[[deprecated("Use field access instead!")]] uint8_t& GlobalNamespace::GorillaGameManager::dyn_roomSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_roomSize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "roomSize"))->offset;
  return *reinterpret_cast<uint8_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single lastCheck
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaGameManager::dyn_lastCheck() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_lastCheck");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastCheck"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single checkCooldown
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaGameManager::dyn_checkCooldown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_checkCooldown");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkCooldown"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single userDecayTime
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaGameManager::dyn_userDecayTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_userDecayTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userDecayTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.Int32,VRRig> playerVRRigDict
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::VRRig*>*& GlobalNamespace::GorillaGameManager::dyn_playerVRRigDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_playerVRRigDict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerVRRigDict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<int, ::GlobalNamespace::VRRig*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,System.Single> expectedUsersDecay
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, float>*& GlobalNamespace::GorillaGameManager::dyn_expectedUsersDecay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_expectedUsersDecay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "expectedUsersDecay"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, float>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,System.String> playerCosmeticsLookup
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& GlobalNamespace::GorillaGameManager::dyn_playerCosmeticsLookup() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_playerCosmeticsLookup");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerCosmeticsLookup"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String tempString
[[deprecated("Use field access instead!")]] ::StringW& GlobalNamespace::GorillaGameManager::dyn_tempString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_tempString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single startingToLookForFriend
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaGameManager::dyn_startingToLookForFriend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_startingToLookForFriend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingToLookForFriend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single timeToSpendLookingForFriend
[[deprecated("Use field access instead!")]] float& GlobalNamespace::GorillaGameManager::dyn_timeToSpendLookingForFriend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_timeToSpendLookingForFriend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "timeToSpendLookingForFriend"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean successfullyFoundFriend
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaGameManager::dyn_successfullyFoundFriend() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_successfullyFoundFriend");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "successfullyFoundFriend"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean takeMaster
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaGameManager::dyn_takeMaster() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_takeMaster");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "takeMaster"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean testAssault
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaGameManager::dyn_testAssault() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_testAssault");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "testAssault"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean endGameManually
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaGameManager::dyn_endGameManually() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_endGameManually");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "endGameManually"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Player currentMasterClient
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaGameManager::dyn_currentMasterClient() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_currentMasterClient");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentMasterClient"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Pun.PhotonView returnPhotonView
[[deprecated("Use field access instead!")]] ::Photon::Pun::PhotonView*& GlobalNamespace::GorillaGameManager::dyn_returnPhotonView() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_returnPhotonView");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "returnPhotonView"))->offset;
  return *reinterpret_cast<::Photon::Pun::PhotonView**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public VRRig returnRig
[[deprecated("Use field access instead!")]] ::GlobalNamespace::VRRig*& GlobalNamespace::GorillaGameManager::dyn_returnRig() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_returnRig");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "returnRig"))->offset;
  return *reinterpret_cast<::GlobalNamespace::VRRig**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Photon.Realtime.Player outPlayer
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaGameManager::dyn_outPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_outPlayer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "outPlayer"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Player[] currentPlayerArray
[[deprecated("Use field access instead!")]] ::ArrayW<::Photon::Realtime::Player*>& GlobalNamespace::GorillaGameManager::dyn_currentPlayerArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::dyn_currentPlayerArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentPlayerArray"))->offset;
  return *reinterpret_cast<::ArrayW<::Photon::Realtime::Player*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaGameManager.Awake
void GlobalNamespace::GorillaGameManager::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::Awake");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 55));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaGameManager.Update
void GlobalNamespace::GorillaGameManager::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::Update");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 56));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaGameManager.InfrequentUpdate
void GlobalNamespace::GorillaGameManager::InfrequentUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::InfrequentUpdate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 57));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaGameManager.GameMode
::StringW GlobalNamespace::GorillaGameManager::GameMode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::GameMode");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 58));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: GorillaGameManager.ReportTag
void GlobalNamespace::GorillaGameManager::ReportTag(::Photon::Realtime::Player* taggedPlayer, ::Photon::Realtime::Player* taggingPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::ReportTag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 59));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, taggedPlayer, taggingPlayer);
}
// Autogenerated method: GorillaGameManager.ReportStep
void GlobalNamespace::GorillaGameManager::ReportStep(::GlobalNamespace::VRRig* steppingRig, bool isLeftHand, float velocityRatio) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::ReportStep");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReportStep", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(steppingRig), ::il2cpp_utils::ExtractType(isLeftHand), ::il2cpp_utils::ExtractType(velocityRatio)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, steppingRig, isLeftHand, velocityRatio);
}
// Autogenerated method: GorillaGameManager.Photon.Pun.IPunInstantiateMagicCallback.OnPhotonInstantiate
void GlobalNamespace::GorillaGameManager::Photon_Pun_IPunInstantiateMagicCallback_OnPhotonInstantiate(::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::Photon.Pun.IPunInstantiateMagicCallback.OnPhotonInstantiate");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 54));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info);
}
// Autogenerated method: GorillaGameManager.NewVRRig
void GlobalNamespace::GorillaGameManager::NewVRRig(::Photon::Realtime::Player* player, int vrrigPhotonViewID, bool didTutorial) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::NewVRRig");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 60));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, player, vrrigPhotonViewID, didTutorial);
}
// Autogenerated method: GorillaGameManager.LocalCanTag
bool GlobalNamespace::GorillaGameManager::LocalCanTag(::Photon::Realtime::Player* myPlayer, ::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::LocalCanTag");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 61));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, myPlayer, otherPlayer);
}
// Autogenerated method: GorillaGameManager.FindVRRigForPlayer
::Photon::Pun::PhotonView* GlobalNamespace::GorillaGameManager::FindVRRigForPlayer(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::FindVRRigForPlayer");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 62));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::PhotonView*, false>(this, ___internal__method, player);
}
// Autogenerated method: GorillaGameManager.StaticFindRigForPlayer
::Photon::Pun::PhotonView* GlobalNamespace::GorillaGameManager::StaticFindRigForPlayer(::Photon::Realtime::Player* player) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::StaticFindRigForPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaGameManager", "StaticFindRigForPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(player)})));
  return ::il2cpp_utils::RunMethodRethrow<::Photon::Pun::PhotonView*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, player);
}
// Autogenerated method: GorillaGameManager.ReportTagRPC
void GlobalNamespace::GorillaGameManager::ReportTagRPC(::Photon::Realtime::Player* taggingPlayer, ::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::ReportTagRPC");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 63));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, taggingPlayer, info);
}
// Autogenerated method: GorillaGameManager.AttemptGetNewPlayerCosmetic
void GlobalNamespace::GorillaGameManager::AttemptGetNewPlayerCosmetic(::Photon::Realtime::Player* playerToUpdate, int attempts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::AttemptGetNewPlayerCosmetic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AttemptGetNewPlayerCosmetic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(playerToUpdate), ::il2cpp_utils::ExtractType(attempts)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, playerToUpdate, attempts);
}
// Autogenerated method: GorillaGameManager.UpdatePlayerCosmetic
void GlobalNamespace::GorillaGameManager::UpdatePlayerCosmetic(::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::UpdatePlayerCosmetic");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdatePlayerCosmetic", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info);
}
// Autogenerated method: GorillaGameManager.JoinPubWithFreinds
void GlobalNamespace::GorillaGameManager::JoinPubWithFreinds(::Photon::Pun::PhotonMessageInfo info) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::JoinPubWithFreinds");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "JoinPubWithFreinds", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(info)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, info);
}
// Autogenerated method: GorillaGameManager.LocalPlayerSpeed
::ArrayW<float> GlobalNamespace::GorillaGameManager::LocalPlayerSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::LocalPlayerSpeed");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 64));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<float>, false>(this, ___internal__method);
}
// Autogenerated method: GorillaGameManager.FindUserIDInRoom
bool GlobalNamespace::GorillaGameManager::FindUserIDInRoom(::StringW userID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::FindUserIDInRoom");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FindUserIDInRoom", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(userID)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, userID);
}
// Autogenerated method: GorillaGameManager.MyMatIndex
int GlobalNamespace::GorillaGameManager::MyMatIndex(::Photon::Realtime::Player* forPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::MyMatIndex");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaGameManager*), 65));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, forPlayer);
}
// Autogenerated method: GorillaGameManager.<Update>b__29_0
void GlobalNamespace::GorillaGameManager::$Update$b__29_0(::PlayFab::ClientModels::GetSharedGroupDataResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::<Update>b__29_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Update>b__29_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: GorillaGameManager.OnPlayerLeftRoom
void GlobalNamespace::GorillaGameManager::OnPlayerLeftRoom(::Photon::Realtime::Player* otherPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::OnPlayerLeftRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 43));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, otherPlayer);
}
// Autogenerated method: GorillaGameManager.OnPlayerEnteredRoom
void GlobalNamespace::GorillaGameManager::OnPlayerEnteredRoom(::Photon::Realtime::Player* newPlayer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::OnPlayerEnteredRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newPlayer);
}
// Autogenerated method: GorillaGameManager.OnJoinedRoom
void GlobalNamespace::GorillaGameManager::OnJoinedRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::OnJoinedRoom");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Photon::Pun::MonoBehaviourPunCallbacks*), 41));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaGameManager/<>c
#include "GlobalNamespace/GorillaGameManager_--c.hpp"
// Including type: System.Action`1
#include "System/Action_1.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly GorillaGameManager/<>c <>9
::GlobalNamespace::GorillaGameManager::$$c* GlobalNamespace::GorillaGameManager::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::GlobalNamespace::GorillaGameManager::$$c*>("", "GorillaGameManager/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly GorillaGameManager/<>c <>9
void GlobalNamespace::GorillaGameManager::$$c::_set_$$9(::GlobalNamespace::GorillaGameManager::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GorillaGameManager/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<PlayFab.PlayFabError> <>9__29_1
::System::Action_1<::PlayFab::PlayFabError*>* GlobalNamespace::GorillaGameManager::$$c::_get_$$9__29_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::$$c::_get_$$9__29_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::PlayFab::PlayFabError*>*>("", "GorillaGameManager/<>c", "<>9__29_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<PlayFab.PlayFabError> <>9__29_1
void GlobalNamespace::GorillaGameManager::$$c::_set_$$9__29_1(::System::Action_1<::PlayFab::PlayFabError*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::$$c::_set_$$9__29_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GorillaGameManager/<>c", "<>9__29_1", value)));
}
// Autogenerated static field getter
// Get static field: static public System.Action`1<PlayFab.PlayFabError> <>9__40_1
::System::Action_1<::PlayFab::PlayFabError*>* GlobalNamespace::GorillaGameManager::$$c::_get_$$9__40_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::$$c::_get_$$9__40_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Action_1<::PlayFab::PlayFabError*>*>("", "GorillaGameManager/<>c", "<>9__40_1")));
}
// Autogenerated static field setter
// Set static field: static public System.Action`1<PlayFab.PlayFabError> <>9__40_1
void GlobalNamespace::GorillaGameManager::$$c::_set_$$9__40_1(::System::Action_1<::PlayFab::PlayFabError*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::$$c::_set_$$9__40_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("", "GorillaGameManager/<>c", "<>9__40_1", value)));
}
// Autogenerated method: GorillaGameManager/<>c..cctor
void GlobalNamespace::GorillaGameManager::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("", "GorillaGameManager/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaGameManager/<>c.<Update>b__29_1
void GlobalNamespace::GorillaGameManager::$$c::$Update$b__29_1(::PlayFab::PlayFabError* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::$$c::<Update>b__29_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<Update>b__29_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated method: GorillaGameManager/<>c.<AttemptGetNewPlayerCosmetic>b__40_1
void GlobalNamespace::GorillaGameManager::$$c::$AttemptGetNewPlayerCosmetic$b__40_1(::PlayFab::PlayFabError* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::$$c::<AttemptGetNewPlayerCosmetic>b__40_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AttemptGetNewPlayerCosmetic>b__40_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaGameManager/<>c__DisplayClass40_0
#include "GlobalNamespace/GorillaGameManager_--c__DisplayClass40_0.hpp"
// Including type: Photon.Realtime.Player
#include "Photon/Realtime/Player.hpp"
// Including type: PlayFab.ClientModels.GetSharedGroupDataResult
#include "PlayFab/ClientModels/GetSharedGroupDataResult.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public Photon.Realtime.Player playerToUpdate
[[deprecated("Use field access instead!")]] ::Photon::Realtime::Player*& GlobalNamespace::GorillaGameManager::$$c__DisplayClass40_0::dyn_playerToUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::$$c__DisplayClass40_0::dyn_playerToUpdate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerToUpdate"))->offset;
  return *reinterpret_cast<::Photon::Realtime::Player**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaGameManager <>4__this
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaGameManager*& GlobalNamespace::GorillaGameManager::$$c__DisplayClass40_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::$$c__DisplayClass40_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaGameManager**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 attempts
[[deprecated("Use field access instead!")]] int& GlobalNamespace::GorillaGameManager::$$c__DisplayClass40_0::dyn_attempts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::$$c__DisplayClass40_0::dyn_attempts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attempts"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaGameManager/<>c__DisplayClass40_0.<AttemptGetNewPlayerCosmetic>b__0
void GlobalNamespace::GorillaGameManager::$$c__DisplayClass40_0::$AttemptGetNewPlayerCosmetic$b__0(::PlayFab::ClientModels::GetSharedGroupDataResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGameManager::$$c__DisplayClass40_0::<AttemptGetNewPlayerCosmetic>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<AttemptGetNewPlayerCosmetic>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaGeoHideShowTrigger
#include "GlobalNamespace/GorillaGeoHideShowTrigger.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] makeSureThisIsDisabled
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::GorillaGeoHideShowTrigger::dyn_makeSureThisIsDisabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGeoHideShowTrigger::dyn_makeSureThisIsDisabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "makeSureThisIsDisabled"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject[] makeSureThisIsEnabled
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::GameObject*>& GlobalNamespace::GorillaGeoHideShowTrigger::dyn_makeSureThisIsEnabled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGeoHideShowTrigger::dyn_makeSureThisIsEnabled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "makeSureThisIsEnabled"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::GameObject*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean lotsOfStuff
[[deprecated("Use field access instead!")]] bool& GlobalNamespace::GorillaGeoHideShowTrigger::dyn_lotsOfStuff() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGeoHideShowTrigger::dyn_lotsOfStuff");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lotsOfStuff"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaGeoHideShowTrigger.OnBoxTriggered
void GlobalNamespace::GorillaGeoHideShowTrigger::OnBoxTriggered() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaGeoHideShowTrigger::OnBoxTriggered");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GlobalNamespace::GorillaTriggerBox*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaHasUITransformFollow
#include "GlobalNamespace/GorillaHasUITransformFollow.hpp"
// Including type: GorillaUITransformFollow
#include "GlobalNamespace/GorillaUITransformFollow.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GorillaUITransformFollow[] transformFollowers
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::GorillaUITransformFollow*>& GlobalNamespace::GorillaHasUITransformFollow::dyn_transformFollowers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHasUITransformFollow::dyn_transformFollowers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "transformFollowers"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::GorillaUITransformFollow*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaHasUITransformFollow.Awake
void GlobalNamespace::GorillaHasUITransformFollow::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHasUITransformFollow::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHasUITransformFollow.OnDestroy
void GlobalNamespace::GorillaHasUITransformFollow::OnDestroy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHasUITransformFollow::OnDestroy");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDestroy", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHasUITransformFollow.OnEnable
void GlobalNamespace::GorillaHasUITransformFollow::OnEnable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHasUITransformFollow::OnEnable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnEnable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaHasUITransformFollow.OnDisable
void GlobalNamespace::GorillaHasUITransformFollow::OnDisable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GlobalNamespace::GorillaHasUITransformFollow::OnDisable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnDisable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
