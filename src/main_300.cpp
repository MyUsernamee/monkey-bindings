// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.SubscriptionStatus/Platform
#include "Viveport/SubscriptionStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Viveport.SubscriptionStatus/Platform Windows
::Viveport::SubscriptionStatus::Platform Viveport::SubscriptionStatus::Platform::_get_Windows() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::SubscriptionStatus::Platform::_get_Windows");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::SubscriptionStatus::Platform>("Viveport", "SubscriptionStatus/Platform", "Windows"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.SubscriptionStatus/Platform Windows
void Viveport::SubscriptionStatus::Platform::_set_Windows(::Viveport::SubscriptionStatus::Platform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::SubscriptionStatus::Platform::_set_Windows");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "SubscriptionStatus/Platform", "Windows", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.SubscriptionStatus/Platform Android
::Viveport::SubscriptionStatus::Platform Viveport::SubscriptionStatus::Platform::_get_Android() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::SubscriptionStatus::Platform::_get_Android");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::SubscriptionStatus::Platform>("Viveport", "SubscriptionStatus/Platform", "Android"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.SubscriptionStatus/Platform Android
void Viveport::SubscriptionStatus::Platform::_set_Android(::Viveport::SubscriptionStatus::Platform value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::SubscriptionStatus::Platform::_set_Android");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "SubscriptionStatus/Platform", "Android", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Viveport::SubscriptionStatus::Platform::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::SubscriptionStatus::Platform::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.SubscriptionStatus/TransactionType
#include "Viveport/SubscriptionStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Viveport.SubscriptionStatus/TransactionType Unknown
::Viveport::SubscriptionStatus::TransactionType Viveport::SubscriptionStatus::TransactionType::_get_Unknown() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::SubscriptionStatus::TransactionType::_get_Unknown");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::SubscriptionStatus::TransactionType>("Viveport", "SubscriptionStatus/TransactionType", "Unknown"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.SubscriptionStatus/TransactionType Unknown
void Viveport::SubscriptionStatus::TransactionType::_set_Unknown(::Viveport::SubscriptionStatus::TransactionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::SubscriptionStatus::TransactionType::_set_Unknown");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "SubscriptionStatus/TransactionType", "Unknown", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.SubscriptionStatus/TransactionType Paid
::Viveport::SubscriptionStatus::TransactionType Viveport::SubscriptionStatus::TransactionType::_get_Paid() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::SubscriptionStatus::TransactionType::_get_Paid");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::SubscriptionStatus::TransactionType>("Viveport", "SubscriptionStatus/TransactionType", "Paid"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.SubscriptionStatus/TransactionType Paid
void Viveport::SubscriptionStatus::TransactionType::_set_Paid(::Viveport::SubscriptionStatus::TransactionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::SubscriptionStatus::TransactionType::_set_Paid");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "SubscriptionStatus/TransactionType", "Paid", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.SubscriptionStatus/TransactionType Redeem
::Viveport::SubscriptionStatus::TransactionType Viveport::SubscriptionStatus::TransactionType::_get_Redeem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::SubscriptionStatus::TransactionType::_get_Redeem");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::SubscriptionStatus::TransactionType>("Viveport", "SubscriptionStatus/TransactionType", "Redeem"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.SubscriptionStatus/TransactionType Redeem
void Viveport::SubscriptionStatus::TransactionType::_set_Redeem(::Viveport::SubscriptionStatus::TransactionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::SubscriptionStatus::TransactionType::_set_Redeem");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "SubscriptionStatus/TransactionType", "Redeem", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.SubscriptionStatus/TransactionType FreeTrial
::Viveport::SubscriptionStatus::TransactionType Viveport::SubscriptionStatus::TransactionType::_get_FreeTrial() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::SubscriptionStatus::TransactionType::_get_FreeTrial");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::SubscriptionStatus::TransactionType>("Viveport", "SubscriptionStatus/TransactionType", "FreeTrial"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.SubscriptionStatus/TransactionType FreeTrial
void Viveport::SubscriptionStatus::TransactionType::_set_FreeTrial(::Viveport::SubscriptionStatus::TransactionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::SubscriptionStatus::TransactionType::_set_FreeTrial");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "SubscriptionStatus/TransactionType", "FreeTrial", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Viveport::SubscriptionStatus::TransactionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::SubscriptionStatus::TransactionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.Api
#include "Viveport/Api.hpp"
// Including type: Viveport.Api/LicenseChecker
#include "Viveport/Api_LicenseChecker.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Viveport.Internal.GetLicenseCallback
#include "Viveport/Internal/GetLicenseCallback.hpp"
// Including type: Viveport.Internal.StatusCallback
#include "Viveport/Internal/StatusCallback.hpp"
// Including type: Viveport.Internal.QueryRuntimeModeCallback
#include "Viveport/Internal/QueryRuntimeModeCallback.hpp"
// Including type: Viveport.Internal.StatusCallback2
#include "Viveport/Internal/StatusCallback2.hpp"
// Including type: Viveport.StatusCallback
#include "Viveport/StatusCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static readonly System.Collections.Generic.List`1<Viveport.Internal.GetLicenseCallback> InternalGetLicenseCallbacks
::System::Collections::Generic::List_1<::Viveport::Internal::GetLicenseCallback*>* Viveport::Api::_get_InternalGetLicenseCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::_get_InternalGetLicenseCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Viveport::Internal::GetLicenseCallback*>*>("Viveport", "Api", "InternalGetLicenseCallbacks"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Collections.Generic.List`1<Viveport.Internal.GetLicenseCallback> InternalGetLicenseCallbacks
void Viveport::Api::_set_InternalGetLicenseCallbacks(::System::Collections::Generic::List_1<::Viveport::Internal::GetLicenseCallback*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::_set_InternalGetLicenseCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "Api", "InternalGetLicenseCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Collections.Generic.List`1<Viveport.Internal.StatusCallback> InternalStatusCallbacks
::System::Collections::Generic::List_1<::Viveport::Internal::StatusCallback*>* Viveport::Api::_get_InternalStatusCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::_get_InternalStatusCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Viveport::Internal::StatusCallback*>*>("Viveport", "Api", "InternalStatusCallbacks"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Collections.Generic.List`1<Viveport.Internal.StatusCallback> InternalStatusCallbacks
void Viveport::Api::_set_InternalStatusCallbacks(::System::Collections::Generic::List_1<::Viveport::Internal::StatusCallback*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::_set_InternalStatusCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "Api", "InternalStatusCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Collections.Generic.List`1<Viveport.Internal.QueryRuntimeModeCallback> InternalQueryRunTimeCallbacks
::System::Collections::Generic::List_1<::Viveport::Internal::QueryRuntimeModeCallback*>* Viveport::Api::_get_InternalQueryRunTimeCallbacks() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::_get_InternalQueryRunTimeCallbacks");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Viveport::Internal::QueryRuntimeModeCallback*>*>("Viveport", "Api", "InternalQueryRunTimeCallbacks"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Collections.Generic.List`1<Viveport.Internal.QueryRuntimeModeCallback> InternalQueryRunTimeCallbacks
void Viveport::Api::_set_InternalQueryRunTimeCallbacks(::System::Collections::Generic::List_1<::Viveport::Internal::QueryRuntimeModeCallback*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::_set_InternalQueryRunTimeCallbacks");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "Api", "InternalQueryRunTimeCallbacks", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Collections.Generic.List`1<Viveport.Internal.StatusCallback2> InternalStatusCallback2s
::System::Collections::Generic::List_1<::Viveport::Internal::StatusCallback2*>* Viveport::Api::_get_InternalStatusCallback2s() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::_get_InternalStatusCallback2s");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Viveport::Internal::StatusCallback2*>*>("Viveport", "Api", "InternalStatusCallback2s"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Collections.Generic.List`1<Viveport.Internal.StatusCallback2> InternalStatusCallback2s
void Viveport::Api::_set_InternalStatusCallback2s(::System::Collections::Generic::List_1<::Viveport::Internal::StatusCallback2*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::_set_InternalStatusCallback2s");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "Api", "InternalStatusCallback2s", value));
}
// Autogenerated static field getter
// Get static field: static readonly System.Collections.Generic.List`1<Viveport.Api/LicenseChecker> InternalLicenseCheckers
::System::Collections::Generic::List_1<::Viveport::Api::LicenseChecker*>* Viveport::Api::_get_InternalLicenseCheckers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::_get_InternalLicenseCheckers");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Collections::Generic::List_1<::Viveport::Api::LicenseChecker*>*>("Viveport", "Api", "InternalLicenseCheckers"));
}
// Autogenerated static field setter
// Set static field: static readonly System.Collections.Generic.List`1<Viveport.Api/LicenseChecker> InternalLicenseCheckers
void Viveport::Api::_set_InternalLicenseCheckers(::System::Collections::Generic::List_1<::Viveport::Api::LicenseChecker*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::_set_InternalLicenseCheckers");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "Api", "InternalLicenseCheckers", value));
}
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.StatusCallback initIl2cppCallback
::Viveport::Internal::StatusCallback* Viveport::Api::_get_initIl2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::_get_initIl2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::StatusCallback*>("Viveport", "Api", "initIl2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.StatusCallback initIl2cppCallback
void Viveport::Api::_set_initIl2cppCallback(::Viveport::Internal::StatusCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::_set_initIl2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "Api", "initIl2cppCallback", value));
}
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.StatusCallback shutdownIl2cppCallback
::Viveport::Internal::StatusCallback* Viveport::Api::_get_shutdownIl2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::_get_shutdownIl2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::StatusCallback*>("Viveport", "Api", "shutdownIl2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.StatusCallback shutdownIl2cppCallback
void Viveport::Api::_set_shutdownIl2cppCallback(::Viveport::Internal::StatusCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::_set_shutdownIl2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "Api", "shutdownIl2cppCallback", value));
}
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.QueryRuntimeModeCallback queryRuntimeModeIl2cppCallback
::Viveport::Internal::QueryRuntimeModeCallback* Viveport::Api::_get_queryRuntimeModeIl2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::_get_queryRuntimeModeIl2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::QueryRuntimeModeCallback*>("Viveport", "Api", "queryRuntimeModeIl2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.QueryRuntimeModeCallback queryRuntimeModeIl2cppCallback
void Viveport::Api::_set_queryRuntimeModeIl2cppCallback(::Viveport::Internal::QueryRuntimeModeCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::_set_queryRuntimeModeIl2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "Api", "queryRuntimeModeIl2cppCallback", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.String VERSION
::StringW Viveport::Api::_get_VERSION() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::_get_VERSION");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Viveport", "Api", "VERSION"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.String VERSION
void Viveport::Api::_set_VERSION(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::_set_VERSION");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "Api", "VERSION", value));
}
// Autogenerated static field getter
// Get static field: static private System.String _appId
::StringW Viveport::Api::_get__appId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::_get__appId");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Viveport", "Api", "_appId"));
}
// Autogenerated static field setter
// Set static field: static private System.String _appId
void Viveport::Api::_set__appId(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::_set__appId");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "Api", "_appId", value));
}
// Autogenerated static field getter
// Get static field: static private System.String _appKey
::StringW Viveport::Api::_get__appKey() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::_get__appKey");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Viveport", "Api", "_appKey"));
}
// Autogenerated static field setter
// Set static field: static private System.String _appKey
void Viveport::Api::_set__appKey(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::_set__appKey");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "Api", "_appKey", value));
}
// Autogenerated method: Viveport.Api.GetLicense
void Viveport::Api::GetLicense(::Viveport::Api::LicenseChecker* checker, ::StringW appId, ::StringW appKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::GetLicense");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "Api", "GetLicense", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(checker), ::il2cpp_utils::ExtractType(appId), ::il2cpp_utils::ExtractType(appKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, checker, appId, appKey);
}
// Autogenerated method: Viveport.Api.InitIl2cppCallback
void Viveport::Api::InitIl2cppCallback(int errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::InitIl2cppCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "Api", "InitIl2cppCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode);
}
// Autogenerated method: Viveport.Api.Init
int Viveport::Api::Init(::Viveport::StatusCallback* callback, ::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "Api", "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(appId)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, appId);
}
// Autogenerated method: Viveport.Api.ShutdownIl2cppCallback
void Viveport::Api::ShutdownIl2cppCallback(int errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::ShutdownIl2cppCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "Api", "ShutdownIl2cppCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode);
}
// Autogenerated method: Viveport.Api.Shutdown
int Viveport::Api::Shutdown(::Viveport::StatusCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "Api", "Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Viveport.Api.Version
::StringW Viveport::Api::Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "Api", "Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Viveport.Api..cctor
void Viveport::Api::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "Api", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.Api/LicenseChecker
#include "Viveport/Api_LicenseChecker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Viveport.Api/LicenseChecker.OnSuccess
void Viveport::Api::LicenseChecker::OnSuccess(int64_t issueTime, int64_t expirationTime, int latestVersion, bool updateRequired) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::LicenseChecker::OnSuccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::Api::LicenseChecker*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, issueTime, expirationTime, latestVersion, updateRequired);
}
// Autogenerated method: Viveport.Api/LicenseChecker.OnFailure
void Viveport::Api::LicenseChecker::OnFailure(int errorCode, ::StringW errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Api::LicenseChecker::OnFailure");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::Api::LicenseChecker*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, errorCode, errorMessage);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.User
#include "Viveport/User.hpp"
// Including type: Viveport.Internal.StatusCallback
#include "Viveport/Internal/StatusCallback.hpp"
// Including type: Viveport.StatusCallback
#include "Viveport/StatusCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.StatusCallback isReadyIl2cppCallback
::Viveport::Internal::StatusCallback* Viveport::User::_get_isReadyIl2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::User::_get_isReadyIl2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::StatusCallback*>("Viveport", "User", "isReadyIl2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.StatusCallback isReadyIl2cppCallback
void Viveport::User::_set_isReadyIl2cppCallback(::Viveport::Internal::StatusCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::User::_set_isReadyIl2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "User", "isReadyIl2cppCallback", value));
}
// Autogenerated method: Viveport.User.IsReadyIl2cppCallback
void Viveport::User::IsReadyIl2cppCallback(int errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::User::IsReadyIl2cppCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "User", "IsReadyIl2cppCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode);
}
// Autogenerated method: Viveport.User.IsReady
int Viveport::User::IsReady(::Viveport::StatusCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::User::IsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "User", "IsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Viveport.User.GetUserId
::StringW Viveport::User::GetUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::User::GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "User", "GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Viveport.User.GetUserName
::StringW Viveport::User::GetUserName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::User::GetUserName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "User", "GetUserName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Viveport.User.GetUserAvatarUrl
::StringW Viveport::User::GetUserAvatarUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::User::GetUserAvatarUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "User", "GetUserAvatarUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.UserStats
#include "Viveport/UserStats.hpp"
// Including type: Viveport.UserStats/LeaderBoardRequestType
#include "Viveport/UserStats_LeaderBoardRequestType.hpp"
// Including type: Viveport.UserStats/LeaderBoardTimeRange
#include "Viveport/UserStats_LeaderBoardTimeRange.hpp"
// Including type: Viveport.UserStats/LeaderBoardSortMethod
#include "Viveport/UserStats_LeaderBoardSortMethod.hpp"
// Including type: Viveport.UserStats/LeaderBoardDiaplayType
#include "Viveport/UserStats_LeaderBoardDiaplayType.hpp"
// Including type: Viveport.UserStats/LeaderBoardScoreMethod
#include "Viveport/UserStats_LeaderBoardScoreMethod.hpp"
// Including type: Viveport.UserStats/AchievementDisplayAttribute
#include "Viveport/UserStats_AchievementDisplayAttribute.hpp"
// Including type: Viveport.Internal.StatusCallback
#include "Viveport/Internal/StatusCallback.hpp"
// Including type: Viveport.StatusCallback
#include "Viveport/StatusCallback.hpp"
// Including type: Viveport.Locale
#include "Viveport/Locale.hpp"
// Including type: Viveport.Leaderboard
#include "Viveport/Leaderboard.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.StatusCallback isReadyIl2cppCallback
::Viveport::Internal::StatusCallback* Viveport::UserStats::_get_isReadyIl2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::_get_isReadyIl2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::StatusCallback*>("Viveport", "UserStats", "isReadyIl2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.StatusCallback isReadyIl2cppCallback
void Viveport::UserStats::_set_isReadyIl2cppCallback(::Viveport::Internal::StatusCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::_set_isReadyIl2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "UserStats", "isReadyIl2cppCallback", value));
}
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.StatusCallback downloadStatsIl2cppCallback
::Viveport::Internal::StatusCallback* Viveport::UserStats::_get_downloadStatsIl2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::_get_downloadStatsIl2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::StatusCallback*>("Viveport", "UserStats", "downloadStatsIl2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.StatusCallback downloadStatsIl2cppCallback
void Viveport::UserStats::_set_downloadStatsIl2cppCallback(::Viveport::Internal::StatusCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::_set_downloadStatsIl2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "UserStats", "downloadStatsIl2cppCallback", value));
}
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.StatusCallback uploadStatsIl2cppCallback
::Viveport::Internal::StatusCallback* Viveport::UserStats::_get_uploadStatsIl2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::_get_uploadStatsIl2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::StatusCallback*>("Viveport", "UserStats", "uploadStatsIl2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.StatusCallback uploadStatsIl2cppCallback
void Viveport::UserStats::_set_uploadStatsIl2cppCallback(::Viveport::Internal::StatusCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::_set_uploadStatsIl2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "UserStats", "uploadStatsIl2cppCallback", value));
}
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.StatusCallback downloadLeaderboardScoresIl2cppCallback
::Viveport::Internal::StatusCallback* Viveport::UserStats::_get_downloadLeaderboardScoresIl2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::_get_downloadLeaderboardScoresIl2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::StatusCallback*>("Viveport", "UserStats", "downloadLeaderboardScoresIl2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.StatusCallback downloadLeaderboardScoresIl2cppCallback
void Viveport::UserStats::_set_downloadLeaderboardScoresIl2cppCallback(::Viveport::Internal::StatusCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::_set_downloadLeaderboardScoresIl2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "UserStats", "downloadLeaderboardScoresIl2cppCallback", value));
}
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.StatusCallback uploadLeaderboardScoreIl2cppCallback
::Viveport::Internal::StatusCallback* Viveport::UserStats::_get_uploadLeaderboardScoreIl2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::_get_uploadLeaderboardScoreIl2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::StatusCallback*>("Viveport", "UserStats", "uploadLeaderboardScoreIl2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.StatusCallback uploadLeaderboardScoreIl2cppCallback
void Viveport::UserStats::_set_uploadLeaderboardScoreIl2cppCallback(::Viveport::Internal::StatusCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::_set_uploadLeaderboardScoreIl2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "UserStats", "uploadLeaderboardScoreIl2cppCallback", value));
}
// Autogenerated method: Viveport.UserStats.IsReadyIl2cppCallback
void Viveport::UserStats::IsReadyIl2cppCallback(int errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::IsReadyIl2cppCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "UserStats", "IsReadyIl2cppCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode);
}
// Autogenerated method: Viveport.UserStats.IsReady
int Viveport::UserStats::IsReady(::Viveport::StatusCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::IsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "UserStats", "IsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Viveport.UserStats.DownloadStatsIl2cppCallback
void Viveport::UserStats::DownloadStatsIl2cppCallback(int errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::DownloadStatsIl2cppCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "UserStats", "DownloadStatsIl2cppCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode);
}
// Autogenerated method: Viveport.UserStats.DownloadStats
int Viveport::UserStats::DownloadStats(::Viveport::StatusCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::DownloadStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "UserStats", "DownloadStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Viveport.UserStats.GetStat
int Viveport::UserStats::GetStat(::StringW name, int defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::GetStat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "UserStats", "GetStat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, defaultValue);
}
// Autogenerated method: Viveport.UserStats.GetStat
float Viveport::UserStats::GetStat(::StringW name, float defaultValue) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::GetStat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "UserStats", "GetStat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(defaultValue)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, defaultValue);
}
// Autogenerated method: Viveport.UserStats.SetStat
void Viveport::UserStats::SetStat(::StringW name, int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::SetStat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "UserStats", "SetStat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, value);
}
// Autogenerated method: Viveport.UserStats.SetStat
void Viveport::UserStats::SetStat(::StringW name, float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::SetStat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "UserStats", "SetStat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, name, value);
}
// Autogenerated method: Viveport.UserStats.UploadStatsIl2cppCallback
void Viveport::UserStats::UploadStatsIl2cppCallback(int errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::UploadStatsIl2cppCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "UserStats", "UploadStatsIl2cppCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode);
}
// Autogenerated method: Viveport.UserStats.UploadStats
int Viveport::UserStats::UploadStats(::Viveport::StatusCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::UploadStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "UserStats", "UploadStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Viveport.UserStats.GetAchievement
bool Viveport::UserStats::GetAchievement(::StringW pchName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::GetAchievement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "UserStats", "GetAchievement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchName);
}
// Autogenerated method: Viveport.UserStats.GetAchievementUnlockTime
int Viveport::UserStats::GetAchievementUnlockTime(::StringW pchName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::GetAchievementUnlockTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "UserStats", "GetAchievementUnlockTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchName)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchName);
}
// Autogenerated method: Viveport.UserStats.GetAchievementIcon
::StringW Viveport::UserStats::GetAchievementIcon(::StringW pchName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::GetAchievementIcon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "UserStats", "GetAchievementIcon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchName);
}
// Autogenerated method: Viveport.UserStats.GetAchievementDisplayAttribute
::StringW Viveport::UserStats::GetAchievementDisplayAttribute(::StringW pchName, ::Viveport::UserStats::AchievementDisplayAttribute attr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::GetAchievementDisplayAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "UserStats", "GetAchievementDisplayAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchName), ::il2cpp_utils::ExtractType(attr)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchName, attr);
}
// Autogenerated method: Viveport.UserStats.GetAchievementDisplayAttribute
::StringW Viveport::UserStats::GetAchievementDisplayAttribute(::StringW pchName, ::Viveport::UserStats::AchievementDisplayAttribute attr, ::Viveport::Locale locale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::GetAchievementDisplayAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "UserStats", "GetAchievementDisplayAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchName), ::il2cpp_utils::ExtractType(attr), ::il2cpp_utils::ExtractType(locale)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchName, attr, locale);
}
// Autogenerated method: Viveport.UserStats.SetAchievement
int Viveport::UserStats::SetAchievement(::StringW pchName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::SetAchievement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "UserStats", "SetAchievement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchName)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchName);
}
// Autogenerated method: Viveport.UserStats.ClearAchievement
int Viveport::UserStats::ClearAchievement(::StringW pchName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::ClearAchievement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "UserStats", "ClearAchievement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchName)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchName);
}
// Autogenerated method: Viveport.UserStats.DownloadLeaderboardScoresIl2cppCallback
void Viveport::UserStats::DownloadLeaderboardScoresIl2cppCallback(int errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::DownloadLeaderboardScoresIl2cppCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "UserStats", "DownloadLeaderboardScoresIl2cppCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode);
}
// Autogenerated method: Viveport.UserStats.DownloadLeaderboardScores
int Viveport::UserStats::DownloadLeaderboardScores(::Viveport::StatusCallback* callback, ::StringW pchLeaderboardName, ::Viveport::UserStats::LeaderBoardRequestType eLeaderboardDataRequest, ::Viveport::UserStats::LeaderBoardTimeRange eLeaderboardDataTimeRange, int nRangeStart, int nRangeEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::DownloadLeaderboardScores");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "UserStats", "DownloadLeaderboardScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(pchLeaderboardName), ::il2cpp_utils::ExtractType(eLeaderboardDataRequest), ::il2cpp_utils::ExtractType(eLeaderboardDataTimeRange), ::il2cpp_utils::ExtractType(nRangeStart), ::il2cpp_utils::ExtractType(nRangeEnd)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, pchLeaderboardName, eLeaderboardDataRequest, eLeaderboardDataTimeRange, nRangeStart, nRangeEnd);
}
// Autogenerated method: Viveport.UserStats.UploadLeaderboardScoreIl2cppCallback
void Viveport::UserStats::UploadLeaderboardScoreIl2cppCallback(int errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::UploadLeaderboardScoreIl2cppCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "UserStats", "UploadLeaderboardScoreIl2cppCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode);
}
// Autogenerated method: Viveport.UserStats.UploadLeaderboardScore
int Viveport::UserStats::UploadLeaderboardScore(::Viveport::StatusCallback* callback, ::StringW pchLeaderboardName, int nScore) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::UploadLeaderboardScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "UserStats", "UploadLeaderboardScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(pchLeaderboardName), ::il2cpp_utils::ExtractType(nScore)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, pchLeaderboardName, nScore);
}
// Autogenerated method: Viveport.UserStats.GetLeaderboardScore
::Viveport::Leaderboard* Viveport::UserStats::GetLeaderboardScore(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::GetLeaderboardScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "UserStats", "GetLeaderboardScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::Viveport::Leaderboard*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, index);
}
// Autogenerated method: Viveport.UserStats.GetLeaderboardScoreCount
int Viveport::UserStats::GetLeaderboardScoreCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::GetLeaderboardScoreCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "UserStats", "GetLeaderboardScoreCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Viveport.UserStats.GetLeaderboardSortMethod
::Viveport::UserStats::LeaderBoardSortMethod Viveport::UserStats::GetLeaderboardSortMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::GetLeaderboardSortMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "UserStats", "GetLeaderboardSortMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Viveport::UserStats::LeaderBoardSortMethod, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Viveport.UserStats.GetLeaderboardDisplayType
::Viveport::UserStats::LeaderBoardDiaplayType Viveport::UserStats::GetLeaderboardDisplayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::GetLeaderboardDisplayType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "UserStats", "GetLeaderboardDisplayType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Viveport::UserStats::LeaderBoardDiaplayType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.UserStats/LeaderBoardRequestType
#include "Viveport/UserStats_LeaderBoardRequestType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Viveport.UserStats/LeaderBoardRequestType GlobalData
::Viveport::UserStats::LeaderBoardRequestType Viveport::UserStats::LeaderBoardRequestType::_get_GlobalData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardRequestType::_get_GlobalData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::UserStats::LeaderBoardRequestType>("Viveport", "UserStats/LeaderBoardRequestType", "GlobalData"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.UserStats/LeaderBoardRequestType GlobalData
void Viveport::UserStats::LeaderBoardRequestType::_set_GlobalData(::Viveport::UserStats::LeaderBoardRequestType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardRequestType::_set_GlobalData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "UserStats/LeaderBoardRequestType", "GlobalData", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.UserStats/LeaderBoardRequestType GlobalDataAroundUser
::Viveport::UserStats::LeaderBoardRequestType Viveport::UserStats::LeaderBoardRequestType::_get_GlobalDataAroundUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardRequestType::_get_GlobalDataAroundUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::UserStats::LeaderBoardRequestType>("Viveport", "UserStats/LeaderBoardRequestType", "GlobalDataAroundUser"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.UserStats/LeaderBoardRequestType GlobalDataAroundUser
void Viveport::UserStats::LeaderBoardRequestType::_set_GlobalDataAroundUser(::Viveport::UserStats::LeaderBoardRequestType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardRequestType::_set_GlobalDataAroundUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "UserStats/LeaderBoardRequestType", "GlobalDataAroundUser", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.UserStats/LeaderBoardRequestType LocalData
::Viveport::UserStats::LeaderBoardRequestType Viveport::UserStats::LeaderBoardRequestType::_get_LocalData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardRequestType::_get_LocalData");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::UserStats::LeaderBoardRequestType>("Viveport", "UserStats/LeaderBoardRequestType", "LocalData"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.UserStats/LeaderBoardRequestType LocalData
void Viveport::UserStats::LeaderBoardRequestType::_set_LocalData(::Viveport::UserStats::LeaderBoardRequestType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardRequestType::_set_LocalData");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "UserStats/LeaderBoardRequestType", "LocalData", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.UserStats/LeaderBoardRequestType LocalDataAroundUser
::Viveport::UserStats::LeaderBoardRequestType Viveport::UserStats::LeaderBoardRequestType::_get_LocalDataAroundUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardRequestType::_get_LocalDataAroundUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::UserStats::LeaderBoardRequestType>("Viveport", "UserStats/LeaderBoardRequestType", "LocalDataAroundUser"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.UserStats/LeaderBoardRequestType LocalDataAroundUser
void Viveport::UserStats::LeaderBoardRequestType::_set_LocalDataAroundUser(::Viveport::UserStats::LeaderBoardRequestType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardRequestType::_set_LocalDataAroundUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "UserStats/LeaderBoardRequestType", "LocalDataAroundUser", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Viveport::UserStats::LeaderBoardRequestType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardRequestType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.UserStats/LeaderBoardTimeRange
#include "Viveport/UserStats_LeaderBoardTimeRange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Viveport.UserStats/LeaderBoardTimeRange AllTime
::Viveport::UserStats::LeaderBoardTimeRange Viveport::UserStats::LeaderBoardTimeRange::_get_AllTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardTimeRange::_get_AllTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::UserStats::LeaderBoardTimeRange>("Viveport", "UserStats/LeaderBoardTimeRange", "AllTime"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.UserStats/LeaderBoardTimeRange AllTime
void Viveport::UserStats::LeaderBoardTimeRange::_set_AllTime(::Viveport::UserStats::LeaderBoardTimeRange value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardTimeRange::_set_AllTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "UserStats/LeaderBoardTimeRange", "AllTime", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.UserStats/LeaderBoardTimeRange Daily
::Viveport::UserStats::LeaderBoardTimeRange Viveport::UserStats::LeaderBoardTimeRange::_get_Daily() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardTimeRange::_get_Daily");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::UserStats::LeaderBoardTimeRange>("Viveport", "UserStats/LeaderBoardTimeRange", "Daily"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.UserStats/LeaderBoardTimeRange Daily
void Viveport::UserStats::LeaderBoardTimeRange::_set_Daily(::Viveport::UserStats::LeaderBoardTimeRange value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardTimeRange::_set_Daily");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "UserStats/LeaderBoardTimeRange", "Daily", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.UserStats/LeaderBoardTimeRange Weekly
::Viveport::UserStats::LeaderBoardTimeRange Viveport::UserStats::LeaderBoardTimeRange::_get_Weekly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardTimeRange::_get_Weekly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::UserStats::LeaderBoardTimeRange>("Viveport", "UserStats/LeaderBoardTimeRange", "Weekly"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.UserStats/LeaderBoardTimeRange Weekly
void Viveport::UserStats::LeaderBoardTimeRange::_set_Weekly(::Viveport::UserStats::LeaderBoardTimeRange value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardTimeRange::_set_Weekly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "UserStats/LeaderBoardTimeRange", "Weekly", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.UserStats/LeaderBoardTimeRange Monthly
::Viveport::UserStats::LeaderBoardTimeRange Viveport::UserStats::LeaderBoardTimeRange::_get_Monthly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardTimeRange::_get_Monthly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::UserStats::LeaderBoardTimeRange>("Viveport", "UserStats/LeaderBoardTimeRange", "Monthly"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.UserStats/LeaderBoardTimeRange Monthly
void Viveport::UserStats::LeaderBoardTimeRange::_set_Monthly(::Viveport::UserStats::LeaderBoardTimeRange value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardTimeRange::_set_Monthly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "UserStats/LeaderBoardTimeRange", "Monthly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Viveport::UserStats::LeaderBoardTimeRange::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardTimeRange::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.UserStats/LeaderBoardSortMethod
#include "Viveport/UserStats_LeaderBoardSortMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Viveport.UserStats/LeaderBoardSortMethod None
::Viveport::UserStats::LeaderBoardSortMethod Viveport::UserStats::LeaderBoardSortMethod::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardSortMethod::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::UserStats::LeaderBoardSortMethod>("Viveport", "UserStats/LeaderBoardSortMethod", "None"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.UserStats/LeaderBoardSortMethod None
void Viveport::UserStats::LeaderBoardSortMethod::_set_None(::Viveport::UserStats::LeaderBoardSortMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardSortMethod::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "UserStats/LeaderBoardSortMethod", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.UserStats/LeaderBoardSortMethod Ascending
::Viveport::UserStats::LeaderBoardSortMethod Viveport::UserStats::LeaderBoardSortMethod::_get_Ascending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardSortMethod::_get_Ascending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::UserStats::LeaderBoardSortMethod>("Viveport", "UserStats/LeaderBoardSortMethod", "Ascending"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.UserStats/LeaderBoardSortMethod Ascending
void Viveport::UserStats::LeaderBoardSortMethod::_set_Ascending(::Viveport::UserStats::LeaderBoardSortMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardSortMethod::_set_Ascending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "UserStats/LeaderBoardSortMethod", "Ascending", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.UserStats/LeaderBoardSortMethod Descending
::Viveport::UserStats::LeaderBoardSortMethod Viveport::UserStats::LeaderBoardSortMethod::_get_Descending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardSortMethod::_get_Descending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::UserStats::LeaderBoardSortMethod>("Viveport", "UserStats/LeaderBoardSortMethod", "Descending"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.UserStats/LeaderBoardSortMethod Descending
void Viveport::UserStats::LeaderBoardSortMethod::_set_Descending(::Viveport::UserStats::LeaderBoardSortMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardSortMethod::_set_Descending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "UserStats/LeaderBoardSortMethod", "Descending", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Viveport::UserStats::LeaderBoardSortMethod::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardSortMethod::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.UserStats/LeaderBoardDiaplayType
#include "Viveport/UserStats_LeaderBoardDiaplayType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Viveport.UserStats/LeaderBoardDiaplayType None
::Viveport::UserStats::LeaderBoardDiaplayType Viveport::UserStats::LeaderBoardDiaplayType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardDiaplayType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::UserStats::LeaderBoardDiaplayType>("Viveport", "UserStats/LeaderBoardDiaplayType", "None"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.UserStats/LeaderBoardDiaplayType None
void Viveport::UserStats::LeaderBoardDiaplayType::_set_None(::Viveport::UserStats::LeaderBoardDiaplayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardDiaplayType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "UserStats/LeaderBoardDiaplayType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.UserStats/LeaderBoardDiaplayType Numeric
::Viveport::UserStats::LeaderBoardDiaplayType Viveport::UserStats::LeaderBoardDiaplayType::_get_Numeric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardDiaplayType::_get_Numeric");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::UserStats::LeaderBoardDiaplayType>("Viveport", "UserStats/LeaderBoardDiaplayType", "Numeric"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.UserStats/LeaderBoardDiaplayType Numeric
void Viveport::UserStats::LeaderBoardDiaplayType::_set_Numeric(::Viveport::UserStats::LeaderBoardDiaplayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardDiaplayType::_set_Numeric");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "UserStats/LeaderBoardDiaplayType", "Numeric", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.UserStats/LeaderBoardDiaplayType TimeSeconds
::Viveport::UserStats::LeaderBoardDiaplayType Viveport::UserStats::LeaderBoardDiaplayType::_get_TimeSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardDiaplayType::_get_TimeSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::UserStats::LeaderBoardDiaplayType>("Viveport", "UserStats/LeaderBoardDiaplayType", "TimeSeconds"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.UserStats/LeaderBoardDiaplayType TimeSeconds
void Viveport::UserStats::LeaderBoardDiaplayType::_set_TimeSeconds(::Viveport::UserStats::LeaderBoardDiaplayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardDiaplayType::_set_TimeSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "UserStats/LeaderBoardDiaplayType", "TimeSeconds", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.UserStats/LeaderBoardDiaplayType TimeMilliSeconds
::Viveport::UserStats::LeaderBoardDiaplayType Viveport::UserStats::LeaderBoardDiaplayType::_get_TimeMilliSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardDiaplayType::_get_TimeMilliSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::UserStats::LeaderBoardDiaplayType>("Viveport", "UserStats/LeaderBoardDiaplayType", "TimeMilliSeconds"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.UserStats/LeaderBoardDiaplayType TimeMilliSeconds
void Viveport::UserStats::LeaderBoardDiaplayType::_set_TimeMilliSeconds(::Viveport::UserStats::LeaderBoardDiaplayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardDiaplayType::_set_TimeMilliSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "UserStats/LeaderBoardDiaplayType", "TimeMilliSeconds", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Viveport::UserStats::LeaderBoardDiaplayType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardDiaplayType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.UserStats/LeaderBoardScoreMethod
#include "Viveport/UserStats_LeaderBoardScoreMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Viveport.UserStats/LeaderBoardScoreMethod None
::Viveport::UserStats::LeaderBoardScoreMethod Viveport::UserStats::LeaderBoardScoreMethod::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardScoreMethod::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::UserStats::LeaderBoardScoreMethod>("Viveport", "UserStats/LeaderBoardScoreMethod", "None"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.UserStats/LeaderBoardScoreMethod None
void Viveport::UserStats::LeaderBoardScoreMethod::_set_None(::Viveport::UserStats::LeaderBoardScoreMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardScoreMethod::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "UserStats/LeaderBoardScoreMethod", "None", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.UserStats/LeaderBoardScoreMethod KeepBest
::Viveport::UserStats::LeaderBoardScoreMethod Viveport::UserStats::LeaderBoardScoreMethod::_get_KeepBest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardScoreMethod::_get_KeepBest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::UserStats::LeaderBoardScoreMethod>("Viveport", "UserStats/LeaderBoardScoreMethod", "KeepBest"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.UserStats/LeaderBoardScoreMethod KeepBest
void Viveport::UserStats::LeaderBoardScoreMethod::_set_KeepBest(::Viveport::UserStats::LeaderBoardScoreMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardScoreMethod::_set_KeepBest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "UserStats/LeaderBoardScoreMethod", "KeepBest", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.UserStats/LeaderBoardScoreMethod ForceUpdate
::Viveport::UserStats::LeaderBoardScoreMethod Viveport::UserStats::LeaderBoardScoreMethod::_get_ForceUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardScoreMethod::_get_ForceUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::UserStats::LeaderBoardScoreMethod>("Viveport", "UserStats/LeaderBoardScoreMethod", "ForceUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.UserStats/LeaderBoardScoreMethod ForceUpdate
void Viveport::UserStats::LeaderBoardScoreMethod::_set_ForceUpdate(::Viveport::UserStats::LeaderBoardScoreMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardScoreMethod::_set_ForceUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "UserStats/LeaderBoardScoreMethod", "ForceUpdate", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Viveport::UserStats::LeaderBoardScoreMethod::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::LeaderBoardScoreMethod::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.UserStats/AchievementDisplayAttribute
#include "Viveport/UserStats_AchievementDisplayAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Viveport.UserStats/AchievementDisplayAttribute Name
::Viveport::UserStats::AchievementDisplayAttribute Viveport::UserStats::AchievementDisplayAttribute::_get_Name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::AchievementDisplayAttribute::_get_Name");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::UserStats::AchievementDisplayAttribute>("Viveport", "UserStats/AchievementDisplayAttribute", "Name"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.UserStats/AchievementDisplayAttribute Name
void Viveport::UserStats::AchievementDisplayAttribute::_set_Name(::Viveport::UserStats::AchievementDisplayAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::AchievementDisplayAttribute::_set_Name");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "UserStats/AchievementDisplayAttribute", "Name", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.UserStats/AchievementDisplayAttribute Desc
::Viveport::UserStats::AchievementDisplayAttribute Viveport::UserStats::AchievementDisplayAttribute::_get_Desc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::AchievementDisplayAttribute::_get_Desc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::UserStats::AchievementDisplayAttribute>("Viveport", "UserStats/AchievementDisplayAttribute", "Desc"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.UserStats/AchievementDisplayAttribute Desc
void Viveport::UserStats::AchievementDisplayAttribute::_set_Desc(::Viveport::UserStats::AchievementDisplayAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::AchievementDisplayAttribute::_set_Desc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "UserStats/AchievementDisplayAttribute", "Desc", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.UserStats/AchievementDisplayAttribute Hidden
::Viveport::UserStats::AchievementDisplayAttribute Viveport::UserStats::AchievementDisplayAttribute::_get_Hidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::AchievementDisplayAttribute::_get_Hidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::UserStats::AchievementDisplayAttribute>("Viveport", "UserStats/AchievementDisplayAttribute", "Hidden"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.UserStats/AchievementDisplayAttribute Hidden
void Viveport::UserStats::AchievementDisplayAttribute::_set_Hidden(::Viveport::UserStats::AchievementDisplayAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::AchievementDisplayAttribute::_set_Hidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "UserStats/AchievementDisplayAttribute", "Hidden", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Viveport::UserStats::AchievementDisplayAttribute::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::UserStats::AchievementDisplayAttribute::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.ArcadeLeaderboard
#include "Viveport/ArcadeLeaderboard.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.IAPurchase
#include "Viveport/IAPurchase.hpp"
// Including type: Viveport.IAPurchase/IAPHandler
#include "Viveport/IAPurchase_IAPHandler.hpp"
// Including type: Viveport.IAPurchase/BaseHandler
#include "Viveport/IAPurchase_BaseHandler.hpp"
// Including type: Viveport.IAPurchase/IAPurchaseListener
#include "Viveport/IAPurchase_IAPurchaseListener.hpp"
// Including type: Viveport.IAPurchase/QueryResponse
#include "Viveport/IAPurchase_QueryResponse.hpp"
// Including type: Viveport.IAPurchase/QueryResponse2
#include "Viveport/IAPurchase_QueryResponse2.hpp"
// Including type: Viveport.IAPurchase/QueryListResponse
#include "Viveport/IAPurchase_QueryListResponse.hpp"
// Including type: Viveport.IAPurchase/StatusDetailTransaction
#include "Viveport/IAPurchase_StatusDetailTransaction.hpp"
// Including type: Viveport.IAPurchase/StatusDetail
#include "Viveport/IAPurchase_StatusDetail.hpp"
// Including type: Viveport.IAPurchase/TimePeriod
#include "Viveport/IAPurchase_TimePeriod.hpp"
// Including type: Viveport.IAPurchase/Subscription
#include "Viveport/IAPurchase_Subscription.hpp"
// Including type: Viveport.IAPurchase/QuerySubscritionResponse
#include "Viveport/IAPurchase_QuerySubscritionResponse.hpp"
// Including type: Viveport.Internal.IAPurchaseCallback
#include "Viveport/Internal/IAPurchaseCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.IAPurchaseCallback isReadyIl2cppCallback
::Viveport::Internal::IAPurchaseCallback* Viveport::IAPurchase::_get_isReadyIl2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::_get_isReadyIl2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::IAPurchaseCallback*>("Viveport", "IAPurchase", "isReadyIl2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.IAPurchaseCallback isReadyIl2cppCallback
void Viveport::IAPurchase::_set_isReadyIl2cppCallback(::Viveport::Internal::IAPurchaseCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::_set_isReadyIl2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "IAPurchase", "isReadyIl2cppCallback", value));
}
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.IAPurchaseCallback request01Il2cppCallback
::Viveport::Internal::IAPurchaseCallback* Viveport::IAPurchase::_get_request01Il2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::_get_request01Il2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::IAPurchaseCallback*>("Viveport", "IAPurchase", "request01Il2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.IAPurchaseCallback request01Il2cppCallback
void Viveport::IAPurchase::_set_request01Il2cppCallback(::Viveport::Internal::IAPurchaseCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::_set_request01Il2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "IAPurchase", "request01Il2cppCallback", value));
}
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.IAPurchaseCallback request02Il2cppCallback
::Viveport::Internal::IAPurchaseCallback* Viveport::IAPurchase::_get_request02Il2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::_get_request02Il2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::IAPurchaseCallback*>("Viveport", "IAPurchase", "request02Il2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.IAPurchaseCallback request02Il2cppCallback
void Viveport::IAPurchase::_set_request02Il2cppCallback(::Viveport::Internal::IAPurchaseCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::_set_request02Il2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "IAPurchase", "request02Il2cppCallback", value));
}
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.IAPurchaseCallback purchaseIl2cppCallback
::Viveport::Internal::IAPurchaseCallback* Viveport::IAPurchase::_get_purchaseIl2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::_get_purchaseIl2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::IAPurchaseCallback*>("Viveport", "IAPurchase", "purchaseIl2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.IAPurchaseCallback purchaseIl2cppCallback
void Viveport::IAPurchase::_set_purchaseIl2cppCallback(::Viveport::Internal::IAPurchaseCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::_set_purchaseIl2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "IAPurchase", "purchaseIl2cppCallback", value));
}
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.IAPurchaseCallback query01Il2cppCallback
::Viveport::Internal::IAPurchaseCallback* Viveport::IAPurchase::_get_query01Il2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::_get_query01Il2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::IAPurchaseCallback*>("Viveport", "IAPurchase", "query01Il2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.IAPurchaseCallback query01Il2cppCallback
void Viveport::IAPurchase::_set_query01Il2cppCallback(::Viveport::Internal::IAPurchaseCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::_set_query01Il2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "IAPurchase", "query01Il2cppCallback", value));
}
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.IAPurchaseCallback query02Il2cppCallback
::Viveport::Internal::IAPurchaseCallback* Viveport::IAPurchase::_get_query02Il2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::_get_query02Il2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::IAPurchaseCallback*>("Viveport", "IAPurchase", "query02Il2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.IAPurchaseCallback query02Il2cppCallback
void Viveport::IAPurchase::_set_query02Il2cppCallback(::Viveport::Internal::IAPurchaseCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::_set_query02Il2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "IAPurchase", "query02Il2cppCallback", value));
}
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.IAPurchaseCallback getBalanceIl2cppCallback
::Viveport::Internal::IAPurchaseCallback* Viveport::IAPurchase::_get_getBalanceIl2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::_get_getBalanceIl2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::IAPurchaseCallback*>("Viveport", "IAPurchase", "getBalanceIl2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.IAPurchaseCallback getBalanceIl2cppCallback
void Viveport::IAPurchase::_set_getBalanceIl2cppCallback(::Viveport::Internal::IAPurchaseCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::_set_getBalanceIl2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "IAPurchase", "getBalanceIl2cppCallback", value));
}
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.IAPurchaseCallback requestSubscriptionIl2cppCallback
::Viveport::Internal::IAPurchaseCallback* Viveport::IAPurchase::_get_requestSubscriptionIl2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::_get_requestSubscriptionIl2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::IAPurchaseCallback*>("Viveport", "IAPurchase", "requestSubscriptionIl2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.IAPurchaseCallback requestSubscriptionIl2cppCallback
void Viveport::IAPurchase::_set_requestSubscriptionIl2cppCallback(::Viveport::Internal::IAPurchaseCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::_set_requestSubscriptionIl2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "IAPurchase", "requestSubscriptionIl2cppCallback", value));
}
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.IAPurchaseCallback requestSubscriptionWithPlanIDIl2cppCallback
::Viveport::Internal::IAPurchaseCallback* Viveport::IAPurchase::_get_requestSubscriptionWithPlanIDIl2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::_get_requestSubscriptionWithPlanIDIl2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::IAPurchaseCallback*>("Viveport", "IAPurchase", "requestSubscriptionWithPlanIDIl2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.IAPurchaseCallback requestSubscriptionWithPlanIDIl2cppCallback
void Viveport::IAPurchase::_set_requestSubscriptionWithPlanIDIl2cppCallback(::Viveport::Internal::IAPurchaseCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::_set_requestSubscriptionWithPlanIDIl2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "IAPurchase", "requestSubscriptionWithPlanIDIl2cppCallback", value));
}
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.IAPurchaseCallback subscribeIl2cppCallback
::Viveport::Internal::IAPurchaseCallback* Viveport::IAPurchase::_get_subscribeIl2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::_get_subscribeIl2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::IAPurchaseCallback*>("Viveport", "IAPurchase", "subscribeIl2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.IAPurchaseCallback subscribeIl2cppCallback
void Viveport::IAPurchase::_set_subscribeIl2cppCallback(::Viveport::Internal::IAPurchaseCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::_set_subscribeIl2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "IAPurchase", "subscribeIl2cppCallback", value));
}
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.IAPurchaseCallback querySubscriptionIl2cppCallback
::Viveport::Internal::IAPurchaseCallback* Viveport::IAPurchase::_get_querySubscriptionIl2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::_get_querySubscriptionIl2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::IAPurchaseCallback*>("Viveport", "IAPurchase", "querySubscriptionIl2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.IAPurchaseCallback querySubscriptionIl2cppCallback
void Viveport::IAPurchase::_set_querySubscriptionIl2cppCallback(::Viveport::Internal::IAPurchaseCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::_set_querySubscriptionIl2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "IAPurchase", "querySubscriptionIl2cppCallback", value));
}
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.IAPurchaseCallback querySubscriptionListIl2cppCallback
::Viveport::Internal::IAPurchaseCallback* Viveport::IAPurchase::_get_querySubscriptionListIl2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::_get_querySubscriptionListIl2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::IAPurchaseCallback*>("Viveport", "IAPurchase", "querySubscriptionListIl2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.IAPurchaseCallback querySubscriptionListIl2cppCallback
void Viveport::IAPurchase::_set_querySubscriptionListIl2cppCallback(::Viveport::Internal::IAPurchaseCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::_set_querySubscriptionListIl2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "IAPurchase", "querySubscriptionListIl2cppCallback", value));
}
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.IAPurchaseCallback cancelSubscriptionIl2cppCallback
::Viveport::Internal::IAPurchaseCallback* Viveport::IAPurchase::_get_cancelSubscriptionIl2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::_get_cancelSubscriptionIl2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::IAPurchaseCallback*>("Viveport", "IAPurchase", "cancelSubscriptionIl2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.IAPurchaseCallback cancelSubscriptionIl2cppCallback
void Viveport::IAPurchase::_set_cancelSubscriptionIl2cppCallback(::Viveport::Internal::IAPurchaseCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::_set_cancelSubscriptionIl2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "IAPurchase", "cancelSubscriptionIl2cppCallback", value));
}
// Autogenerated method: Viveport.IAPurchase.IsReadyIl2cppCallback
void Viveport::IAPurchase::IsReadyIl2cppCallback(int errorCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IsReadyIl2cppCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "IAPurchase", "IsReadyIl2cppCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode, message);
}
// Autogenerated method: Viveport.IAPurchase.IsReady
void Viveport::IAPurchase::IsReady(::Viveport::IAPurchase::IAPurchaseListener* listener, ::StringW pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "IAPurchase", "IsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener), ::il2cpp_utils::ExtractType(pchAppKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, listener, pchAppKey);
}
// Autogenerated method: Viveport.IAPurchase.Request01Il2cppCallback
void Viveport::IAPurchase::Request01Il2cppCallback(int errorCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Request01Il2cppCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "IAPurchase", "Request01Il2cppCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode, message);
}
// Autogenerated method: Viveport.IAPurchase.Request
void Viveport::IAPurchase::Request(::Viveport::IAPurchase::IAPurchaseListener* listener, ::StringW pchPrice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Request");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "IAPurchase", "Request", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener), ::il2cpp_utils::ExtractType(pchPrice)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, listener, pchPrice);
}
// Autogenerated method: Viveport.IAPurchase.Request02Il2cppCallback
void Viveport::IAPurchase::Request02Il2cppCallback(int errorCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Request02Il2cppCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "IAPurchase", "Request02Il2cppCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode, message);
}
// Autogenerated method: Viveport.IAPurchase.Request
void Viveport::IAPurchase::Request(::Viveport::IAPurchase::IAPurchaseListener* listener, ::StringW pchPrice, ::StringW pchUserData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Request");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "IAPurchase", "Request", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener), ::il2cpp_utils::ExtractType(pchPrice), ::il2cpp_utils::ExtractType(pchUserData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, listener, pchPrice, pchUserData);
}
// Autogenerated method: Viveport.IAPurchase.PurchaseIl2cppCallback
void Viveport::IAPurchase::PurchaseIl2cppCallback(int errorCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::PurchaseIl2cppCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "IAPurchase", "PurchaseIl2cppCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode, message);
}
// Autogenerated method: Viveport.IAPurchase.Purchase
void Viveport::IAPurchase::Purchase(::Viveport::IAPurchase::IAPurchaseListener* listener, ::StringW pchPurchaseId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Purchase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "IAPurchase", "Purchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener), ::il2cpp_utils::ExtractType(pchPurchaseId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, listener, pchPurchaseId);
}
// Autogenerated method: Viveport.IAPurchase.Query01Il2cppCallback
void Viveport::IAPurchase::Query01Il2cppCallback(int errorCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Query01Il2cppCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "IAPurchase", "Query01Il2cppCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode, message);
}
// Autogenerated method: Viveport.IAPurchase.Query
void Viveport::IAPurchase::Query(::Viveport::IAPurchase::IAPurchaseListener* listener, ::StringW pchPurchaseId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Query");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "IAPurchase", "Query", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener), ::il2cpp_utils::ExtractType(pchPurchaseId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, listener, pchPurchaseId);
}
// Autogenerated method: Viveport.IAPurchase.Query02Il2cppCallback
void Viveport::IAPurchase::Query02Il2cppCallback(int errorCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Query02Il2cppCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "IAPurchase", "Query02Il2cppCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode, message);
}
// Autogenerated method: Viveport.IAPurchase.Query
void Viveport::IAPurchase::Query(::Viveport::IAPurchase::IAPurchaseListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Query");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "IAPurchase", "Query", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, listener);
}
// Autogenerated method: Viveport.IAPurchase.GetBalanceIl2cppCallback
void Viveport::IAPurchase::GetBalanceIl2cppCallback(int errorCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::GetBalanceIl2cppCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "IAPurchase", "GetBalanceIl2cppCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode, message);
}
// Autogenerated method: Viveport.IAPurchase.GetBalance
void Viveport::IAPurchase::GetBalance(::Viveport::IAPurchase::IAPurchaseListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::GetBalance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "IAPurchase", "GetBalance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, listener);
}
// Autogenerated method: Viveport.IAPurchase.RequestSubscriptionIl2cppCallback
void Viveport::IAPurchase::RequestSubscriptionIl2cppCallback(int errorCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::RequestSubscriptionIl2cppCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "IAPurchase", "RequestSubscriptionIl2cppCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode, message);
}
// Autogenerated method: Viveport.IAPurchase.RequestSubscription
void Viveport::IAPurchase::RequestSubscription(::Viveport::IAPurchase::IAPurchaseListener* listener, ::StringW pchPrice, ::StringW pchFreeTrialType, int nFreeTrialValue, ::StringW pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, ::StringW pchPlanId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::RequestSubscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "IAPurchase", "RequestSubscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener), ::il2cpp_utils::ExtractType(pchPrice), ::il2cpp_utils::ExtractType(pchFreeTrialType), ::il2cpp_utils::ExtractType(nFreeTrialValue), ::il2cpp_utils::ExtractType(pchChargePeriodType), ::il2cpp_utils::ExtractType(nChargePeriodValue), ::il2cpp_utils::ExtractType(nNumberOfChargePeriod), ::il2cpp_utils::ExtractType(pchPlanId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, listener, pchPrice, pchFreeTrialType, nFreeTrialValue, pchChargePeriodType, nChargePeriodValue, nNumberOfChargePeriod, pchPlanId);
}
// Autogenerated method: Viveport.IAPurchase.RequestSubscriptionWithPlanIDIl2cppCallback
void Viveport::IAPurchase::RequestSubscriptionWithPlanIDIl2cppCallback(int errorCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::RequestSubscriptionWithPlanIDIl2cppCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "IAPurchase", "RequestSubscriptionWithPlanIDIl2cppCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode, message);
}
// Autogenerated method: Viveport.IAPurchase.RequestSubscriptionWithPlanID
void Viveport::IAPurchase::RequestSubscriptionWithPlanID(::Viveport::IAPurchase::IAPurchaseListener* listener, ::StringW pchPlanId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::RequestSubscriptionWithPlanID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "IAPurchase", "RequestSubscriptionWithPlanID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener), ::il2cpp_utils::ExtractType(pchPlanId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, listener, pchPlanId);
}
// Autogenerated method: Viveport.IAPurchase.SubscribeIl2cppCallback
void Viveport::IAPurchase::SubscribeIl2cppCallback(int errorCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::SubscribeIl2cppCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "IAPurchase", "SubscribeIl2cppCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode, message);
}
// Autogenerated method: Viveport.IAPurchase.Subscribe
void Viveport::IAPurchase::Subscribe(::Viveport::IAPurchase::IAPurchaseListener* listener, ::StringW pchSubscriptionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscribe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "IAPurchase", "Subscribe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener), ::il2cpp_utils::ExtractType(pchSubscriptionId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, listener, pchSubscriptionId);
}
// Autogenerated method: Viveport.IAPurchase.QuerySubscriptionIl2cppCallback
void Viveport::IAPurchase::QuerySubscriptionIl2cppCallback(int errorCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QuerySubscriptionIl2cppCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "IAPurchase", "QuerySubscriptionIl2cppCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode, message);
}
// Autogenerated method: Viveport.IAPurchase.QuerySubscription
void Viveport::IAPurchase::QuerySubscription(::Viveport::IAPurchase::IAPurchaseListener* listener, ::StringW pchSubscriptionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QuerySubscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "IAPurchase", "QuerySubscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener), ::il2cpp_utils::ExtractType(pchSubscriptionId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, listener, pchSubscriptionId);
}
// Autogenerated method: Viveport.IAPurchase.QuerySubscriptionListIl2cppCallback
void Viveport::IAPurchase::QuerySubscriptionListIl2cppCallback(int errorCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QuerySubscriptionListIl2cppCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "IAPurchase", "QuerySubscriptionListIl2cppCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode, message);
}
// Autogenerated method: Viveport.IAPurchase.QuerySubscriptionList
void Viveport::IAPurchase::QuerySubscriptionList(::Viveport::IAPurchase::IAPurchaseListener* listener) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QuerySubscriptionList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "IAPurchase", "QuerySubscriptionList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, listener);
}
// Autogenerated method: Viveport.IAPurchase.CancelSubscriptionIl2cppCallback
void Viveport::IAPurchase::CancelSubscriptionIl2cppCallback(int errorCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::CancelSubscriptionIl2cppCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "IAPurchase", "CancelSubscriptionIl2cppCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode, message);
}
// Autogenerated method: Viveport.IAPurchase.CancelSubscription
void Viveport::IAPurchase::CancelSubscription(::Viveport::IAPurchase::IAPurchaseListener* listener, ::StringW pchSubscriptionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::CancelSubscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "IAPurchase", "CancelSubscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(listener), ::il2cpp_utils::ExtractType(pchSubscriptionId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, listener, pchSubscriptionId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.IAPurchase/IAPHandler
#include "Viveport/IAPurchase_IAPHandler.hpp"
// Including type: Viveport.Internal.IAPurchaseCallback
#include "Viveport/Internal/IAPurchaseCallback.hpp"
// Including type: Viveport.IAPurchase/IAPurchaseListener
#include "Viveport/IAPurchase_IAPurchaseListener.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Viveport.IAPurchase/IAPurchaseListener listener
::Viveport::IAPurchase::IAPurchaseListener* Viveport::IAPurchase::IAPHandler::_get_listener() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPHandler::_get_listener");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::IAPurchase::IAPurchaseListener*>("Viveport", "IAPurchase/IAPHandler", "listener"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.IAPurchase/IAPurchaseListener listener
void Viveport::IAPurchase::IAPHandler::_set_listener(::Viveport::IAPurchase::IAPurchaseListener* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPHandler::_set_listener");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "IAPurchase/IAPHandler", "listener", value));
}
// Autogenerated method: Viveport.IAPurchase/IAPHandler.getIsReadyHandler
::Viveport::Internal::IAPurchaseCallback* Viveport::IAPurchase::IAPHandler::getIsReadyHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPHandler::getIsReadyHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getIsReadyHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Viveport::Internal::IAPurchaseCallback*, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/IAPHandler.getRequestHandler
::Viveport::Internal::IAPurchaseCallback* Viveport::IAPurchase::IAPHandler::getRequestHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPHandler::getRequestHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getRequestHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Viveport::Internal::IAPurchaseCallback*, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/IAPHandler.getPurchaseHandler
::Viveport::Internal::IAPurchaseCallback* Viveport::IAPurchase::IAPHandler::getPurchaseHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPHandler::getPurchaseHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getPurchaseHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Viveport::Internal::IAPurchaseCallback*, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/IAPHandler.getQueryHandler
::Viveport::Internal::IAPurchaseCallback* Viveport::IAPurchase::IAPHandler::getQueryHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPHandler::getQueryHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getQueryHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Viveport::Internal::IAPurchaseCallback*, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/IAPHandler.getQueryListHandler
::Viveport::Internal::IAPurchaseCallback* Viveport::IAPurchase::IAPHandler::getQueryListHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPHandler::getQueryListHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getQueryListHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Viveport::Internal::IAPurchaseCallback*, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/IAPHandler.getBalanceHandler
::Viveport::Internal::IAPurchaseCallback* Viveport::IAPurchase::IAPHandler::getBalanceHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPHandler::getBalanceHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getBalanceHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Viveport::Internal::IAPurchaseCallback*, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/IAPHandler.getRequestSubscriptionHandler
::Viveport::Internal::IAPurchaseCallback* Viveport::IAPurchase::IAPHandler::getRequestSubscriptionHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPHandler::getRequestSubscriptionHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getRequestSubscriptionHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Viveport::Internal::IAPurchaseCallback*, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/IAPHandler.getRequestSubscriptionWithPlanIDHandler
::Viveport::Internal::IAPurchaseCallback* Viveport::IAPurchase::IAPHandler::getRequestSubscriptionWithPlanIDHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPHandler::getRequestSubscriptionWithPlanIDHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getRequestSubscriptionWithPlanIDHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Viveport::Internal::IAPurchaseCallback*, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/IAPHandler.getSubscribeHandler
::Viveport::Internal::IAPurchaseCallback* Viveport::IAPurchase::IAPHandler::getSubscribeHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPHandler::getSubscribeHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getSubscribeHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Viveport::Internal::IAPurchaseCallback*, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/IAPHandler.getQuerySubscriptionHandler
::Viveport::Internal::IAPurchaseCallback* Viveport::IAPurchase::IAPHandler::getQuerySubscriptionHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPHandler::getQuerySubscriptionHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getQuerySubscriptionHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Viveport::Internal::IAPurchaseCallback*, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/IAPHandler.getQuerySubscriptionListHandler
::Viveport::Internal::IAPurchaseCallback* Viveport::IAPurchase::IAPHandler::getQuerySubscriptionListHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPHandler::getQuerySubscriptionListHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getQuerySubscriptionListHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Viveport::Internal::IAPurchaseCallback*, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/IAPHandler.getCancelSubscriptionHandler
::Viveport::Internal::IAPurchaseCallback* Viveport::IAPurchase::IAPHandler::getCancelSubscriptionHandler() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPHandler::getCancelSubscriptionHandler");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "getCancelSubscriptionHandler", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Viveport::Internal::IAPurchaseCallback*, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/IAPHandler.IsReadyHandler
void Viveport::IAPurchase::IAPHandler::IsReadyHandler(int code, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPHandler::IsReadyHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::BaseHandler*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, message);
}
// Autogenerated method: Viveport.IAPurchase/IAPHandler.RequestHandler
void Viveport::IAPurchase::IAPHandler::RequestHandler(int code, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPHandler::RequestHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::BaseHandler*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, message);
}
// Autogenerated method: Viveport.IAPurchase/IAPHandler.PurchaseHandler
void Viveport::IAPurchase::IAPHandler::PurchaseHandler(int code, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPHandler::PurchaseHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::BaseHandler*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, message);
}
// Autogenerated method: Viveport.IAPurchase/IAPHandler.QueryHandler
void Viveport::IAPurchase::IAPHandler::QueryHandler(int code, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPHandler::QueryHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::BaseHandler*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, message);
}
// Autogenerated method: Viveport.IAPurchase/IAPHandler.QueryListHandler
void Viveport::IAPurchase::IAPHandler::QueryListHandler(int code, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPHandler::QueryListHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::BaseHandler*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, message);
}
// Autogenerated method: Viveport.IAPurchase/IAPHandler.BalanceHandler
void Viveport::IAPurchase::IAPHandler::BalanceHandler(int code, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPHandler::BalanceHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::BaseHandler*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, message);
}
// Autogenerated method: Viveport.IAPurchase/IAPHandler.RequestSubscriptionHandler
void Viveport::IAPurchase::IAPHandler::RequestSubscriptionHandler(int code, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPHandler::RequestSubscriptionHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::BaseHandler*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, message);
}
// Autogenerated method: Viveport.IAPurchase/IAPHandler.RequestSubscriptionWithPlanIDHandler
void Viveport::IAPurchase::IAPHandler::RequestSubscriptionWithPlanIDHandler(int code, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPHandler::RequestSubscriptionWithPlanIDHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::BaseHandler*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, message);
}
// Autogenerated method: Viveport.IAPurchase/IAPHandler.SubscribeHandler
void Viveport::IAPurchase::IAPHandler::SubscribeHandler(int code, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPHandler::SubscribeHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::BaseHandler*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, message);
}
// Autogenerated method: Viveport.IAPurchase/IAPHandler.QuerySubscriptionHandler
void Viveport::IAPurchase::IAPHandler::QuerySubscriptionHandler(int code, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPHandler::QuerySubscriptionHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::BaseHandler*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, message);
}
// Autogenerated method: Viveport.IAPurchase/IAPHandler.QuerySubscriptionListHandler
void Viveport::IAPurchase::IAPHandler::QuerySubscriptionListHandler(int code, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPHandler::QuerySubscriptionListHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::BaseHandler*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, message);
}
// Autogenerated method: Viveport.IAPurchase/IAPHandler.CancelSubscriptionHandler
void Viveport::IAPurchase::IAPHandler::CancelSubscriptionHandler(int code, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPHandler::CancelSubscriptionHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::BaseHandler*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.IAPurchase/BaseHandler
#include "Viveport/IAPurchase_BaseHandler.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Viveport.IAPurchase/BaseHandler.IsReadyHandler
void Viveport::IAPurchase::BaseHandler::IsReadyHandler(int code, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::BaseHandler::IsReadyHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::BaseHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, message);
}
// Autogenerated method: Viveport.IAPurchase/BaseHandler.RequestHandler
void Viveport::IAPurchase::BaseHandler::RequestHandler(int code, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::BaseHandler::RequestHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::BaseHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, message);
}
// Autogenerated method: Viveport.IAPurchase/BaseHandler.PurchaseHandler
void Viveport::IAPurchase::BaseHandler::PurchaseHandler(int code, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::BaseHandler::PurchaseHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::BaseHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, message);
}
// Autogenerated method: Viveport.IAPurchase/BaseHandler.QueryHandler
void Viveport::IAPurchase::BaseHandler::QueryHandler(int code, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::BaseHandler::QueryHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::BaseHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, message);
}
// Autogenerated method: Viveport.IAPurchase/BaseHandler.QueryListHandler
void Viveport::IAPurchase::BaseHandler::QueryListHandler(int code, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::BaseHandler::QueryListHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::BaseHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, message);
}
// Autogenerated method: Viveport.IAPurchase/BaseHandler.BalanceHandler
void Viveport::IAPurchase::BaseHandler::BalanceHandler(int code, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::BaseHandler::BalanceHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::BaseHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, message);
}
// Autogenerated method: Viveport.IAPurchase/BaseHandler.RequestSubscriptionHandler
void Viveport::IAPurchase::BaseHandler::RequestSubscriptionHandler(int code, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::BaseHandler::RequestSubscriptionHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::BaseHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, message);
}
// Autogenerated method: Viveport.IAPurchase/BaseHandler.RequestSubscriptionWithPlanIDHandler
void Viveport::IAPurchase::BaseHandler::RequestSubscriptionWithPlanIDHandler(int code, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::BaseHandler::RequestSubscriptionWithPlanIDHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::BaseHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, message);
}
// Autogenerated method: Viveport.IAPurchase/BaseHandler.SubscribeHandler
void Viveport::IAPurchase::BaseHandler::SubscribeHandler(int code, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::BaseHandler::SubscribeHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::BaseHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, message);
}
// Autogenerated method: Viveport.IAPurchase/BaseHandler.QuerySubscriptionHandler
void Viveport::IAPurchase::BaseHandler::QuerySubscriptionHandler(int code, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::BaseHandler::QuerySubscriptionHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::BaseHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, message);
}
// Autogenerated method: Viveport.IAPurchase/BaseHandler.QuerySubscriptionListHandler
void Viveport::IAPurchase::BaseHandler::QuerySubscriptionListHandler(int code, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::BaseHandler::QuerySubscriptionListHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::BaseHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, message);
}
// Autogenerated method: Viveport.IAPurchase/BaseHandler.CancelSubscriptionHandler
void Viveport::IAPurchase::BaseHandler::CancelSubscriptionHandler(int code, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::BaseHandler::CancelSubscriptionHandler");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::BaseHandler*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, message);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.IAPurchase/IAPurchaseListener
#include "Viveport/IAPurchase_IAPurchaseListener.hpp"
// Including type: Viveport.IAPurchase/QueryResponse
#include "Viveport/IAPurchase_QueryResponse.hpp"
// Including type: Viveport.IAPurchase/QueryListResponse
#include "Viveport/IAPurchase_QueryListResponse.hpp"
// Including type: Viveport.IAPurchase/Subscription
#include "Viveport/IAPurchase_Subscription.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Viveport.IAPurchase/IAPurchaseListener.OnSuccess
void Viveport::IAPurchase::IAPurchaseListener::OnSuccess(::StringW pchCurrencyName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPurchaseListener::OnSuccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::IAPurchaseListener*), 4));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchCurrencyName);
}
// Autogenerated method: Viveport.IAPurchase/IAPurchaseListener.OnRequestSuccess
void Viveport::IAPurchase::IAPurchaseListener::OnRequestSuccess(::StringW pchPurchaseId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPurchaseListener::OnRequestSuccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::IAPurchaseListener*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchPurchaseId);
}
// Autogenerated method: Viveport.IAPurchase/IAPurchaseListener.OnPurchaseSuccess
void Viveport::IAPurchase::IAPurchaseListener::OnPurchaseSuccess(::StringW pchPurchaseId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPurchaseListener::OnPurchaseSuccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::IAPurchaseListener*), 6));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchPurchaseId);
}
// Autogenerated method: Viveport.IAPurchase/IAPurchaseListener.OnQuerySuccess
void Viveport::IAPurchase::IAPurchaseListener::OnQuerySuccess(::Viveport::IAPurchase::QueryResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPurchaseListener::OnQuerySuccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::IAPurchaseListener*), 7));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated method: Viveport.IAPurchase/IAPurchaseListener.OnQuerySuccess
void Viveport::IAPurchase::IAPurchaseListener::OnQuerySuccess(::Viveport::IAPurchase::QueryListResponse* response) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPurchaseListener::OnQuerySuccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::IAPurchaseListener*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, response);
}
// Autogenerated method: Viveport.IAPurchase/IAPurchaseListener.OnBalanceSuccess
void Viveport::IAPurchase::IAPurchaseListener::OnBalanceSuccess(::StringW pchBalance) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPurchaseListener::OnBalanceSuccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::IAPurchaseListener*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchBalance);
}
// Autogenerated method: Viveport.IAPurchase/IAPurchaseListener.OnFailure
void Viveport::IAPurchase::IAPurchaseListener::OnFailure(int nCode, ::StringW pchMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPurchaseListener::OnFailure");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::IAPurchaseListener*), 10));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nCode, pchMessage);
}
// Autogenerated method: Viveport.IAPurchase/IAPurchaseListener.OnRequestSubscriptionSuccess
void Viveport::IAPurchase::IAPurchaseListener::OnRequestSubscriptionSuccess(::StringW pchSubscriptionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPurchaseListener::OnRequestSubscriptionSuccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::IAPurchaseListener*), 11));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSubscriptionId);
}
// Autogenerated method: Viveport.IAPurchase/IAPurchaseListener.OnRequestSubscriptionWithPlanIDSuccess
void Viveport::IAPurchase::IAPurchaseListener::OnRequestSubscriptionWithPlanIDSuccess(::StringW pchSubscriptionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPurchaseListener::OnRequestSubscriptionWithPlanIDSuccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::IAPurchaseListener*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSubscriptionId);
}
// Autogenerated method: Viveport.IAPurchase/IAPurchaseListener.OnSubscribeSuccess
void Viveport::IAPurchase::IAPurchaseListener::OnSubscribeSuccess(::StringW pchSubscriptionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPurchaseListener::OnSubscribeSuccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::IAPurchaseListener*), 13));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pchSubscriptionId);
}
// Autogenerated method: Viveport.IAPurchase/IAPurchaseListener.OnQuerySubscriptionSuccess
void Viveport::IAPurchase::IAPurchaseListener::OnQuerySubscriptionSuccess(::ArrayW<::Viveport::IAPurchase::Subscription*> subscriptionlist) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPurchaseListener::OnQuerySubscriptionSuccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::IAPurchaseListener*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, subscriptionlist);
}
// Autogenerated method: Viveport.IAPurchase/IAPurchaseListener.OnQuerySubscriptionListSuccess
void Viveport::IAPurchase::IAPurchaseListener::OnQuerySubscriptionListSuccess(::ArrayW<::Viveport::IAPurchase::Subscription*> subscriptionlist) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPurchaseListener::OnQuerySubscriptionListSuccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::IAPurchaseListener*), 15));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, subscriptionlist);
}
// Autogenerated method: Viveport.IAPurchase/IAPurchaseListener.OnCancelSubscriptionSuccess
void Viveport::IAPurchase::IAPurchaseListener::OnCancelSubscriptionSuccess(bool bCanceled) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::IAPurchaseListener::OnCancelSubscriptionSuccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::IAPurchase::IAPurchaseListener*), 16));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, bCanceled);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.IAPurchase/QueryResponse
#include "Viveport/IAPurchase_QueryResponse.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <order_id>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Viveport::IAPurchase::QueryResponse::dyn_$order_id$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse::dyn_$order_id$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<order_id>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <purchase_id>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Viveport::IAPurchase::QueryResponse::dyn_$purchase_id$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse::dyn_$purchase_id$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<purchase_id>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <status>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Viveport::IAPurchase::QueryResponse::dyn_$status$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse::dyn_$status$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<status>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <price>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Viveport::IAPurchase::QueryResponse::dyn_$price$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse::dyn_$price$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<price>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <currency>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Viveport::IAPurchase::QueryResponse::dyn_$currency$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse::dyn_$currency$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<currency>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <paid_timestamp>k__BackingField
[[deprecated("Use field access instead!")]] int64_t& Viveport::IAPurchase::QueryResponse::dyn_$paid_timestamp$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse::dyn_$paid_timestamp$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<paid_timestamp>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Viveport.IAPurchase/QueryResponse.get_order_id
::StringW Viveport::IAPurchase::QueryResponse::get_order_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse::get_order_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_order_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/QueryResponse.set_order_id
void Viveport::IAPurchase::QueryResponse::set_order_id(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse::set_order_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_order_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/QueryResponse.get_purchase_id
::StringW Viveport::IAPurchase::QueryResponse::get_purchase_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse::get_purchase_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_purchase_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/QueryResponse.set_purchase_id
void Viveport::IAPurchase::QueryResponse::set_purchase_id(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse::set_purchase_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_purchase_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/QueryResponse.get_status
::StringW Viveport::IAPurchase::QueryResponse::get_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse::get_status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/QueryResponse.set_status
void Viveport::IAPurchase::QueryResponse::set_status(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse::set_status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/QueryResponse.get_price
::StringW Viveport::IAPurchase::QueryResponse::get_price() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse::get_price");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_price", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/QueryResponse.set_price
void Viveport::IAPurchase::QueryResponse::set_price(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse::set_price");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_price", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/QueryResponse.get_currency
::StringW Viveport::IAPurchase::QueryResponse::get_currency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse::get_currency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/QueryResponse.set_currency
void Viveport::IAPurchase::QueryResponse::set_currency(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse::set_currency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/QueryResponse.get_paid_timestamp
int64_t Viveport::IAPurchase::QueryResponse::get_paid_timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse::get_paid_timestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_paid_timestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/QueryResponse.set_paid_timestamp
void Viveport::IAPurchase::QueryResponse::set_paid_timestamp(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse::set_paid_timestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_paid_timestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.IAPurchase/QueryResponse2
#include "Viveport/IAPurchase_QueryResponse2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <order_id>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Viveport::IAPurchase::QueryResponse2::dyn_$order_id$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse2::dyn_$order_id$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<order_id>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <app_id>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Viveport::IAPurchase::QueryResponse2::dyn_$app_id$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse2::dyn_$app_id$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<app_id>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <purchase_id>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Viveport::IAPurchase::QueryResponse2::dyn_$purchase_id$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse2::dyn_$purchase_id$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<purchase_id>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <user_data>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Viveport::IAPurchase::QueryResponse2::dyn_$user_data$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse2::dyn_$user_data$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<user_data>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <price>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Viveport::IAPurchase::QueryResponse2::dyn_$price$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse2::dyn_$price$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<price>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <currency>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Viveport::IAPurchase::QueryResponse2::dyn_$currency$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse2::dyn_$currency$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<currency>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <paid_timestamp>k__BackingField
[[deprecated("Use field access instead!")]] int64_t& Viveport::IAPurchase::QueryResponse2::dyn_$paid_timestamp$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse2::dyn_$paid_timestamp$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<paid_timestamp>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Viveport.IAPurchase/QueryResponse2.get_order_id
::StringW Viveport::IAPurchase::QueryResponse2::get_order_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse2::get_order_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_order_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/QueryResponse2.set_order_id
void Viveport::IAPurchase::QueryResponse2::set_order_id(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse2::set_order_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_order_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/QueryResponse2.get_app_id
::StringW Viveport::IAPurchase::QueryResponse2::get_app_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse2::get_app_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_app_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/QueryResponse2.set_app_id
void Viveport::IAPurchase::QueryResponse2::set_app_id(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse2::set_app_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_app_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/QueryResponse2.get_purchase_id
::StringW Viveport::IAPurchase::QueryResponse2::get_purchase_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse2::get_purchase_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_purchase_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/QueryResponse2.set_purchase_id
void Viveport::IAPurchase::QueryResponse2::set_purchase_id(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse2::set_purchase_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_purchase_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/QueryResponse2.get_user_data
::StringW Viveport::IAPurchase::QueryResponse2::get_user_data() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse2::get_user_data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_user_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/QueryResponse2.set_user_data
void Viveport::IAPurchase::QueryResponse2::set_user_data(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse2::set_user_data");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_user_data", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/QueryResponse2.get_price
::StringW Viveport::IAPurchase::QueryResponse2::get_price() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse2::get_price");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_price", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/QueryResponse2.set_price
void Viveport::IAPurchase::QueryResponse2::set_price(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse2::set_price");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_price", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/QueryResponse2.get_currency
::StringW Viveport::IAPurchase::QueryResponse2::get_currency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse2::get_currency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/QueryResponse2.set_currency
void Viveport::IAPurchase::QueryResponse2::set_currency(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse2::set_currency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/QueryResponse2.get_paid_timestamp
int64_t Viveport::IAPurchase::QueryResponse2::get_paid_timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse2::get_paid_timestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_paid_timestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/QueryResponse2.set_paid_timestamp
void Viveport::IAPurchase::QueryResponse2::set_paid_timestamp(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryResponse2::set_paid_timestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_paid_timestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.IAPurchase/QueryListResponse
#include "Viveport/IAPurchase_QueryListResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Viveport.IAPurchase/QueryResponse2
#include "Viveport/IAPurchase_QueryResponse2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <total>k__BackingField
[[deprecated("Use field access instead!")]] int& Viveport::IAPurchase::QueryListResponse::dyn_$total$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryListResponse::dyn_$total$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<total>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <from>k__BackingField
[[deprecated("Use field access instead!")]] int& Viveport::IAPurchase::QueryListResponse::dyn_$from$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryListResponse::dyn_$from$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<from>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <to>k__BackingField
[[deprecated("Use field access instead!")]] int& Viveport::IAPurchase::QueryListResponse::dyn_$to$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryListResponse::dyn_$to$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<to>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<Viveport.IAPurchase/QueryResponse2> purchaseList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Viveport::IAPurchase::QueryResponse2*>*& Viveport::IAPurchase::QueryListResponse::dyn_purchaseList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryListResponse::dyn_purchaseList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "purchaseList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Viveport::IAPurchase::QueryResponse2*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Viveport.IAPurchase/QueryListResponse.get_total
int Viveport::IAPurchase::QueryListResponse::get_total() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryListResponse::get_total");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_total", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/QueryListResponse.set_total
void Viveport::IAPurchase::QueryListResponse::set_total(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryListResponse::set_total");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_total", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/QueryListResponse.get_from
int Viveport::IAPurchase::QueryListResponse::get_from() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryListResponse::get_from");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_from", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/QueryListResponse.set_from
void Viveport::IAPurchase::QueryListResponse::set_from(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryListResponse::set_from");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_from", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/QueryListResponse.get_to
int Viveport::IAPurchase::QueryListResponse::get_to() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryListResponse::get_to");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_to", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/QueryListResponse.set_to
void Viveport::IAPurchase::QueryListResponse::set_to(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QueryListResponse::set_to");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_to", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.IAPurchase/StatusDetailTransaction
#include "Viveport/IAPurchase_StatusDetailTransaction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int64 <create_time>k__BackingField
[[deprecated("Use field access instead!")]] int64_t& Viveport::IAPurchase::StatusDetailTransaction::dyn_$create_time$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::StatusDetailTransaction::dyn_$create_time$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<create_time>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <payment_method>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Viveport::IAPurchase::StatusDetailTransaction::dyn_$payment_method$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::StatusDetailTransaction::dyn_$payment_method$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<payment_method>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <status>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Viveport::IAPurchase::StatusDetailTransaction::dyn_$status$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::StatusDetailTransaction::dyn_$status$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<status>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Viveport.IAPurchase/StatusDetailTransaction.get_create_time
int64_t Viveport::IAPurchase::StatusDetailTransaction::get_create_time() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::StatusDetailTransaction::get_create_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_create_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/StatusDetailTransaction.set_create_time
void Viveport::IAPurchase::StatusDetailTransaction::set_create_time(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::StatusDetailTransaction::set_create_time");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_create_time", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/StatusDetailTransaction.get_payment_method
::StringW Viveport::IAPurchase::StatusDetailTransaction::get_payment_method() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::StatusDetailTransaction::get_payment_method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_payment_method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/StatusDetailTransaction.set_payment_method
void Viveport::IAPurchase::StatusDetailTransaction::set_payment_method(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::StatusDetailTransaction::set_payment_method");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_payment_method", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/StatusDetailTransaction.get_status
::StringW Viveport::IAPurchase::StatusDetailTransaction::get_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::StatusDetailTransaction::get_status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/StatusDetailTransaction.set_status
void Viveport::IAPurchase::StatusDetailTransaction::set_status(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::StatusDetailTransaction::set_status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.IAPurchase/StatusDetail
#include "Viveport/IAPurchase_StatusDetail.hpp"
// Including type: Viveport.IAPurchase/StatusDetailTransaction
#include "Viveport/IAPurchase_StatusDetailTransaction.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int64 <date_next_charge>k__BackingField
[[deprecated("Use field access instead!")]] int64_t& Viveport::IAPurchase::StatusDetail::dyn_$date_next_charge$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::StatusDetail::dyn_$date_next_charge$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<date_next_charge>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Viveport.IAPurchase/StatusDetailTransaction[] <transactions>k__BackingField
[[deprecated("Use field access instead!")]] ::ArrayW<::Viveport::IAPurchase::StatusDetailTransaction*>& Viveport::IAPurchase::StatusDetail::dyn_$transactions$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::StatusDetail::dyn_$transactions$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<transactions>k__BackingField"))->offset;
  return *reinterpret_cast<::ArrayW<::Viveport::IAPurchase::StatusDetailTransaction*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <cancel_reason>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Viveport::IAPurchase::StatusDetail::dyn_$cancel_reason$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::StatusDetail::dyn_$cancel_reason$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<cancel_reason>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Viveport.IAPurchase/StatusDetail.get_date_next_charge
int64_t Viveport::IAPurchase::StatusDetail::get_date_next_charge() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::StatusDetail::get_date_next_charge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_date_next_charge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/StatusDetail.set_date_next_charge
void Viveport::IAPurchase::StatusDetail::set_date_next_charge(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::StatusDetail::set_date_next_charge");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_date_next_charge", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/StatusDetail.get_transactions
::ArrayW<::Viveport::IAPurchase::StatusDetailTransaction*> Viveport::IAPurchase::StatusDetail::get_transactions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::StatusDetail::get_transactions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_transactions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::Viveport::IAPurchase::StatusDetailTransaction*>, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/StatusDetail.set_transactions
void Viveport::IAPurchase::StatusDetail::set_transactions(::ArrayW<::Viveport::IAPurchase::StatusDetailTransaction*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::StatusDetail::set_transactions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_transactions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/StatusDetail.get_cancel_reason
::StringW Viveport::IAPurchase::StatusDetail::get_cancel_reason() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::StatusDetail::get_cancel_reason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_cancel_reason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/StatusDetail.set_cancel_reason
void Viveport::IAPurchase::StatusDetail::set_cancel_reason(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::StatusDetail::set_cancel_reason");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_cancel_reason", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.IAPurchase/TimePeriod
#include "Viveport/IAPurchase_TimePeriod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <time_type>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Viveport::IAPurchase::TimePeriod::dyn_$time_type$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::TimePeriod::dyn_$time_type$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<time_type>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <value>k__BackingField
[[deprecated("Use field access instead!")]] int& Viveport::IAPurchase::TimePeriod::dyn_$value$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::TimePeriod::dyn_$value$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<value>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Viveport.IAPurchase/TimePeriod.get_time_type
::StringW Viveport::IAPurchase::TimePeriod::get_time_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::TimePeriod::get_time_type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_time_type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/TimePeriod.set_time_type
void Viveport::IAPurchase::TimePeriod::set_time_type(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::TimePeriod::set_time_type");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_time_type", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/TimePeriod.get_value
int Viveport::IAPurchase::TimePeriod::get_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::TimePeriod::get_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/TimePeriod.set_value
void Viveport::IAPurchase::TimePeriod::set_value(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::TimePeriod::set_value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.IAPurchase/Subscription
#include "Viveport/IAPurchase_Subscription.hpp"
// Including type: Viveport.IAPurchase/TimePeriod
#include "Viveport/IAPurchase_TimePeriod.hpp"
// Including type: Viveport.IAPurchase/StatusDetail
#include "Viveport/IAPurchase_StatusDetail.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.String <app_id>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Viveport::IAPurchase::Subscription::dyn_$app_id$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::dyn_$app_id$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<app_id>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <order_id>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Viveport::IAPurchase::Subscription::dyn_$order_id$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::dyn_$order_id$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<order_id>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <subscription_id>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Viveport::IAPurchase::Subscription::dyn_$subscription_id$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::dyn_$subscription_id$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<subscription_id>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <price>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Viveport::IAPurchase::Subscription::dyn_$price$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::dyn_$price$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<price>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <currency>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Viveport::IAPurchase::Subscription::dyn_$currency$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::dyn_$currency$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<currency>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 <subscribed_timestamp>k__BackingField
[[deprecated("Use field access instead!")]] int64_t& Viveport::IAPurchase::Subscription::dyn_$subscribed_timestamp$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::dyn_$subscribed_timestamp$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<subscribed_timestamp>k__BackingField"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Viveport.IAPurchase/TimePeriod <free_trial_period>k__BackingField
[[deprecated("Use field access instead!")]] ::Viveport::IAPurchase::TimePeriod*& Viveport::IAPurchase::Subscription::dyn_$free_trial_period$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::dyn_$free_trial_period$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<free_trial_period>k__BackingField"))->offset;
  return *reinterpret_cast<::Viveport::IAPurchase::TimePeriod**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Viveport.IAPurchase/TimePeriod <charge_period>k__BackingField
[[deprecated("Use field access instead!")]] ::Viveport::IAPurchase::TimePeriod*& Viveport::IAPurchase::Subscription::dyn_$charge_period$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::dyn_$charge_period$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<charge_period>k__BackingField"))->offset;
  return *reinterpret_cast<::Viveport::IAPurchase::TimePeriod**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 <number_of_charge_period>k__BackingField
[[deprecated("Use field access instead!")]] int& Viveport::IAPurchase::Subscription::dyn_$number_of_charge_period$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::dyn_$number_of_charge_period$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<number_of_charge_period>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <plan_id>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Viveport::IAPurchase::Subscription::dyn_$plan_id$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::dyn_$plan_id$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<plan_id>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <plan_name>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Viveport::IAPurchase::Subscription::dyn_$plan_name$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::dyn_$plan_name$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<plan_name>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <status>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Viveport::IAPurchase::Subscription::dyn_$status$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::dyn_$status$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<status>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Viveport.IAPurchase/StatusDetail <status_detail>k__BackingField
[[deprecated("Use field access instead!")]] ::Viveport::IAPurchase::StatusDetail*& Viveport::IAPurchase::Subscription::dyn_$status_detail$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::dyn_$status_detail$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<status_detail>k__BackingField"))->offset;
  return *reinterpret_cast<::Viveport::IAPurchase::StatusDetail**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Viveport.IAPurchase/Subscription.get_app_id
::StringW Viveport::IAPurchase::Subscription::get_app_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::get_app_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_app_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/Subscription.set_app_id
void Viveport::IAPurchase::Subscription::set_app_id(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::set_app_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_app_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/Subscription.get_order_id
::StringW Viveport::IAPurchase::Subscription::get_order_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::get_order_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_order_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/Subscription.set_order_id
void Viveport::IAPurchase::Subscription::set_order_id(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::set_order_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_order_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/Subscription.get_subscription_id
::StringW Viveport::IAPurchase::Subscription::get_subscription_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::get_subscription_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_subscription_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/Subscription.set_subscription_id
void Viveport::IAPurchase::Subscription::set_subscription_id(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::set_subscription_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_subscription_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/Subscription.get_price
::StringW Viveport::IAPurchase::Subscription::get_price() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::get_price");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_price", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/Subscription.set_price
void Viveport::IAPurchase::Subscription::set_price(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::set_price");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_price", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/Subscription.get_currency
::StringW Viveport::IAPurchase::Subscription::get_currency() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::get_currency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_currency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/Subscription.set_currency
void Viveport::IAPurchase::Subscription::set_currency(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::set_currency");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_currency", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/Subscription.get_subscribed_timestamp
int64_t Viveport::IAPurchase::Subscription::get_subscribed_timestamp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::get_subscribed_timestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_subscribed_timestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/Subscription.set_subscribed_timestamp
void Viveport::IAPurchase::Subscription::set_subscribed_timestamp(int64_t value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::set_subscribed_timestamp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_subscribed_timestamp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/Subscription.get_free_trial_period
::Viveport::IAPurchase::TimePeriod* Viveport::IAPurchase::Subscription::get_free_trial_period() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::get_free_trial_period");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_free_trial_period", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Viveport::IAPurchase::TimePeriod*, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/Subscription.set_free_trial_period
void Viveport::IAPurchase::Subscription::set_free_trial_period(::Viveport::IAPurchase::TimePeriod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::set_free_trial_period");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_free_trial_period", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/Subscription.get_charge_period
::Viveport::IAPurchase::TimePeriod* Viveport::IAPurchase::Subscription::get_charge_period() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::get_charge_period");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_charge_period", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Viveport::IAPurchase::TimePeriod*, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/Subscription.set_charge_period
void Viveport::IAPurchase::Subscription::set_charge_period(::Viveport::IAPurchase::TimePeriod* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::set_charge_period");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_charge_period", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/Subscription.get_number_of_charge_period
int Viveport::IAPurchase::Subscription::get_number_of_charge_period() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::get_number_of_charge_period");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_number_of_charge_period", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/Subscription.set_number_of_charge_period
void Viveport::IAPurchase::Subscription::set_number_of_charge_period(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::set_number_of_charge_period");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_number_of_charge_period", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/Subscription.get_plan_id
::StringW Viveport::IAPurchase::Subscription::get_plan_id() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::get_plan_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_plan_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/Subscription.set_plan_id
void Viveport::IAPurchase::Subscription::set_plan_id(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::set_plan_id");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_plan_id", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/Subscription.get_plan_name
::StringW Viveport::IAPurchase::Subscription::get_plan_name() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::get_plan_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_plan_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/Subscription.set_plan_name
void Viveport::IAPurchase::Subscription::set_plan_name(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::set_plan_name");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_plan_name", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/Subscription.get_status
::StringW Viveport::IAPurchase::Subscription::get_status() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::get_status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/Subscription.set_status
void Viveport::IAPurchase::Subscription::set_status(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::set_status");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_status", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/Subscription.get_status_detail
::Viveport::IAPurchase::StatusDetail* Viveport::IAPurchase::Subscription::get_status_detail() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::get_status_detail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_status_detail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Viveport::IAPurchase::StatusDetail*, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/Subscription.set_status_detail
void Viveport::IAPurchase::Subscription::set_status_detail(::Viveport::IAPurchase::StatusDetail* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::Subscription::set_status_detail");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_status_detail", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.IAPurchase/QuerySubscritionResponse
#include "Viveport/IAPurchase_QuerySubscritionResponse.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: Viveport.IAPurchase/Subscription
#include "Viveport/IAPurchase_Subscription.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <statusCode>k__BackingField
[[deprecated("Use field access instead!")]] int& Viveport::IAPurchase::QuerySubscritionResponse::dyn_$statusCode$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QuerySubscritionResponse::dyn_$statusCode$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<statusCode>k__BackingField"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String <message>k__BackingField
[[deprecated("Use field access instead!")]] ::StringW& Viveport::IAPurchase::QuerySubscritionResponse::dyn_$message$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QuerySubscritionResponse::dyn_$message$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<message>k__BackingField"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<Viveport.IAPurchase/Subscription> <subscriptions>k__BackingField
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::Viveport::IAPurchase::Subscription*>*& Viveport::IAPurchase::QuerySubscritionResponse::dyn_$subscriptions$k__BackingField() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QuerySubscritionResponse::dyn_$subscriptions$k__BackingField");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<subscriptions>k__BackingField"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::Viveport::IAPurchase::Subscription*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Viveport.IAPurchase/QuerySubscritionResponse.get_statusCode
int Viveport::IAPurchase::QuerySubscritionResponse::get_statusCode() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QuerySubscritionResponse::get_statusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_statusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/QuerySubscritionResponse.set_statusCode
void Viveport::IAPurchase::QuerySubscritionResponse::set_statusCode(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QuerySubscritionResponse::set_statusCode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_statusCode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/QuerySubscritionResponse.get_message
::StringW Viveport::IAPurchase::QuerySubscritionResponse::get_message() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QuerySubscritionResponse::get_message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/QuerySubscritionResponse.set_message
void Viveport::IAPurchase::QuerySubscritionResponse::set_message(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QuerySubscritionResponse::set_message");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_message", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: Viveport.IAPurchase/QuerySubscritionResponse.get_subscriptions
::System::Collections::Generic::List_1<::Viveport::IAPurchase::Subscription*>* Viveport::IAPurchase::QuerySubscritionResponse::get_subscriptions() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QuerySubscritionResponse::get_subscriptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_subscriptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::Viveport::IAPurchase::Subscription*>*, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.IAPurchase/QuerySubscritionResponse.set_subscriptions
void Viveport::IAPurchase::QuerySubscritionResponse::set_subscriptions(::System::Collections::Generic::List_1<::Viveport::IAPurchase::Subscription*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::IAPurchase::QuerySubscritionResponse::set_subscriptions");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_subscriptions", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.DLC
#include "Viveport/DLC.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.Subscription
#include "Viveport/Subscription.hpp"
// Including type: Viveport.Internal.StatusCallback2
#include "Viveport/Internal/StatusCallback2.hpp"
// Including type: Viveport.StatusCallback2
#include "Viveport/StatusCallback2.hpp"
// Including type: Viveport.SubscriptionStatus
#include "Viveport/SubscriptionStatus.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.StatusCallback2 isReadyIl2cppCallback
::Viveport::Internal::StatusCallback2* Viveport::Subscription::_get_isReadyIl2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Subscription::_get_isReadyIl2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::StatusCallback2*>("Viveport", "Subscription", "isReadyIl2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.StatusCallback2 isReadyIl2cppCallback
void Viveport::Subscription::_set_isReadyIl2cppCallback(::Viveport::Internal::StatusCallback2* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Subscription::_set_isReadyIl2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "Subscription", "isReadyIl2cppCallback", value));
}
// Autogenerated method: Viveport.Subscription.IsReadyIl2cppCallback
void Viveport::Subscription::IsReadyIl2cppCallback(int errorCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Subscription::IsReadyIl2cppCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "Subscription", "IsReadyIl2cppCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode, message);
}
// Autogenerated method: Viveport.Subscription.IsReady
void Viveport::Subscription::IsReady(::Viveport::StatusCallback2* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Subscription::IsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "Subscription", "IsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Viveport.Subscription.GetUserStatus
::Viveport::SubscriptionStatus* Viveport::Subscription::GetUserStatus() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Subscription::GetUserStatus");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "Subscription", "GetUserStatus", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Viveport::SubscriptionStatus*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.Deeplink
#include "Viveport/Deeplink.hpp"
// Including type: Viveport.Deeplink/DeeplinkChecker
#include "Viveport/Deeplink_DeeplinkChecker.hpp"
// Including type: Viveport.Internal.StatusCallback
#include "Viveport/Internal/StatusCallback.hpp"
// Including type: Viveport.Internal.StatusCallback2
#include "Viveport/Internal/StatusCallback2.hpp"
// Including type: Viveport.StatusCallback
#include "Viveport/StatusCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 MaxIdLength
int Viveport::Deeplink::_get_MaxIdLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Deeplink::_get_MaxIdLength");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("Viveport", "Deeplink", "MaxIdLength"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 MaxIdLength
void Viveport::Deeplink::_set_MaxIdLength(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Deeplink::_set_MaxIdLength");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "Deeplink", "MaxIdLength", value));
}
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.StatusCallback isReadyIl2cppCallback
::Viveport::Internal::StatusCallback* Viveport::Deeplink::_get_isReadyIl2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Deeplink::_get_isReadyIl2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::StatusCallback*>("Viveport", "Deeplink", "isReadyIl2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.StatusCallback isReadyIl2cppCallback
void Viveport::Deeplink::_set_isReadyIl2cppCallback(::Viveport::Internal::StatusCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Deeplink::_set_isReadyIl2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "Deeplink", "isReadyIl2cppCallback", value));
}
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.StatusCallback2 goToAppIl2cppCallback
::Viveport::Internal::StatusCallback2* Viveport::Deeplink::_get_goToAppIl2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Deeplink::_get_goToAppIl2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::StatusCallback2*>("Viveport", "Deeplink", "goToAppIl2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.StatusCallback2 goToAppIl2cppCallback
void Viveport::Deeplink::_set_goToAppIl2cppCallback(::Viveport::Internal::StatusCallback2* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Deeplink::_set_goToAppIl2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "Deeplink", "goToAppIl2cppCallback", value));
}
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.StatusCallback2 goToAppWithBranchNameIl2cppCallback
::Viveport::Internal::StatusCallback2* Viveport::Deeplink::_get_goToAppWithBranchNameIl2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Deeplink::_get_goToAppWithBranchNameIl2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::StatusCallback2*>("Viveport", "Deeplink", "goToAppWithBranchNameIl2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.StatusCallback2 goToAppWithBranchNameIl2cppCallback
void Viveport::Deeplink::_set_goToAppWithBranchNameIl2cppCallback(::Viveport::Internal::StatusCallback2* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Deeplink::_set_goToAppWithBranchNameIl2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "Deeplink", "goToAppWithBranchNameIl2cppCallback", value));
}
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.StatusCallback2 goToStoreIl2cppCallback
::Viveport::Internal::StatusCallback2* Viveport::Deeplink::_get_goToStoreIl2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Deeplink::_get_goToStoreIl2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::StatusCallback2*>("Viveport", "Deeplink", "goToStoreIl2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.StatusCallback2 goToStoreIl2cppCallback
void Viveport::Deeplink::_set_goToStoreIl2cppCallback(::Viveport::Internal::StatusCallback2* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Deeplink::_set_goToStoreIl2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "Deeplink", "goToStoreIl2cppCallback", value));
}
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.StatusCallback2 goToAppOrGoToStoreIl2cppCallback
::Viveport::Internal::StatusCallback2* Viveport::Deeplink::_get_goToAppOrGoToStoreIl2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Deeplink::_get_goToAppOrGoToStoreIl2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::StatusCallback2*>("Viveport", "Deeplink", "goToAppOrGoToStoreIl2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.StatusCallback2 goToAppOrGoToStoreIl2cppCallback
void Viveport::Deeplink::_set_goToAppOrGoToStoreIl2cppCallback(::Viveport::Internal::StatusCallback2* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Deeplink::_set_goToAppOrGoToStoreIl2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "Deeplink", "goToAppOrGoToStoreIl2cppCallback", value));
}
// Autogenerated method: Viveport.Deeplink.IsReadyIl2cppCallback
void Viveport::Deeplink::IsReadyIl2cppCallback(int errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Deeplink::IsReadyIl2cppCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "Deeplink", "IsReadyIl2cppCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode);
}
// Autogenerated method: Viveport.Deeplink.IsReady
void Viveport::Deeplink::IsReady(::Viveport::StatusCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Deeplink::IsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "Deeplink", "IsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Viveport.Deeplink.GoToApp
void Viveport::Deeplink::GoToApp(::Viveport::Deeplink::DeeplinkChecker* checker, ::StringW appId, ::StringW launchData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Deeplink::GoToApp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "Deeplink", "GoToApp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(checker), ::il2cpp_utils::ExtractType(appId), ::il2cpp_utils::ExtractType(launchData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, checker, appId, launchData);
}
// Autogenerated method: Viveport.Deeplink.GoToApp
void Viveport::Deeplink::GoToApp(::Viveport::Deeplink::DeeplinkChecker* checker, ::StringW appId, ::StringW launchData, ::StringW branchName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Deeplink::GoToApp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "Deeplink", "GoToApp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(checker), ::il2cpp_utils::ExtractType(appId), ::il2cpp_utils::ExtractType(launchData), ::il2cpp_utils::ExtractType(branchName)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, checker, appId, launchData, branchName);
}
// Autogenerated method: Viveport.Deeplink.GoToStore
void Viveport::Deeplink::GoToStore(::Viveport::Deeplink::DeeplinkChecker* checker, ::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Deeplink::GoToStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "Deeplink", "GoToStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(checker), ::il2cpp_utils::ExtractType(appId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, checker, appId);
}
// Autogenerated method: Viveport.Deeplink.GoToAppOrGoToStore
void Viveport::Deeplink::GoToAppOrGoToStore(::Viveport::Deeplink::DeeplinkChecker* checker, ::StringW appId, ::StringW launchData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Deeplink::GoToAppOrGoToStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "Deeplink", "GoToAppOrGoToStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(checker), ::il2cpp_utils::ExtractType(appId), ::il2cpp_utils::ExtractType(launchData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, checker, appId, launchData);
}
// Autogenerated method: Viveport.Deeplink.GetAppLaunchData
::StringW Viveport::Deeplink::GetAppLaunchData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Deeplink::GetAppLaunchData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "Deeplink", "GetAppLaunchData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.Deeplink/DeeplinkChecker
#include "Viveport/Deeplink_DeeplinkChecker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Viveport.Deeplink/DeeplinkChecker.OnSuccess
void Viveport::Deeplink::DeeplinkChecker::OnSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Deeplink::DeeplinkChecker::OnSuccess");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::Deeplink::DeeplinkChecker*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.Deeplink/DeeplinkChecker.OnFailure
void Viveport::Deeplink::DeeplinkChecker::OnFailure(int errorCode, ::StringW errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Deeplink::DeeplinkChecker::OnFailure");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::Deeplink::DeeplinkChecker*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, errorCode, errorMessage);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.Token
#include "Viveport/Token.hpp"
// Including type: Viveport.Internal.StatusCallback
#include "Viveport/Internal/StatusCallback.hpp"
// Including type: Viveport.Internal.StatusCallback2
#include "Viveport/Internal/StatusCallback2.hpp"
// Including type: Viveport.StatusCallback
#include "Viveport/StatusCallback.hpp"
// Including type: Viveport.StatusCallback2
#include "Viveport/StatusCallback2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.StatusCallback isReadyIl2cppCallback
::Viveport::Internal::StatusCallback* Viveport::Token::_get_isReadyIl2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Token::_get_isReadyIl2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::StatusCallback*>("Viveport", "Token", "isReadyIl2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.StatusCallback isReadyIl2cppCallback
void Viveport::Token::_set_isReadyIl2cppCallback(::Viveport::Internal::StatusCallback* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Token::_set_isReadyIl2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "Token", "isReadyIl2cppCallback", value));
}
// Autogenerated static field getter
// Get static field: static private Viveport.Internal.StatusCallback2 getSessionTokenIl2cppCallback
::Viveport::Internal::StatusCallback2* Viveport::Token::_get_getSessionTokenIl2cppCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Token::_get_getSessionTokenIl2cppCallback");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::StatusCallback2*>("Viveport", "Token", "getSessionTokenIl2cppCallback"));
}
// Autogenerated static field setter
// Set static field: static private Viveport.Internal.StatusCallback2 getSessionTokenIl2cppCallback
void Viveport::Token::_set_getSessionTokenIl2cppCallback(::Viveport::Internal::StatusCallback2* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Token::_set_getSessionTokenIl2cppCallback");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport", "Token", "getSessionTokenIl2cppCallback", value));
}
// Autogenerated method: Viveport.Token.IsReadyIl2cppCallback
void Viveport::Token::IsReadyIl2cppCallback(int errorCode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Token::IsReadyIl2cppCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "Token", "IsReadyIl2cppCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode);
}
// Autogenerated method: Viveport.Token.IsReady
void Viveport::Token::IsReady(::Viveport::StatusCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Token::IsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "Token", "IsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Viveport.Token.GetSessionTokenIl2cppCallback
void Viveport::Token::GetSessionTokenIl2cppCallback(int errorCode, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Token::GetSessionTokenIl2cppCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "Token", "GetSessionTokenIl2cppCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, errorCode, message);
}
// Autogenerated method: Viveport.Token.GetSessionToken
void Viveport::Token::GetSessionToken(::Viveport::StatusCallback2* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Token::GetSessionToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport", "Token", "GetSessionToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Viveport.Internal.GetLicenseCallback
#include "Viveport/Internal/GetLicenseCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Viveport.Internal.GetLicenseCallback.Invoke
void Viveport::Internal::GetLicenseCallback::Invoke(::StringW message, ::StringW signature) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::GetLicenseCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::Internal::GetLicenseCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, message, signature);
}
// Autogenerated method: Viveport.Internal.GetLicenseCallback.BeginInvoke
::System::IAsyncResult* Viveport::Internal::GetLicenseCallback::BeginInvoke(::StringW message, ::StringW signature, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::GetLicenseCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::Internal::GetLicenseCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, message, signature, callback, object);
}
// Autogenerated method: Viveport.Internal.GetLicenseCallback.EndInvoke
void Viveport::Internal::GetLicenseCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::GetLicenseCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::Internal::GetLicenseCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Viveport.Internal.StatusCallback
#include "Viveport/Internal/StatusCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Viveport.Internal.StatusCallback.Invoke
void Viveport::Internal::StatusCallback::Invoke(int nResult) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::StatusCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::Internal::StatusCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nResult);
}
// Autogenerated method: Viveport.Internal.StatusCallback.BeginInvoke
::System::IAsyncResult* Viveport::Internal::StatusCallback::BeginInvoke(int nResult, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::StatusCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::Internal::StatusCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, nResult, callback, object);
}
// Autogenerated method: Viveport.Internal.StatusCallback.EndInvoke
void Viveport::Internal::StatusCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::StatusCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::Internal::StatusCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Viveport.Internal.StatusCallback2
#include "Viveport/Internal/StatusCallback2.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Viveport.Internal.StatusCallback2.Invoke
void Viveport::Internal::StatusCallback2::Invoke(int nResult, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::StatusCallback2::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::Internal::StatusCallback2*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nResult, message);
}
// Autogenerated method: Viveport.Internal.StatusCallback2.BeginInvoke
::System::IAsyncResult* Viveport::Internal::StatusCallback2::BeginInvoke(int nResult, ::StringW message, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::StatusCallback2::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::Internal::StatusCallback2*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, nResult, message, callback, object);
}
// Autogenerated method: Viveport.Internal.StatusCallback2.EndInvoke
void Viveport::Internal::StatusCallback2::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::StatusCallback2::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::Internal::StatusCallback2*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Viveport.Internal.QueryRuntimeModeCallback
#include "Viveport/Internal/QueryRuntimeModeCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Viveport.Internal.QueryRuntimeModeCallback.Invoke
void Viveport::Internal::QueryRuntimeModeCallback::Invoke(int nResult, int nMode) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::QueryRuntimeModeCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::Internal::QueryRuntimeModeCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, nResult, nMode);
}
// Autogenerated method: Viveport.Internal.QueryRuntimeModeCallback.BeginInvoke
::System::IAsyncResult* Viveport::Internal::QueryRuntimeModeCallback::BeginInvoke(int nResult, int nMode, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::QueryRuntimeModeCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::Internal::QueryRuntimeModeCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, nResult, nMode, callback, object);
}
// Autogenerated method: Viveport.Internal.QueryRuntimeModeCallback.EndInvoke
void Viveport::Internal::QueryRuntimeModeCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::QueryRuntimeModeCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::Internal::QueryRuntimeModeCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.Internal.ELeaderboardDataRequest
#include "Viveport/Internal/ELeaderboardDataRequest.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ELeaderboardDataRequest k_ELeaderboardDataRequestGlobal
::Viveport::Internal::ELeaderboardDataRequest Viveport::Internal::ELeaderboardDataRequest::_get_k_ELeaderboardDataRequestGlobal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardDataRequest::_get_k_ELeaderboardDataRequestGlobal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ELeaderboardDataRequest>("Viveport.Internal", "ELeaderboardDataRequest", "k_ELeaderboardDataRequestGlobal"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ELeaderboardDataRequest k_ELeaderboardDataRequestGlobal
void Viveport::Internal::ELeaderboardDataRequest::_set_k_ELeaderboardDataRequestGlobal(::Viveport::Internal::ELeaderboardDataRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardDataRequest::_set_k_ELeaderboardDataRequestGlobal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ELeaderboardDataRequest", "k_ELeaderboardDataRequestGlobal", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ELeaderboardDataRequest k_ELeaderboardDataRequestGlobalAroundUser
::Viveport::Internal::ELeaderboardDataRequest Viveport::Internal::ELeaderboardDataRequest::_get_k_ELeaderboardDataRequestGlobalAroundUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardDataRequest::_get_k_ELeaderboardDataRequestGlobalAroundUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ELeaderboardDataRequest>("Viveport.Internal", "ELeaderboardDataRequest", "k_ELeaderboardDataRequestGlobalAroundUser"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ELeaderboardDataRequest k_ELeaderboardDataRequestGlobalAroundUser
void Viveport::Internal::ELeaderboardDataRequest::_set_k_ELeaderboardDataRequestGlobalAroundUser(::Viveport::Internal::ELeaderboardDataRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardDataRequest::_set_k_ELeaderboardDataRequestGlobalAroundUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ELeaderboardDataRequest", "k_ELeaderboardDataRequestGlobalAroundUser", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ELeaderboardDataRequest k_ELeaderboardDataRequestLocal
::Viveport::Internal::ELeaderboardDataRequest Viveport::Internal::ELeaderboardDataRequest::_get_k_ELeaderboardDataRequestLocal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardDataRequest::_get_k_ELeaderboardDataRequestLocal");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ELeaderboardDataRequest>("Viveport.Internal", "ELeaderboardDataRequest", "k_ELeaderboardDataRequestLocal"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ELeaderboardDataRequest k_ELeaderboardDataRequestLocal
void Viveport::Internal::ELeaderboardDataRequest::_set_k_ELeaderboardDataRequestLocal(::Viveport::Internal::ELeaderboardDataRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardDataRequest::_set_k_ELeaderboardDataRequestLocal");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ELeaderboardDataRequest", "k_ELeaderboardDataRequestLocal", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ELeaderboardDataRequest k_ELeaderboardDataRequestLocaleAroundUser
::Viveport::Internal::ELeaderboardDataRequest Viveport::Internal::ELeaderboardDataRequest::_get_k_ELeaderboardDataRequestLocaleAroundUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardDataRequest::_get_k_ELeaderboardDataRequestLocaleAroundUser");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ELeaderboardDataRequest>("Viveport.Internal", "ELeaderboardDataRequest", "k_ELeaderboardDataRequestLocaleAroundUser"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ELeaderboardDataRequest k_ELeaderboardDataRequestLocaleAroundUser
void Viveport::Internal::ELeaderboardDataRequest::_set_k_ELeaderboardDataRequestLocaleAroundUser(::Viveport::Internal::ELeaderboardDataRequest value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardDataRequest::_set_k_ELeaderboardDataRequestLocaleAroundUser");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ELeaderboardDataRequest", "k_ELeaderboardDataRequestLocaleAroundUser", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Viveport::Internal::ELeaderboardDataRequest::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardDataRequest::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.Internal.ELeaderboardDataTimeRange
#include "Viveport/Internal/ELeaderboardDataTimeRange.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ELeaderboardDataTimeRange k_ELeaderboardDataScropeAllTime
::Viveport::Internal::ELeaderboardDataTimeRange Viveport::Internal::ELeaderboardDataTimeRange::_get_k_ELeaderboardDataScropeAllTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardDataTimeRange::_get_k_ELeaderboardDataScropeAllTime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ELeaderboardDataTimeRange>("Viveport.Internal", "ELeaderboardDataTimeRange", "k_ELeaderboardDataScropeAllTime"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ELeaderboardDataTimeRange k_ELeaderboardDataScropeAllTime
void Viveport::Internal::ELeaderboardDataTimeRange::_set_k_ELeaderboardDataScropeAllTime(::Viveport::Internal::ELeaderboardDataTimeRange value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardDataTimeRange::_set_k_ELeaderboardDataScropeAllTime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ELeaderboardDataTimeRange", "k_ELeaderboardDataScropeAllTime", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ELeaderboardDataTimeRange k_ELeaderboardDataScropeDaily
::Viveport::Internal::ELeaderboardDataTimeRange Viveport::Internal::ELeaderboardDataTimeRange::_get_k_ELeaderboardDataScropeDaily() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardDataTimeRange::_get_k_ELeaderboardDataScropeDaily");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ELeaderboardDataTimeRange>("Viveport.Internal", "ELeaderboardDataTimeRange", "k_ELeaderboardDataScropeDaily"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ELeaderboardDataTimeRange k_ELeaderboardDataScropeDaily
void Viveport::Internal::ELeaderboardDataTimeRange::_set_k_ELeaderboardDataScropeDaily(::Viveport::Internal::ELeaderboardDataTimeRange value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardDataTimeRange::_set_k_ELeaderboardDataScropeDaily");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ELeaderboardDataTimeRange", "k_ELeaderboardDataScropeDaily", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ELeaderboardDataTimeRange k_ELeaderboardDataScropeWeekly
::Viveport::Internal::ELeaderboardDataTimeRange Viveport::Internal::ELeaderboardDataTimeRange::_get_k_ELeaderboardDataScropeWeekly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardDataTimeRange::_get_k_ELeaderboardDataScropeWeekly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ELeaderboardDataTimeRange>("Viveport.Internal", "ELeaderboardDataTimeRange", "k_ELeaderboardDataScropeWeekly"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ELeaderboardDataTimeRange k_ELeaderboardDataScropeWeekly
void Viveport::Internal::ELeaderboardDataTimeRange::_set_k_ELeaderboardDataScropeWeekly(::Viveport::Internal::ELeaderboardDataTimeRange value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardDataTimeRange::_set_k_ELeaderboardDataScropeWeekly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ELeaderboardDataTimeRange", "k_ELeaderboardDataScropeWeekly", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ELeaderboardDataTimeRange k_ELeaderboardDataScropeMonthly
::Viveport::Internal::ELeaderboardDataTimeRange Viveport::Internal::ELeaderboardDataTimeRange::_get_k_ELeaderboardDataScropeMonthly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardDataTimeRange::_get_k_ELeaderboardDataScropeMonthly");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ELeaderboardDataTimeRange>("Viveport.Internal", "ELeaderboardDataTimeRange", "k_ELeaderboardDataScropeMonthly"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ELeaderboardDataTimeRange k_ELeaderboardDataScropeMonthly
void Viveport::Internal::ELeaderboardDataTimeRange::_set_k_ELeaderboardDataScropeMonthly(::Viveport::Internal::ELeaderboardDataTimeRange value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardDataTimeRange::_set_k_ELeaderboardDataScropeMonthly");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ELeaderboardDataTimeRange", "k_ELeaderboardDataScropeMonthly", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Viveport::Internal::ELeaderboardDataTimeRange::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardDataTimeRange::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.Internal.ELeaderboardSortMethod
#include "Viveport/Internal/ELeaderboardSortMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ELeaderboardSortMethod k_ELeaderboardSortMethodNone
::Viveport::Internal::ELeaderboardSortMethod Viveport::Internal::ELeaderboardSortMethod::_get_k_ELeaderboardSortMethodNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardSortMethod::_get_k_ELeaderboardSortMethodNone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ELeaderboardSortMethod>("Viveport.Internal", "ELeaderboardSortMethod", "k_ELeaderboardSortMethodNone"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ELeaderboardSortMethod k_ELeaderboardSortMethodNone
void Viveport::Internal::ELeaderboardSortMethod::_set_k_ELeaderboardSortMethodNone(::Viveport::Internal::ELeaderboardSortMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardSortMethod::_set_k_ELeaderboardSortMethodNone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ELeaderboardSortMethod", "k_ELeaderboardSortMethodNone", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ELeaderboardSortMethod k_ELeaderboardSortMethodAscending
::Viveport::Internal::ELeaderboardSortMethod Viveport::Internal::ELeaderboardSortMethod::_get_k_ELeaderboardSortMethodAscending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardSortMethod::_get_k_ELeaderboardSortMethodAscending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ELeaderboardSortMethod>("Viveport.Internal", "ELeaderboardSortMethod", "k_ELeaderboardSortMethodAscending"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ELeaderboardSortMethod k_ELeaderboardSortMethodAscending
void Viveport::Internal::ELeaderboardSortMethod::_set_k_ELeaderboardSortMethodAscending(::Viveport::Internal::ELeaderboardSortMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardSortMethod::_set_k_ELeaderboardSortMethodAscending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ELeaderboardSortMethod", "k_ELeaderboardSortMethodAscending", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ELeaderboardSortMethod k_ELeaderboardSortMethodDescending
::Viveport::Internal::ELeaderboardSortMethod Viveport::Internal::ELeaderboardSortMethod::_get_k_ELeaderboardSortMethodDescending() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardSortMethod::_get_k_ELeaderboardSortMethodDescending");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ELeaderboardSortMethod>("Viveport.Internal", "ELeaderboardSortMethod", "k_ELeaderboardSortMethodDescending"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ELeaderboardSortMethod k_ELeaderboardSortMethodDescending
void Viveport::Internal::ELeaderboardSortMethod::_set_k_ELeaderboardSortMethodDescending(::Viveport::Internal::ELeaderboardSortMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardSortMethod::_set_k_ELeaderboardSortMethodDescending");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ELeaderboardSortMethod", "k_ELeaderboardSortMethodDescending", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Viveport::Internal::ELeaderboardSortMethod::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardSortMethod::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.Internal.ELeaderboardDisplayType
#include "Viveport/Internal/ELeaderboardDisplayType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ELeaderboardDisplayType k_ELeaderboardDisplayTypeNone
::Viveport::Internal::ELeaderboardDisplayType Viveport::Internal::ELeaderboardDisplayType::_get_k_ELeaderboardDisplayTypeNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardDisplayType::_get_k_ELeaderboardDisplayTypeNone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ELeaderboardDisplayType>("Viveport.Internal", "ELeaderboardDisplayType", "k_ELeaderboardDisplayTypeNone"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ELeaderboardDisplayType k_ELeaderboardDisplayTypeNone
void Viveport::Internal::ELeaderboardDisplayType::_set_k_ELeaderboardDisplayTypeNone(::Viveport::Internal::ELeaderboardDisplayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardDisplayType::_set_k_ELeaderboardDisplayTypeNone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ELeaderboardDisplayType", "k_ELeaderboardDisplayTypeNone", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ELeaderboardDisplayType k_ELeaderboardDisplayTypeNumeric
::Viveport::Internal::ELeaderboardDisplayType Viveport::Internal::ELeaderboardDisplayType::_get_k_ELeaderboardDisplayTypeNumeric() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardDisplayType::_get_k_ELeaderboardDisplayTypeNumeric");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ELeaderboardDisplayType>("Viveport.Internal", "ELeaderboardDisplayType", "k_ELeaderboardDisplayTypeNumeric"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ELeaderboardDisplayType k_ELeaderboardDisplayTypeNumeric
void Viveport::Internal::ELeaderboardDisplayType::_set_k_ELeaderboardDisplayTypeNumeric(::Viveport::Internal::ELeaderboardDisplayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardDisplayType::_set_k_ELeaderboardDisplayTypeNumeric");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ELeaderboardDisplayType", "k_ELeaderboardDisplayTypeNumeric", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ELeaderboardDisplayType k_ELeaderboardDisplayTypeTimeSeconds
::Viveport::Internal::ELeaderboardDisplayType Viveport::Internal::ELeaderboardDisplayType::_get_k_ELeaderboardDisplayTypeTimeSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardDisplayType::_get_k_ELeaderboardDisplayTypeTimeSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ELeaderboardDisplayType>("Viveport.Internal", "ELeaderboardDisplayType", "k_ELeaderboardDisplayTypeTimeSeconds"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ELeaderboardDisplayType k_ELeaderboardDisplayTypeTimeSeconds
void Viveport::Internal::ELeaderboardDisplayType::_set_k_ELeaderboardDisplayTypeTimeSeconds(::Viveport::Internal::ELeaderboardDisplayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardDisplayType::_set_k_ELeaderboardDisplayTypeTimeSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ELeaderboardDisplayType", "k_ELeaderboardDisplayTypeTimeSeconds", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ELeaderboardDisplayType k_ELeaderboardDisplayTypeTimeMilliSeconds
::Viveport::Internal::ELeaderboardDisplayType Viveport::Internal::ELeaderboardDisplayType::_get_k_ELeaderboardDisplayTypeTimeMilliSeconds() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardDisplayType::_get_k_ELeaderboardDisplayTypeTimeMilliSeconds");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ELeaderboardDisplayType>("Viveport.Internal", "ELeaderboardDisplayType", "k_ELeaderboardDisplayTypeTimeMilliSeconds"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ELeaderboardDisplayType k_ELeaderboardDisplayTypeTimeMilliSeconds
void Viveport::Internal::ELeaderboardDisplayType::_set_k_ELeaderboardDisplayTypeTimeMilliSeconds(::Viveport::Internal::ELeaderboardDisplayType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardDisplayType::_set_k_ELeaderboardDisplayTypeTimeMilliSeconds");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ELeaderboardDisplayType", "k_ELeaderboardDisplayTypeTimeMilliSeconds", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Viveport::Internal::ELeaderboardDisplayType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardDisplayType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.Internal.ELeaderboardUploadScoreMethod
#include "Viveport/Internal/ELeaderboardUploadScoreMethod.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ELeaderboardUploadScoreMethod k_ELeaderboardUploadScoreMethodNone
::Viveport::Internal::ELeaderboardUploadScoreMethod Viveport::Internal::ELeaderboardUploadScoreMethod::_get_k_ELeaderboardUploadScoreMethodNone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardUploadScoreMethod::_get_k_ELeaderboardUploadScoreMethodNone");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ELeaderboardUploadScoreMethod>("Viveport.Internal", "ELeaderboardUploadScoreMethod", "k_ELeaderboardUploadScoreMethodNone"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ELeaderboardUploadScoreMethod k_ELeaderboardUploadScoreMethodNone
void Viveport::Internal::ELeaderboardUploadScoreMethod::_set_k_ELeaderboardUploadScoreMethodNone(::Viveport::Internal::ELeaderboardUploadScoreMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardUploadScoreMethod::_set_k_ELeaderboardUploadScoreMethodNone");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ELeaderboardUploadScoreMethod", "k_ELeaderboardUploadScoreMethodNone", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ELeaderboardUploadScoreMethod k_ELeaderboardUploadScoreMethodKeepBest
::Viveport::Internal::ELeaderboardUploadScoreMethod Viveport::Internal::ELeaderboardUploadScoreMethod::_get_k_ELeaderboardUploadScoreMethodKeepBest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardUploadScoreMethod::_get_k_ELeaderboardUploadScoreMethodKeepBest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ELeaderboardUploadScoreMethod>("Viveport.Internal", "ELeaderboardUploadScoreMethod", "k_ELeaderboardUploadScoreMethodKeepBest"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ELeaderboardUploadScoreMethod k_ELeaderboardUploadScoreMethodKeepBest
void Viveport::Internal::ELeaderboardUploadScoreMethod::_set_k_ELeaderboardUploadScoreMethodKeepBest(::Viveport::Internal::ELeaderboardUploadScoreMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardUploadScoreMethod::_set_k_ELeaderboardUploadScoreMethodKeepBest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ELeaderboardUploadScoreMethod", "k_ELeaderboardUploadScoreMethodKeepBest", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ELeaderboardUploadScoreMethod k_ELeaderboardUploadScoreMethodForceUpdate
::Viveport::Internal::ELeaderboardUploadScoreMethod Viveport::Internal::ELeaderboardUploadScoreMethod::_get_k_ELeaderboardUploadScoreMethodForceUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardUploadScoreMethod::_get_k_ELeaderboardUploadScoreMethodForceUpdate");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ELeaderboardUploadScoreMethod>("Viveport.Internal", "ELeaderboardUploadScoreMethod", "k_ELeaderboardUploadScoreMethodForceUpdate"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ELeaderboardUploadScoreMethod k_ELeaderboardUploadScoreMethodForceUpdate
void Viveport::Internal::ELeaderboardUploadScoreMethod::_set_k_ELeaderboardUploadScoreMethodForceUpdate(::Viveport::Internal::ELeaderboardUploadScoreMethod value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardUploadScoreMethod::_set_k_ELeaderboardUploadScoreMethodForceUpdate");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ELeaderboardUploadScoreMethod", "k_ELeaderboardUploadScoreMethodForceUpdate", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Viveport::Internal::ELeaderboardUploadScoreMethod::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELeaderboardUploadScoreMethod::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.Internal.ESubscriptionTransactionType
#include "Viveport/Internal/ESubscriptionTransactionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ESubscriptionTransactionType UNKNOWN
::Viveport::Internal::ESubscriptionTransactionType Viveport::Internal::ESubscriptionTransactionType::_get_UNKNOWN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ESubscriptionTransactionType::_get_UNKNOWN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ESubscriptionTransactionType>("Viveport.Internal", "ESubscriptionTransactionType", "UNKNOWN"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ESubscriptionTransactionType UNKNOWN
void Viveport::Internal::ESubscriptionTransactionType::_set_UNKNOWN(::Viveport::Internal::ESubscriptionTransactionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ESubscriptionTransactionType::_set_UNKNOWN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ESubscriptionTransactionType", "UNKNOWN", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ESubscriptionTransactionType PAID
::Viveport::Internal::ESubscriptionTransactionType Viveport::Internal::ESubscriptionTransactionType::_get_PAID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ESubscriptionTransactionType::_get_PAID");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ESubscriptionTransactionType>("Viveport.Internal", "ESubscriptionTransactionType", "PAID"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ESubscriptionTransactionType PAID
void Viveport::Internal::ESubscriptionTransactionType::_set_PAID(::Viveport::Internal::ESubscriptionTransactionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ESubscriptionTransactionType::_set_PAID");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ESubscriptionTransactionType", "PAID", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ESubscriptionTransactionType REDEEM
::Viveport::Internal::ESubscriptionTransactionType Viveport::Internal::ESubscriptionTransactionType::_get_REDEEM() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ESubscriptionTransactionType::_get_REDEEM");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ESubscriptionTransactionType>("Viveport.Internal", "ESubscriptionTransactionType", "REDEEM"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ESubscriptionTransactionType REDEEM
void Viveport::Internal::ESubscriptionTransactionType::_set_REDEEM(::Viveport::Internal::ESubscriptionTransactionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ESubscriptionTransactionType::_set_REDEEM");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ESubscriptionTransactionType", "REDEEM", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ESubscriptionTransactionType FREEE_TRIAL
::Viveport::Internal::ESubscriptionTransactionType Viveport::Internal::ESubscriptionTransactionType::_get_FREEE_TRIAL() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ESubscriptionTransactionType::_get_FREEE_TRIAL");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ESubscriptionTransactionType>("Viveport.Internal", "ESubscriptionTransactionType", "FREEE_TRIAL"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ESubscriptionTransactionType FREEE_TRIAL
void Viveport::Internal::ESubscriptionTransactionType::_set_FREEE_TRIAL(::Viveport::Internal::ESubscriptionTransactionType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ESubscriptionTransactionType::_set_FREEE_TRIAL");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ESubscriptionTransactionType", "FREEE_TRIAL", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Viveport::Internal::ESubscriptionTransactionType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ESubscriptionTransactionType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.Internal.ELocale
#include "Viveport/Internal/ELocale.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ELocale k_ELocaleUS
::Viveport::Internal::ELocale Viveport::Internal::ELocale::_get_k_ELocaleUS() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELocale::_get_k_ELocaleUS");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ELocale>("Viveport.Internal", "ELocale", "k_ELocaleUS"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ELocale k_ELocaleUS
void Viveport::Internal::ELocale::_set_k_ELocaleUS(::Viveport::Internal::ELocale value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELocale::_set_k_ELocaleUS");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ELocale", "k_ELocaleUS", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ELocale k_ELocaleDE
::Viveport::Internal::ELocale Viveport::Internal::ELocale::_get_k_ELocaleDE() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELocale::_get_k_ELocaleDE");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ELocale>("Viveport.Internal", "ELocale", "k_ELocaleDE"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ELocale k_ELocaleDE
void Viveport::Internal::ELocale::_set_k_ELocaleDE(::Viveport::Internal::ELocale value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELocale::_set_k_ELocaleDE");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ELocale", "k_ELocaleDE", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ELocale k_ELocaleJP
::Viveport::Internal::ELocale Viveport::Internal::ELocale::_get_k_ELocaleJP() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELocale::_get_k_ELocaleJP");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ELocale>("Viveport.Internal", "ELocale", "k_ELocaleJP"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ELocale k_ELocaleJP
void Viveport::Internal::ELocale::_set_k_ELocaleJP(::Viveport::Internal::ELocale value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELocale::_set_k_ELocaleJP");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ELocale", "k_ELocaleJP", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ELocale k_ELocaleKR
::Viveport::Internal::ELocale Viveport::Internal::ELocale::_get_k_ELocaleKR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELocale::_get_k_ELocaleKR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ELocale>("Viveport.Internal", "ELocale", "k_ELocaleKR"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ELocale k_ELocaleKR
void Viveport::Internal::ELocale::_set_k_ELocaleKR(::Viveport::Internal::ELocale value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELocale::_set_k_ELocaleKR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ELocale", "k_ELocaleKR", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ELocale k_ELocaleRU
::Viveport::Internal::ELocale Viveport::Internal::ELocale::_get_k_ELocaleRU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELocale::_get_k_ELocaleRU");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ELocale>("Viveport.Internal", "ELocale", "k_ELocaleRU"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ELocale k_ELocaleRU
void Viveport::Internal::ELocale::_set_k_ELocaleRU(::Viveport::Internal::ELocale value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELocale::_set_k_ELocaleRU");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ELocale", "k_ELocaleRU", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ELocale k_ELocaleCN
::Viveport::Internal::ELocale Viveport::Internal::ELocale::_get_k_ELocaleCN() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELocale::_get_k_ELocaleCN");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ELocale>("Viveport.Internal", "ELocale", "k_ELocaleCN"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ELocale k_ELocaleCN
void Viveport::Internal::ELocale::_set_k_ELocaleCN(::Viveport::Internal::ELocale value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELocale::_set_k_ELocaleCN");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ELocale", "k_ELocaleCN", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ELocale k_ELocaleTW
::Viveport::Internal::ELocale Viveport::Internal::ELocale::_get_k_ELocaleTW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELocale::_get_k_ELocaleTW");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ELocale>("Viveport.Internal", "ELocale", "k_ELocaleTW"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ELocale k_ELocaleTW
void Viveport::Internal::ELocale::_set_k_ELocaleTW(::Viveport::Internal::ELocale value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELocale::_set_k_ELocaleTW");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ELocale", "k_ELocaleTW", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.ELocale k_ELocaleFR
::Viveport::Internal::ELocale Viveport::Internal::ELocale::_get_k_ELocaleFR() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELocale::_get_k_ELocaleFR");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::ELocale>("Viveport.Internal", "ELocale", "k_ELocaleFR"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.ELocale k_ELocaleFR
void Viveport::Internal::ELocale::_set_k_ELocaleFR(::Viveport::Internal::ELocale value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELocale::_set_k_ELocaleFR");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "ELocale", "k_ELocaleFR", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Viveport::Internal::ELocale::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::ELocale::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.Internal.EAchievementDisplayAttribute
#include "Viveport/Internal/EAchievementDisplayAttribute.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.EAchievementDisplayAttribute k_EAchievementDisplayAttributeName
::Viveport::Internal::EAchievementDisplayAttribute Viveport::Internal::EAchievementDisplayAttribute::_get_k_EAchievementDisplayAttributeName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::EAchievementDisplayAttribute::_get_k_EAchievementDisplayAttributeName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::EAchievementDisplayAttribute>("Viveport.Internal", "EAchievementDisplayAttribute", "k_EAchievementDisplayAttributeName"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.EAchievementDisplayAttribute k_EAchievementDisplayAttributeName
void Viveport::Internal::EAchievementDisplayAttribute::_set_k_EAchievementDisplayAttributeName(::Viveport::Internal::EAchievementDisplayAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::EAchievementDisplayAttribute::_set_k_EAchievementDisplayAttributeName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "EAchievementDisplayAttribute", "k_EAchievementDisplayAttributeName", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.EAchievementDisplayAttribute k_EAchievementDisplayAttributeDesc
::Viveport::Internal::EAchievementDisplayAttribute Viveport::Internal::EAchievementDisplayAttribute::_get_k_EAchievementDisplayAttributeDesc() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::EAchievementDisplayAttribute::_get_k_EAchievementDisplayAttributeDesc");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::EAchievementDisplayAttribute>("Viveport.Internal", "EAchievementDisplayAttribute", "k_EAchievementDisplayAttributeDesc"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.EAchievementDisplayAttribute k_EAchievementDisplayAttributeDesc
void Viveport::Internal::EAchievementDisplayAttribute::_set_k_EAchievementDisplayAttributeDesc(::Viveport::Internal::EAchievementDisplayAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::EAchievementDisplayAttribute::_set_k_EAchievementDisplayAttributeDesc");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "EAchievementDisplayAttribute", "k_EAchievementDisplayAttributeDesc", value));
}
// Autogenerated static field getter
// Get static field: static public Viveport.Internal.EAchievementDisplayAttribute k_EAchievementDisplayAttributeHidden
::Viveport::Internal::EAchievementDisplayAttribute Viveport::Internal::EAchievementDisplayAttribute::_get_k_EAchievementDisplayAttributeHidden() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::EAchievementDisplayAttribute::_get_k_EAchievementDisplayAttributeHidden");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Viveport::Internal::EAchievementDisplayAttribute>("Viveport.Internal", "EAchievementDisplayAttribute", "k_EAchievementDisplayAttributeHidden"));
}
// Autogenerated static field setter
// Set static field: static public Viveport.Internal.EAchievementDisplayAttribute k_EAchievementDisplayAttributeHidden
void Viveport::Internal::EAchievementDisplayAttribute::_set_k_EAchievementDisplayAttributeHidden(::Viveport::Internal::EAchievementDisplayAttribute value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::EAchievementDisplayAttribute::_set_k_EAchievementDisplayAttributeHidden");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "EAchievementDisplayAttribute", "k_EAchievementDisplayAttributeHidden", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& Viveport::Internal::EAchievementDisplayAttribute::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::EAchievementDisplayAttribute::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: Viveport.Internal.IAPurchaseCallback
#include "Viveport/Internal/IAPurchaseCallback.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Viveport.Internal.IAPurchaseCallback.Invoke
void Viveport::Internal::IAPurchaseCallback::Invoke(int code, ::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::IAPurchaseCallback::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::Internal::IAPurchaseCallback*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, code, message);
}
// Autogenerated method: Viveport.Internal.IAPurchaseCallback.BeginInvoke
::System::IAsyncResult* Viveport::Internal::IAPurchaseCallback::BeginInvoke(int code, ::StringW message, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::IAPurchaseCallback::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::Internal::IAPurchaseCallback*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, code, message, callback, object);
}
// Autogenerated method: Viveport.Internal.IAPurchaseCallback.EndInvoke
void Viveport::Internal::IAPurchaseCallback::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::IAPurchaseCallback::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Viveport::Internal::IAPurchaseCallback*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.Internal.Api
#include "Viveport/Internal/Api.hpp"
// Including type: Viveport.Internal.Api/AndroidLicenseChecker
#include "Viveport/Internal/Api_AndroidLicenseChecker.hpp"
// Including type: Viveport.Internal.StatusCallback
#include "Viveport/Internal/StatusCallback.hpp"
// Including type: Viveport.Api/LicenseChecker
#include "Viveport/Api_LicenseChecker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Viveport.Internal.Api.Init
int Viveport::Internal::Api::Init(::Viveport::Internal::StatusCallback* callback, ::StringW pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Api::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "Api", "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(pchAppKey)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, pchAppKey);
}
// Autogenerated method: Viveport.Internal.Api.Shutdown
int Viveport::Internal::Api::Shutdown(::Viveport::Internal::StatusCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Api::Shutdown");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "Api", "Shutdown", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Viveport.Internal.Api.Version
::StringW Viveport::Internal::Api::Version() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Api::Version");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "Api", "Version", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Viveport.Internal.Api.GetLicense
void Viveport::Internal::Api::GetLicense(::Viveport::Api::LicenseChecker* checker, ::StringW appId, ::StringW appKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Api::GetLicense");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "Api", "GetLicense", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(checker), ::il2cpp_utils::ExtractType(appId), ::il2cpp_utils::ExtractType(appKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, checker, appId, appKey);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.Internal.Api/AndroidLicenseChecker
#include "Viveport/Internal/Api_AndroidLicenseChecker.hpp"
// Including type: Viveport.Api/LicenseChecker
#include "Viveport/Api_LicenseChecker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Viveport.Api/LicenseChecker checker
[[deprecated("Use field access instead!")]] ::Viveport::Api::LicenseChecker*& Viveport::Internal::Api::AndroidLicenseChecker::dyn_checker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Api::AndroidLicenseChecker::dyn_checker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checker"))->offset;
  return *reinterpret_cast<::Viveport::Api::LicenseChecker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Viveport.Internal.Api/AndroidLicenseChecker.onSuccess
void Viveport::Internal::Api::AndroidLicenseChecker::onSuccess(int64_t issueTime, int64_t expirationTime, int latestVersion, bool updateRequired) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Api::AndroidLicenseChecker::onSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(issueTime), ::il2cpp_utils::ExtractType(expirationTime), ::il2cpp_utils::ExtractType(latestVersion), ::il2cpp_utils::ExtractType(updateRequired)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, issueTime, expirationTime, latestVersion, updateRequired);
}
// Autogenerated method: Viveport.Internal.Api/AndroidLicenseChecker.onFailure
void Viveport::Internal::Api::AndroidLicenseChecker::onFailure(int errorCode, ::StringW errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Api::AndroidLicenseChecker::onFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(errorMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, errorCode, errorMessage);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.Internal.User
#include "Viveport/Internal/User.hpp"
// Including type: Viveport.Internal.StatusCallback
#include "Viveport/Internal/StatusCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Viveport.Internal.User.IsReady
int Viveport::Internal::User::IsReady(::Viveport::Internal::StatusCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::User::IsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "User", "IsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Viveport.Internal.User.GetUserId
::StringW Viveport::Internal::User::GetUserId() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::User::GetUserId");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "User", "GetUserId", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Viveport.Internal.User.GetUserName
::StringW Viveport::Internal::User::GetUserName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::User::GetUserName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "User", "GetUserName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Viveport.Internal.User.GetUserAvatarUrl
::StringW Viveport::Internal::User::GetUserAvatarUrl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::User::GetUserAvatarUrl");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "User", "GetUserAvatarUrl", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.Internal.UserStats
#include "Viveport/Internal/UserStats.hpp"
// Including type: Viveport.Internal.StatusCallback
#include "Viveport/Internal/StatusCallback.hpp"
// Including type: Viveport.Internal.EAchievementDisplayAttribute
#include "Viveport/Internal/EAchievementDisplayAttribute.hpp"
// Including type: Viveport.Internal.ELocale
#include "Viveport/Internal/ELocale.hpp"
// Including type: Viveport.Internal.ELeaderboardDataRequest
#include "Viveport/Internal/ELeaderboardDataRequest.hpp"
// Including type: Viveport.Internal.ELeaderboardDataTimeRange
#include "Viveport/Internal/ELeaderboardDataTimeRange.hpp"
// Including type: Viveport.Leaderboard
#include "Viveport/Leaderboard.hpp"
// Including type: Viveport.Internal.ELeaderboardSortMethod
#include "Viveport/Internal/ELeaderboardSortMethod.hpp"
// Including type: Viveport.Internal.ELeaderboardDisplayType
#include "Viveport/Internal/ELeaderboardDisplayType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Viveport.Internal.UserStats.IsReady
int Viveport::Internal::UserStats::IsReady(::Viveport::Internal::StatusCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::UserStats::IsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "UserStats", "IsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Viveport.Internal.UserStats.DownloadStats
int Viveport::Internal::UserStats::DownloadStats(::Viveport::Internal::StatusCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::UserStats::DownloadStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "UserStats", "DownloadStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Viveport.Internal.UserStats.UploadStats
int Viveport::Internal::UserStats::UploadStats(::Viveport::Internal::StatusCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::UserStats::UploadStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "UserStats", "UploadStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Viveport.Internal.UserStats.SetStat
int Viveport::Internal::UserStats::SetStat(::StringW pchName, int nData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::UserStats::SetStat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "UserStats", "SetStat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchName), ::il2cpp_utils::ExtractType(nData)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchName, nData);
}
// Autogenerated method: Viveport.Internal.UserStats.SetStat
int Viveport::Internal::UserStats::SetStat(::StringW pchName, float fData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::UserStats::SetStat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "UserStats", "SetStat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchName), ::il2cpp_utils::ExtractType(fData)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchName, fData);
}
// Autogenerated method: Viveport.Internal.UserStats.GetStat
int Viveport::Internal::UserStats::GetStat(::StringW pchName, int nData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::UserStats::GetStat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "UserStats", "GetStat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchName), ::il2cpp_utils::ExtractType(nData)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchName, nData);
}
// Autogenerated method: Viveport.Internal.UserStats.GetStat
float Viveport::Internal::UserStats::GetStat(::StringW pchName, float fData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::UserStats::GetStat");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "UserStats", "GetStat", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchName), ::il2cpp_utils::ExtractType(fData)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchName, fData);
}
// Autogenerated method: Viveport.Internal.UserStats.GetAchievement
bool Viveport::Internal::UserStats::GetAchievement(::StringW pchName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::UserStats::GetAchievement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "UserStats", "GetAchievement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchName)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchName);
}
// Autogenerated method: Viveport.Internal.UserStats.GetAchievementUnlockTime
int Viveport::Internal::UserStats::GetAchievementUnlockTime(::StringW pchName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::UserStats::GetAchievementUnlockTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "UserStats", "GetAchievementUnlockTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchName)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchName);
}
// Autogenerated method: Viveport.Internal.UserStats.SetAchievement
int Viveport::Internal::UserStats::SetAchievement(::StringW pchName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::UserStats::SetAchievement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "UserStats", "SetAchievement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchName)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchName);
}
// Autogenerated method: Viveport.Internal.UserStats.ClearAchievement
int Viveport::Internal::UserStats::ClearAchievement(::StringW pchName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::UserStats::ClearAchievement");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "UserStats", "ClearAchievement", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchName)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchName);
}
// Autogenerated method: Viveport.Internal.UserStats.GetAchievementDisplayAttribute
::StringW Viveport::Internal::UserStats::GetAchievementDisplayAttribute(::StringW pchName, ::Viveport::Internal::EAchievementDisplayAttribute attr) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::UserStats::GetAchievementDisplayAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "UserStats", "GetAchievementDisplayAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchName), ::il2cpp_utils::ExtractType(attr)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchName, attr);
}
// Autogenerated method: Viveport.Internal.UserStats.GetAchievementDisplayAttribute
::StringW Viveport::Internal::UserStats::GetAchievementDisplayAttribute(::StringW pchName, ::Viveport::Internal::EAchievementDisplayAttribute attr, ::Viveport::Internal::ELocale locale) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::UserStats::GetAchievementDisplayAttribute");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "UserStats", "GetAchievementDisplayAttribute", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchName), ::il2cpp_utils::ExtractType(attr), ::il2cpp_utils::ExtractType(locale)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchName, attr, locale);
}
// Autogenerated method: Viveport.Internal.UserStats.GetAchievementIcon
::StringW Viveport::Internal::UserStats::GetAchievementIcon(::StringW pchName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::UserStats::GetAchievementIcon");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "UserStats", "GetAchievementIcon", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pchName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, pchName);
}
// Autogenerated method: Viveport.Internal.UserStats.DownloadLeaderboardScores
int Viveport::Internal::UserStats::DownloadLeaderboardScores(::Viveport::Internal::StatusCallback* callback, ::StringW pchLeaderboardName, ::Viveport::Internal::ELeaderboardDataRequest nDataRequest, ::Viveport::Internal::ELeaderboardDataTimeRange nTimeRange, int nRangeStart, int nRangeEnd) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::UserStats::DownloadLeaderboardScores");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "UserStats", "DownloadLeaderboardScores", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(pchLeaderboardName), ::il2cpp_utils::ExtractType(nDataRequest), ::il2cpp_utils::ExtractType(nTimeRange), ::il2cpp_utils::ExtractType(nRangeStart), ::il2cpp_utils::ExtractType(nRangeEnd)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, pchLeaderboardName, nDataRequest, nTimeRange, nRangeStart, nRangeEnd);
}
// Autogenerated method: Viveport.Internal.UserStats.UploadLeaderboardScore
int Viveport::Internal::UserStats::UploadLeaderboardScore(::Viveport::Internal::StatusCallback* callback, ::StringW pchLeaderboardName, int nScores) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::UserStats::UploadLeaderboardScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "UserStats", "UploadLeaderboardScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(pchLeaderboardName), ::il2cpp_utils::ExtractType(nScores)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, pchLeaderboardName, nScores);
}
// Autogenerated method: Viveport.Internal.UserStats.GetLeaderboardScore
::Viveport::Leaderboard* Viveport::Internal::UserStats::GetLeaderboardScore(int nIndex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::UserStats::GetLeaderboardScore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "UserStats", "GetLeaderboardScore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(nIndex)})));
  return ::il2cpp_utils::RunMethodRethrow<::Viveport::Leaderboard*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, nIndex);
}
// Autogenerated method: Viveport.Internal.UserStats.GetLeaderboardScoreCount
int Viveport::Internal::UserStats::GetLeaderboardScoreCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::UserStats::GetLeaderboardScoreCount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "UserStats", "GetLeaderboardScoreCount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Viveport.Internal.UserStats.GetLeaderboardSortMethod
::Viveport::Internal::ELeaderboardSortMethod Viveport::Internal::UserStats::GetLeaderboardSortMethod() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::UserStats::GetLeaderboardSortMethod");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "UserStats", "GetLeaderboardSortMethod", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Viveport::Internal::ELeaderboardSortMethod, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Viveport.Internal.UserStats.GetLeaderboardDisplayType
::Viveport::Internal::ELeaderboardDisplayType Viveport::Internal::UserStats::GetLeaderboardDisplayType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::UserStats::GetLeaderboardDisplayType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "UserStats", "GetLeaderboardDisplayType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Viveport::Internal::ELeaderboardDisplayType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.Internal.Deeplink
#include "Viveport/Internal/Deeplink.hpp"
// Including type: Viveport.Internal.Deeplink/AndroidDeeplinkChecker
#include "Viveport/Internal/Deeplink_AndroidDeeplinkChecker.hpp"
// Including type: Viveport.Internal.StatusCallback
#include "Viveport/Internal/StatusCallback.hpp"
// Including type: Viveport.Deeplink/DeeplinkChecker
#include "Viveport/Deeplink_DeeplinkChecker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Viveport.Internal.Deeplink.IsReady
void Viveport::Internal::Deeplink::IsReady(::Viveport::Internal::StatusCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Deeplink::IsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "Deeplink", "IsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Viveport.Internal.Deeplink.GoToApp
void Viveport::Internal::Deeplink::GoToApp(::Viveport::Deeplink::DeeplinkChecker* checker, ::StringW appId, ::StringW launchData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Deeplink::GoToApp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "Deeplink", "GoToApp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(checker), ::il2cpp_utils::ExtractType(appId), ::il2cpp_utils::ExtractType(launchData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, checker, appId, launchData);
}
// Autogenerated method: Viveport.Internal.Deeplink.GoToStore
void Viveport::Internal::Deeplink::GoToStore(::Viveport::Deeplink::DeeplinkChecker* checker, ::StringW appId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Deeplink::GoToStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "Deeplink", "GoToStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(checker), ::il2cpp_utils::ExtractType(appId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, checker, appId);
}
// Autogenerated method: Viveport.Internal.Deeplink.GoToAppOrGoToStore
void Viveport::Internal::Deeplink::GoToAppOrGoToStore(::Viveport::Deeplink::DeeplinkChecker* checker, ::StringW appId, ::StringW launchData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Deeplink::GoToAppOrGoToStore");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "Deeplink", "GoToAppOrGoToStore", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(checker), ::il2cpp_utils::ExtractType(appId), ::il2cpp_utils::ExtractType(launchData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, checker, appId, launchData);
}
// Autogenerated method: Viveport.Internal.Deeplink.GetAppLaunchData
::StringW Viveport::Internal::Deeplink::GetAppLaunchData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Deeplink::GetAppLaunchData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "Deeplink", "GetAppLaunchData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.Internal.Deeplink/AndroidDeeplinkChecker
#include "Viveport/Internal/Deeplink_AndroidDeeplinkChecker.hpp"
// Including type: Viveport.Deeplink/DeeplinkChecker
#include "Viveport/Deeplink_DeeplinkChecker.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Viveport.Deeplink/DeeplinkChecker checker
[[deprecated("Use field access instead!")]] ::Viveport::Deeplink::DeeplinkChecker*& Viveport::Internal::Deeplink::AndroidDeeplinkChecker::dyn_checker() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Deeplink::AndroidDeeplinkChecker::dyn_checker");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checker"))->offset;
  return *reinterpret_cast<::Viveport::Deeplink::DeeplinkChecker**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Viveport.Internal.Deeplink/AndroidDeeplinkChecker.onSuccess
void Viveport::Internal::Deeplink::AndroidDeeplinkChecker::onSuccess() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Deeplink::AndroidDeeplinkChecker::onSuccess");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onSuccess", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: Viveport.Internal.Deeplink/AndroidDeeplinkChecker.onFailure
void Viveport::Internal::Deeplink::AndroidDeeplinkChecker::onFailure(int errorCode, ::StringW errorMessage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Deeplink::AndroidDeeplinkChecker::onFailure");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onFailure", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(errorCode), ::il2cpp_utils::ExtractType(errorMessage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, errorCode, errorMessage);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.Internal.IAPurchase
#include "Viveport/Internal/IAPurchase.hpp"
// Including type: Viveport.Internal.IAPurchaseCallback
#include "Viveport/Internal/IAPurchaseCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Viveport.Internal.IAPurchase.IsReady
void Viveport::Internal::IAPurchase::IsReady(::Viveport::Internal::IAPurchaseCallback* callback, ::StringW pchAppKey) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::IAPurchase::IsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "IAPurchase", "IsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(pchAppKey)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, pchAppKey);
}
// Autogenerated method: Viveport.Internal.IAPurchase.Request
void Viveport::Internal::IAPurchase::Request(::Viveport::Internal::IAPurchaseCallback* callback, ::StringW pchPrice) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::IAPurchase::Request");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "IAPurchase", "Request", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(pchPrice)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, pchPrice);
}
// Autogenerated method: Viveport.Internal.IAPurchase.Request
void Viveport::Internal::IAPurchase::Request(::Viveport::Internal::IAPurchaseCallback* callback, ::StringW pchPrice, ::StringW pchUserData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::IAPurchase::Request");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "IAPurchase", "Request", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(pchPrice), ::il2cpp_utils::ExtractType(pchUserData)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, pchPrice, pchUserData);
}
// Autogenerated method: Viveport.Internal.IAPurchase.Purchase
void Viveport::Internal::IAPurchase::Purchase(::Viveport::Internal::IAPurchaseCallback* callback, ::StringW pchPurchaseId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::IAPurchase::Purchase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "IAPurchase", "Purchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(pchPurchaseId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, pchPurchaseId);
}
// Autogenerated method: Viveport.Internal.IAPurchase.Query
void Viveport::Internal::IAPurchase::Query(::Viveport::Internal::IAPurchaseCallback* callback, ::StringW pchPurchaseId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::IAPurchase::Query");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "IAPurchase", "Query", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(pchPurchaseId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, pchPurchaseId);
}
// Autogenerated method: Viveport.Internal.IAPurchase.Query
void Viveport::Internal::IAPurchase::Query(::Viveport::Internal::IAPurchaseCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::IAPurchase::Query");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "IAPurchase", "Query", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Viveport.Internal.IAPurchase.GetBalance
void Viveport::Internal::IAPurchase::GetBalance(::Viveport::Internal::IAPurchaseCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::IAPurchase::GetBalance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "IAPurchase", "GetBalance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Viveport.Internal.IAPurchase.RequestSubscription
void Viveport::Internal::IAPurchase::RequestSubscription(::Viveport::Internal::IAPurchaseCallback* callback, ::StringW pchPrice, ::StringW pchFreeTrialType, int nFreeTrialValue, ::StringW pchChargePeriodType, int nChargePeriodValue, int nNumberOfChargePeriod, ::StringW pchPlanId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::IAPurchase::RequestSubscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "IAPurchase", "RequestSubscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(pchPrice), ::il2cpp_utils::ExtractType(pchFreeTrialType), ::il2cpp_utils::ExtractType(nFreeTrialValue), ::il2cpp_utils::ExtractType(pchChargePeriodType), ::il2cpp_utils::ExtractType(nChargePeriodValue), ::il2cpp_utils::ExtractType(nNumberOfChargePeriod), ::il2cpp_utils::ExtractType(pchPlanId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, pchPrice, pchFreeTrialType, nFreeTrialValue, pchChargePeriodType, nChargePeriodValue, nNumberOfChargePeriod, pchPlanId);
}
// Autogenerated method: Viveport.Internal.IAPurchase.RequestSubscriptionWithPlanID
void Viveport::Internal::IAPurchase::RequestSubscriptionWithPlanID(::Viveport::Internal::IAPurchaseCallback* callback, ::StringW pchPlanId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::IAPurchase::RequestSubscriptionWithPlanID");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "IAPurchase", "RequestSubscriptionWithPlanID", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(pchPlanId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, pchPlanId);
}
// Autogenerated method: Viveport.Internal.IAPurchase.Subscribe
void Viveport::Internal::IAPurchase::Subscribe(::Viveport::Internal::IAPurchaseCallback* callback, ::StringW pchSubscriptionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::IAPurchase::Subscribe");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "IAPurchase", "Subscribe", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(pchSubscriptionId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, pchSubscriptionId);
}
// Autogenerated method: Viveport.Internal.IAPurchase.QuerySubscription
void Viveport::Internal::IAPurchase::QuerySubscription(::Viveport::Internal::IAPurchaseCallback* callback, ::StringW pchSubscriptionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::IAPurchase::QuerySubscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "IAPurchase", "QuerySubscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(pchSubscriptionId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, pchSubscriptionId);
}
// Autogenerated method: Viveport.Internal.IAPurchase.QuerySubscriptionList
void Viveport::Internal::IAPurchase::QuerySubscriptionList(::Viveport::Internal::IAPurchaseCallback* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::IAPurchase::QuerySubscriptionList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "IAPurchase", "QuerySubscriptionList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Viveport.Internal.IAPurchase.CancelSubscription
void Viveport::Internal::IAPurchase::CancelSubscription(::Viveport::Internal::IAPurchaseCallback* callback, ::StringW pchSubscriptionId) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::IAPurchase::CancelSubscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "IAPurchase", "CancelSubscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback), ::il2cpp_utils::ExtractType(pchSubscriptionId)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback, pchSubscriptionId);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.Internal.Subscription
#include "Viveport/Internal/Subscription.hpp"
// Including type: Viveport.Internal.StatusCallback2
#include "Viveport/Internal/StatusCallback2.hpp"
// Including type: Viveport.Internal.ESubscriptionTransactionType
#include "Viveport/Internal/ESubscriptionTransactionType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Viveport.Internal.Subscription.IsReady
int Viveport::Internal::Subscription::IsReady(::Viveport::Internal::StatusCallback2* callback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Subscription::IsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "Subscription", "IsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(callback)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, callback);
}
// Autogenerated method: Viveport.Internal.Subscription.IsWindowsSubscriber
bool Viveport::Internal::Subscription::IsWindowsSubscriber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Subscription::IsWindowsSubscriber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "Subscription", "IsWindowsSubscriber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Viveport.Internal.Subscription.IsAndroidSubscriber
bool Viveport::Internal::Subscription::IsAndroidSubscriber() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Subscription::IsAndroidSubscriber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "Subscription", "IsAndroidSubscriber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Viveport.Internal.Subscription.GetTransactionType
::Viveport::Internal::ESubscriptionTransactionType Viveport::Internal::Subscription::GetTransactionType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Subscription::GetTransactionType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "Subscription", "GetTransactionType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Viveport::Internal::ESubscriptionTransactionType, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.Internal.Token
#include "Viveport/Internal/Token.hpp"
// Including type: Viveport.Internal.StatusCallback
#include "Viveport/Internal/StatusCallback.hpp"
// Including type: Viveport.Internal.StatusCallback2
#include "Viveport/Internal/StatusCallback2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: Viveport.Internal.Token.IsReady
int Viveport::Internal::Token::IsReady(::Viveport::Internal::StatusCallback* IsReadyCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Token::IsReady");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "Token", "IsReady", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(IsReadyCallback)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, IsReadyCallback);
}
// Autogenerated method: Viveport.Internal.Token.GetSessionToken
int Viveport::Internal::Token::GetSessionToken(::Viveport::Internal::StatusCallback2* GetSessionTokenCallback) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Token::GetSessionToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "Token", "GetSessionToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(GetSessionTokenCallback)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, GetSessionTokenCallback);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.Internal.Android
#include "Viveport/Internal/Android.hpp"
// Including type: UnityEngine.AndroidJavaObject
#include "UnityEngine/AndroidJavaObject.hpp"
// Including type: UnityEngine.AndroidJavaClass
#include "UnityEngine/AndroidJavaClass.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private UnityEngine.AndroidJavaObject _api
::UnityEngine::AndroidJavaObject* Viveport::Internal::Android::_get__api() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Android::_get__api");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AndroidJavaObject*>("Viveport.Internal", "Android", "_api"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.AndroidJavaObject _api
void Viveport::Internal::Android::_set__api(::UnityEngine::AndroidJavaObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Android::_set__api");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "Android", "_api", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.AndroidJavaObject _iAPurchase
::UnityEngine::AndroidJavaObject* Viveport::Internal::Android::_get__iAPurchase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Android::_get__iAPurchase");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AndroidJavaObject*>("Viveport.Internal", "Android", "_iAPurchase"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.AndroidJavaObject _iAPurchase
void Viveport::Internal::Android::_set__iAPurchase(::UnityEngine::AndroidJavaObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Android::_set__iAPurchase");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "Android", "_iAPurchase", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.AndroidJavaClass _unityPlayer
::UnityEngine::AndroidJavaClass* Viveport::Internal::Android::_get__unityPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Android::_get__unityPlayer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AndroidJavaClass*>("Viveport.Internal", "Android", "_unityPlayer"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.AndroidJavaClass _unityPlayer
void Viveport::Internal::Android::_set__unityPlayer(::UnityEngine::AndroidJavaClass* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Android::_set__unityPlayer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "Android", "_unityPlayer", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.AndroidJavaObject _user
::UnityEngine::AndroidJavaObject* Viveport::Internal::Android::_get__user() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Android::_get__user");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AndroidJavaObject*>("Viveport.Internal", "Android", "_user"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.AndroidJavaObject _user
void Viveport::Internal::Android::_set__user(::UnityEngine::AndroidJavaObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Android::_set__user");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "Android", "_user", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.AndroidJavaObject _userStats
::UnityEngine::AndroidJavaObject* Viveport::Internal::Android::_get__userStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Android::_get__userStats");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AndroidJavaObject*>("Viveport.Internal", "Android", "_userStats"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.AndroidJavaObject _userStats
void Viveport::Internal::Android::_set__userStats(::UnityEngine::AndroidJavaObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Android::_set__userStats");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "Android", "_userStats", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.AndroidJavaObject _subscription
::UnityEngine::AndroidJavaObject* Viveport::Internal::Android::_get__subscription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Android::_get__subscription");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AndroidJavaObject*>("Viveport.Internal", "Android", "_subscription"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.AndroidJavaObject _subscription
void Viveport::Internal::Android::_set__subscription(::UnityEngine::AndroidJavaObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Android::_set__subscription");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "Android", "_subscription", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.AndroidJavaObject _sessionToken
::UnityEngine::AndroidJavaObject* Viveport::Internal::Android::_get__sessionToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Android::_get__sessionToken");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AndroidJavaObject*>("Viveport.Internal", "Android", "_sessionToken"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.AndroidJavaObject _sessionToken
void Viveport::Internal::Android::_set__sessionToken(::UnityEngine::AndroidJavaObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Android::_set__sessionToken");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "Android", "_sessionToken", value));
}
// Autogenerated static field getter
// Get static field: static private UnityEngine.AndroidJavaObject _deeplink
::UnityEngine::AndroidJavaObject* Viveport::Internal::Android::_get__deeplink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Android::_get__deeplink");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::AndroidJavaObject*>("Viveport.Internal", "Android", "_deeplink"));
}
// Autogenerated static field setter
// Set static field: static private UnityEngine.AndroidJavaObject _deeplink
void Viveport::Internal::Android::_set__deeplink(::UnityEngine::AndroidJavaObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Android::_set__deeplink");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Internal", "Android", "_deeplink", value));
}
// Autogenerated method: Viveport.Internal.Android.GetJavaAPI
::UnityEngine::AndroidJavaObject* Viveport::Internal::Android::GetJavaAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Android::GetJavaAPI");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "Android", "GetJavaAPI", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AndroidJavaObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Viveport.Internal.Android.GetJavaUser
::UnityEngine::AndroidJavaObject* Viveport::Internal::Android::GetJavaUser() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Android::GetJavaUser");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "Android", "GetJavaUser", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AndroidJavaObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Viveport.Internal.Android.GetJavaUserStats
::UnityEngine::AndroidJavaObject* Viveport::Internal::Android::GetJavaUserStats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Android::GetJavaUserStats");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "Android", "GetJavaUserStats", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AndroidJavaObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Viveport.Internal.Android.GetJavaIAPurchase
::UnityEngine::AndroidJavaObject* Viveport::Internal::Android::GetJavaIAPurchase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Android::GetJavaIAPurchase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "Android", "GetJavaIAPurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AndroidJavaObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Viveport.Internal.Android.GetJavaSubscription
::UnityEngine::AndroidJavaObject* Viveport::Internal::Android::GetJavaSubscription() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Android::GetJavaSubscription");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "Android", "GetJavaSubscription", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AndroidJavaObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Viveport.Internal.Android.GetJavaSessionToken
::UnityEngine::AndroidJavaObject* Viveport::Internal::Android::GetJavaSessionToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Android::GetJavaSessionToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "Android", "GetJavaSessionToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AndroidJavaObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Viveport.Internal.Android.GetDeeplink
::UnityEngine::AndroidJavaObject* Viveport::Internal::Android::GetDeeplink() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Android::GetDeeplink");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "Android", "GetDeeplink", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AndroidJavaObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Viveport.Internal.Android.get_UnityPlayer
::UnityEngine::AndroidJavaClass* Viveport::Internal::Android::get_UnityPlayer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Android::get_UnityPlayer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "Android", "get_UnityPlayer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AndroidJavaClass*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Viveport.Internal.Android.get_CurrentActivity
::UnityEngine::AndroidJavaObject* Viveport::Internal::Android::get_CurrentActivity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Android::get_CurrentActivity");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "Android", "get_CurrentActivity", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AndroidJavaObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: Viveport.Internal.Android.get_CurrentContext
::UnityEngine::AndroidJavaObject* Viveport::Internal::Android::get_CurrentContext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::Android::get_CurrentContext");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Internal", "Android", "get_CurrentContext", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::AndroidJavaObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.Internal.AndroidPluginCallback
#include "Viveport/Internal/AndroidPluginCallback.hpp"
// Including type: Viveport.Internal.IAPurchaseCallback
#include "Viveport/Internal/IAPurchaseCallback.hpp"
// Including type: Viveport.Internal.StatusCallback
#include "Viveport/Internal/StatusCallback.hpp"
// Including type: Viveport.Internal.StatusCallback2
#include "Viveport/Internal/StatusCallback2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private Viveport.Internal.IAPurchaseCallback callback
[[deprecated("Use field access instead!")]] ::Viveport::Internal::IAPurchaseCallback*& Viveport::Internal::AndroidPluginCallback::dyn_callback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::AndroidPluginCallback::dyn_callback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "callback"))->offset;
  return *reinterpret_cast<::Viveport::Internal::IAPurchaseCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Viveport.Internal.StatusCallback statusCallback
[[deprecated("Use field access instead!")]] ::Viveport::Internal::StatusCallback*& Viveport::Internal::AndroidPluginCallback::dyn_statusCallback() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::AndroidPluginCallback::dyn_statusCallback");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "statusCallback"))->offset;
  return *reinterpret_cast<::Viveport::Internal::StatusCallback**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private Viveport.Internal.StatusCallback2 statusCallback2
[[deprecated("Use field access instead!")]] ::Viveport::Internal::StatusCallback2*& Viveport::Internal::AndroidPluginCallback::dyn_statusCallback2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::AndroidPluginCallback::dyn_statusCallback2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "statusCallback2"))->offset;
  return *reinterpret_cast<::Viveport::Internal::StatusCallback2**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: Viveport.Internal.AndroidPluginCallback.onResult
void Viveport::Internal::AndroidPluginCallback::onResult(int statusCode, ::StringW result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Internal::AndroidPluginCallback::onResult");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "onResult", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(statusCode), ::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, statusCode, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.Arcade.Session
#include "Viveport/Arcade/Session.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: Viveport.Core.Logger
#include "Viveport/Core/Logger.hpp"
// Including type: System.String
#include "System/String.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.String LoggerTypeNameUnity
::StringW Viveport::Core::Logger::_get_LoggerTypeNameUnity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Core::Logger::_get_LoggerTypeNameUnity");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::StringW>("Viveport.Core", "Logger", "LoggerTypeNameUnity"));
}
// Autogenerated static field setter
// Set static field: static private System.String LoggerTypeNameUnity
void Viveport::Core::Logger::_set_LoggerTypeNameUnity(::StringW value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Core::Logger::_set_LoggerTypeNameUnity");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Core", "Logger", "LoggerTypeNameUnity", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _hasDetected
bool Viveport::Core::Logger::_get__hasDetected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Core::Logger::_get__hasDetected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Viveport.Core", "Logger", "_hasDetected"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _hasDetected
void Viveport::Core::Logger::_set__hasDetected(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Core::Logger::_set__hasDetected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Core", "Logger", "_hasDetected", value));
}
// Autogenerated static field getter
// Get static field: static private System.Boolean _usingUnityLog
bool Viveport::Core::Logger::_get__usingUnityLog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Core::Logger::_get__usingUnityLog");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<bool>("Viveport.Core", "Logger", "_usingUnityLog"));
}
// Autogenerated static field setter
// Set static field: static private System.Boolean _usingUnityLog
void Viveport::Core::Logger::_set__usingUnityLog(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Core::Logger::_set__usingUnityLog");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Core", "Logger", "_usingUnityLog", value));
}
// Autogenerated static field getter
// Get static field: static private System.Type _unityLogType
::System::Type* Viveport::Core::Logger::_get__unityLogType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Core::Logger::_get__unityLogType");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Type*>("Viveport.Core", "Logger", "_unityLogType"));
}
// Autogenerated static field setter
// Set static field: static private System.Type _unityLogType
void Viveport::Core::Logger::_set__unityLogType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Core::Logger::_set__unityLogType");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("Viveport.Core", "Logger", "_unityLogType", value));
}
// Autogenerated method: Viveport.Core.Logger.Log
void Viveport::Core::Logger::Log(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Core::Logger::Log");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Core", "Logger", "Log", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Viveport.Core.Logger.ConsoleLog
void Viveport::Core::Logger::ConsoleLog(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Core::Logger::ConsoleLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Core", "Logger", "ConsoleLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Viveport.Core.Logger.UnityLog
void Viveport::Core::Logger::UnityLog(::StringW message) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Core::Logger::UnityLog");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Core", "Logger", "UnityLog", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(message)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, message);
}
// Autogenerated method: Viveport.Core.Logger.GetType
::System::Type* Viveport::Core::Logger::GetType(::StringW typeName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Core::Logger::GetType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Core", "Logger", "GetType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(typeName)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, typeName);
}
// Autogenerated method: Viveport.Core.Logger..cctor
void Viveport::Core::Logger::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::Viveport::Core::Logger::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("Viveport.Core", "Logger", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LitJson.JsonType
#include "LitJson/JsonType.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LitJson.JsonType None
::LitJson::JsonType LitJson::JsonType::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonType::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::JsonType>("LitJson", "JsonType", "None"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.JsonType None
void LitJson::JsonType::_set_None(::LitJson::JsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonType::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonType", "None", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.JsonType Object
::LitJson::JsonType LitJson::JsonType::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonType::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::JsonType>("LitJson", "JsonType", "Object"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.JsonType Object
void LitJson::JsonType::_set_Object(::LitJson::JsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonType::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonType", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.JsonType Array
::LitJson::JsonType LitJson::JsonType::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonType::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::JsonType>("LitJson", "JsonType", "Array"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.JsonType Array
void LitJson::JsonType::_set_Array(::LitJson::JsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonType::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonType", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.JsonType String
::LitJson::JsonType LitJson::JsonType::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonType::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::JsonType>("LitJson", "JsonType", "String"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.JsonType String
void LitJson::JsonType::_set_String(::LitJson::JsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonType::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonType", "String", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.JsonType Int
::LitJson::JsonType LitJson::JsonType::_get_Int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonType::_get_Int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::JsonType>("LitJson", "JsonType", "Int"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.JsonType Int
void LitJson::JsonType::_set_Int(::LitJson::JsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonType::_set_Int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonType", "Int", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.JsonType Long
::LitJson::JsonType LitJson::JsonType::_get_Long() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonType::_get_Long");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::JsonType>("LitJson", "JsonType", "Long"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.JsonType Long
void LitJson::JsonType::_set_Long(::LitJson::JsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonType::_set_Long");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonType", "Long", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.JsonType Double
::LitJson::JsonType LitJson::JsonType::_get_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonType::_get_Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::JsonType>("LitJson", "JsonType", "Double"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.JsonType Double
void LitJson::JsonType::_set_Double(::LitJson::JsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonType::_set_Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonType", "Double", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.JsonType Boolean
::LitJson::JsonType LitJson::JsonType::_get_Boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonType::_get_Boolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::JsonType>("LitJson", "JsonType", "Boolean"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.JsonType Boolean
void LitJson::JsonType::_set_Boolean(::LitJson::JsonType value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonType::_set_Boolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonType", "Boolean", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& LitJson::JsonType::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonType::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LitJson.IJsonWrapper
#include "LitJson/IJsonWrapper.hpp"
// Including type: LitJson.JsonType
#include "LitJson/JsonType.hpp"
// Including type: LitJson.JsonWriter
#include "LitJson/JsonWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LitJson.IJsonWrapper.get_IsArray
bool LitJson::IJsonWrapper::get_IsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::IJsonWrapper::get_IsArray");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::IJsonWrapper*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.IJsonWrapper.get_IsBoolean
bool LitJson::IJsonWrapper::get_IsBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::IJsonWrapper::get_IsBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::IJsonWrapper*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.IJsonWrapper.get_IsDouble
bool LitJson::IJsonWrapper::get_IsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::IJsonWrapper::get_IsDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::IJsonWrapper*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.IJsonWrapper.get_IsInt
bool LitJson::IJsonWrapper::get_IsInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::IJsonWrapper::get_IsInt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::IJsonWrapper*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.IJsonWrapper.get_IsLong
bool LitJson::IJsonWrapper::get_IsLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::IJsonWrapper::get_IsLong");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::IJsonWrapper*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.IJsonWrapper.get_IsObject
bool LitJson::IJsonWrapper::get_IsObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::IJsonWrapper::get_IsObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::IJsonWrapper*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.IJsonWrapper.get_IsString
bool LitJson::IJsonWrapper::get_IsString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::IJsonWrapper::get_IsString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::IJsonWrapper*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.IJsonWrapper.GetBoolean
bool LitJson::IJsonWrapper::GetBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::IJsonWrapper::GetBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::IJsonWrapper*), -1));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.IJsonWrapper.GetDouble
double LitJson::IJsonWrapper::GetDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::IJsonWrapper::GetDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::IJsonWrapper*), -1));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.IJsonWrapper.GetInt
int LitJson::IJsonWrapper::GetInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::IJsonWrapper::GetInt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::IJsonWrapper*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.IJsonWrapper.GetJsonType
::LitJson::JsonType LitJson::IJsonWrapper::GetJsonType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::IJsonWrapper::GetJsonType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::IJsonWrapper*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::LitJson::JsonType, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.IJsonWrapper.GetLong
int64_t LitJson::IJsonWrapper::GetLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::IJsonWrapper::GetLong");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::IJsonWrapper*), -1));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.IJsonWrapper.GetString
::StringW LitJson::IJsonWrapper::GetString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::IJsonWrapper::GetString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::IJsonWrapper*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.IJsonWrapper.SetBoolean
void LitJson::IJsonWrapper::SetBoolean(bool val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::IJsonWrapper::SetBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::IJsonWrapper*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: LitJson.IJsonWrapper.SetDouble
void LitJson::IJsonWrapper::SetDouble(double val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::IJsonWrapper::SetDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::IJsonWrapper*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: LitJson.IJsonWrapper.SetInt
void LitJson::IJsonWrapper::SetInt(int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::IJsonWrapper::SetInt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::IJsonWrapper*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: LitJson.IJsonWrapper.SetJsonType
void LitJson::IJsonWrapper::SetJsonType(::LitJson::JsonType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::IJsonWrapper::SetJsonType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::IJsonWrapper*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type);
}
// Autogenerated method: LitJson.IJsonWrapper.SetLong
void LitJson::IJsonWrapper::SetLong(int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::IJsonWrapper::SetLong");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::IJsonWrapper*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: LitJson.IJsonWrapper.SetString
void LitJson::IJsonWrapper::SetString(::StringW val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::IJsonWrapper::SetString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::IJsonWrapper*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: LitJson.IJsonWrapper.ToJson
::StringW LitJson::IJsonWrapper::ToJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::IJsonWrapper::ToJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::IJsonWrapper*), -1));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.IJsonWrapper.ToJson
void LitJson::IJsonWrapper::ToJson(::LitJson::JsonWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::IJsonWrapper::ToJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::IJsonWrapper*), -1));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LitJson.JsonData
#include "LitJson/JsonData.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Array
#include "System/Array.hpp"
// Including type: System.Collections.IDictionaryEnumerator
#include "System/Collections/IDictionaryEnumerator.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: LitJson.JsonWriter
#include "LitJson/JsonWriter.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IList`1<LitJson.JsonData> inst_array
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IList_1<::LitJson::JsonData*>*& LitJson::JsonData::dyn_inst_array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::dyn_inst_array");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inst_array"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IList_1<::LitJson::JsonData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean inst_boolean
[[deprecated("Use field access instead!")]] bool& LitJson::JsonData::dyn_inst_boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::dyn_inst_boolean");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inst_boolean"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Double inst_double
[[deprecated("Use field access instead!")]] double& LitJson::JsonData::dyn_inst_double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::dyn_inst_double");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inst_double"))->offset;
  return *reinterpret_cast<double*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 inst_int
[[deprecated("Use field access instead!")]] int& LitJson::JsonData::dyn_inst_int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::dyn_inst_int");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inst_int"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int64 inst_long
[[deprecated("Use field access instead!")]] int64_t& LitJson::JsonData::dyn_inst_long() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::dyn_inst_long");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inst_long"))->offset;
  return *reinterpret_cast<int64_t*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IDictionary`2<System.String,LitJson.JsonData> inst_object
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IDictionary_2<::StringW, ::LitJson::JsonData*>*& LitJson::JsonData::dyn_inst_object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::dyn_inst_object");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inst_object"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IDictionary_2<::StringW, ::LitJson::JsonData*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String inst_string
[[deprecated("Use field access instead!")]] ::StringW& LitJson::JsonData::dyn_inst_string() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::dyn_inst_string");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inst_string"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String json
[[deprecated("Use field access instead!")]] ::StringW& LitJson::JsonData::dyn_json() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::dyn_json");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "json"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LitJson.JsonType type
[[deprecated("Use field access instead!")]] ::LitJson::JsonType& LitJson::JsonData::dyn_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::dyn_type");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "type"))->offset;
  return *reinterpret_cast<::LitJson::JsonType*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IList`1<System.Collections.Generic.KeyValuePair`2<System.String,LitJson.JsonData>> object_list
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::LitJson::JsonData*>>*& LitJson::JsonData::dyn_object_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::dyn_object_list");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "object_list"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IList_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::LitJson::JsonData*>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LitJson.JsonData.get_Count
int LitJson::JsonData::get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::get_Count");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Count", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.get_IsArray
bool LitJson::JsonData::get_IsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::get_IsArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.get_IsBoolean
bool LitJson::JsonData::get_IsBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::get_IsBoolean");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsBoolean", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.get_IsDouble
bool LitJson::JsonData::get_IsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::get_IsDouble");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsDouble", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.get_IsInt
bool LitJson::JsonData::get_IsInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::get_IsInt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsInt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.get_IsLong
bool LitJson::JsonData::get_IsLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::get_IsLong");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsLong", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.get_IsObject
bool LitJson::JsonData::get_IsObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::get_IsObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.get_IsString
bool LitJson::JsonData::get_IsString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::get_IsString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IsString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.System.Collections.ICollection.get_Count
int LitJson::JsonData::System_Collections_ICollection_get_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.ICollection.get_Count");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 37));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.System.Collections.ICollection.get_IsSynchronized
bool LitJson::JsonData::System_Collections_ICollection_get_IsSynchronized() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.ICollection.get_IsSynchronized");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 39));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.System.Collections.ICollection.get_SyncRoot
::Il2CppObject* LitJson::JsonData::System_Collections_ICollection_get_SyncRoot() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.ICollection.get_SyncRoot");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 38));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.System.Collections.IDictionary.get_IsFixedSize
bool LitJson::JsonData::System_Collections_IDictionary_get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.IDictionary.get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 54));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.System.Collections.IDictionary.get_IsReadOnly
bool LitJson::JsonData::System_Collections_IDictionary_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.IDictionary.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 53));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.System.Collections.IDictionary.get_Keys
::System::Collections::ICollection* LitJson::JsonData::System_Collections_IDictionary_get_Keys() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.IDictionary.get_Keys");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 48));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.System.Collections.IDictionary.get_Values
::System::Collections::ICollection* LitJson::JsonData::System_Collections_IDictionary_get_Values() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.IDictionary.get_Values");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 49));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.LitJson.IJsonWrapper.get_IsArray
bool LitJson::JsonData::LitJson_IJsonWrapper_get_IsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::LitJson.IJsonWrapper.get_IsArray");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 4));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.LitJson.IJsonWrapper.get_IsBoolean
bool LitJson::JsonData::LitJson_IJsonWrapper_get_IsBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::LitJson.IJsonWrapper.get_IsBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 5));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.LitJson.IJsonWrapper.get_IsDouble
bool LitJson::JsonData::LitJson_IJsonWrapper_get_IsDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::LitJson.IJsonWrapper.get_IsDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.LitJson.IJsonWrapper.get_IsInt
bool LitJson::JsonData::LitJson_IJsonWrapper_get_IsInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::LitJson.IJsonWrapper.get_IsInt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.LitJson.IJsonWrapper.get_IsLong
bool LitJson::JsonData::LitJson_IJsonWrapper_get_IsLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::LitJson.IJsonWrapper.get_IsLong");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 8));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.LitJson.IJsonWrapper.get_IsObject
bool LitJson::JsonData::LitJson_IJsonWrapper_get_IsObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::LitJson.IJsonWrapper.get_IsObject");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 9));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.LitJson.IJsonWrapper.get_IsString
bool LitJson::JsonData::LitJson_IJsonWrapper_get_IsString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::LitJson.IJsonWrapper.get_IsString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 10));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.System.Collections.IList.get_IsFixedSize
bool LitJson::JsonData::System_Collections_IList_get_IsFixedSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.IList.get_IsFixedSize");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 31));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.System.Collections.IList.get_IsReadOnly
bool LitJson::JsonData::System_Collections_IList_get_IsReadOnly() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.IList.get_IsReadOnly");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 30));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.System.Collections.IDictionary.get_Item
::Il2CppObject* LitJson::JsonData::System_Collections_IDictionary_get_Item(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.IDictionary.get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 46));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, key);
}
// Autogenerated method: LitJson.JsonData.System.Collections.IDictionary.set_Item
void LitJson::JsonData::System_Collections_IDictionary_set_Item(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.IDictionary.set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 47));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: LitJson.JsonData.System.Collections.Specialized.IOrderedDictionary.get_Item
::Il2CppObject* LitJson::JsonData::System_Collections_Specialized_IOrderedDictionary_get_Item(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.Specialized.IOrderedDictionary.get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 41));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, idx);
}
// Autogenerated method: LitJson.JsonData.System.Collections.Specialized.IOrderedDictionary.set_Item
void LitJson::JsonData::System_Collections_Specialized_IOrderedDictionary_set_Item(int idx, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.Specialized.IOrderedDictionary.set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 42));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx, value);
}
// Autogenerated method: LitJson.JsonData.System.Collections.IList.get_Item
::Il2CppObject* LitJson::JsonData::System_Collections_IList_get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.IList.get_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 25));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, index);
}
// Autogenerated method: LitJson.JsonData.System.Collections.IList.set_Item
void LitJson::JsonData::System_Collections_IList_set_Item(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.IList.set_Item");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 26));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: LitJson.JsonData.get_Item
::LitJson::JsonData* LitJson::JsonData::get_Item(::StringW prop_name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prop_name)})));
  return ::il2cpp_utils::RunMethodRethrow<::LitJson::JsonData*, false>(this, ___internal__method, prop_name);
}
// Autogenerated method: LitJson.JsonData.set_Item
void LitJson::JsonData::set_Item(::StringW prop_name, ::LitJson::JsonData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(prop_name), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, prop_name, value);
}
// Autogenerated method: LitJson.JsonData.get_Item
::LitJson::JsonData* LitJson::JsonData::get_Item(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::get_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index)})));
  return ::il2cpp_utils::RunMethodRethrow<::LitJson::JsonData*, false>(this, ___internal__method, index);
}
// Autogenerated method: LitJson.JsonData.set_Item
void LitJson::JsonData::set_Item(int index, ::LitJson::JsonData* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::set_Item");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Item", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(index), ::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: LitJson.JsonData.op_Explicit
LitJson::JsonData::operator bool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonData", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LitJson.JsonData.op_Explicit
LitJson::JsonData::operator double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonData", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LitJson.JsonData.op_Explicit
LitJson::JsonData::operator int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonData", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LitJson.JsonData.op_Explicit
LitJson::JsonData::operator int64_t() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonData", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LitJson.JsonData.op_Explicit
LitJson::JsonData::operator ::StringW() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::op_Explicit");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonData", "op_Explicit", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LitJson.JsonData.System.Collections.ICollection.CopyTo
void LitJson::JsonData::System_Collections_ICollection_CopyTo(::System::Array* array, int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.ICollection.CopyTo");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 36));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, array, index);
}
// Autogenerated method: LitJson.JsonData.System.Collections.IDictionary.Add
void LitJson::JsonData::System_Collections_IDictionary_Add(::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.IDictionary.Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 51));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key, value);
}
// Autogenerated method: LitJson.JsonData.System.Collections.IDictionary.Clear
void LitJson::JsonData::System_Collections_IDictionary_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.IDictionary.Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 52));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.System.Collections.IDictionary.Contains
bool LitJson::JsonData::System_Collections_IDictionary_Contains(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.IDictionary.Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 50));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, key);
}
// Autogenerated method: LitJson.JsonData.System.Collections.IDictionary.GetEnumerator
::System::Collections::IDictionaryEnumerator* LitJson::JsonData::System_Collections_IDictionary_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.IDictionary.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 55));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.System.Collections.IDictionary.Remove
void LitJson::JsonData::System_Collections_IDictionary_Remove(::Il2CppObject* key) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.IDictionary.Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 56));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, key);
}
// Autogenerated method: LitJson.JsonData.System.Collections.IEnumerable.GetEnumerator
::System::Collections::IEnumerator* LitJson::JsonData::System_Collections_IEnumerable_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.IEnumerable.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 40));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.LitJson.IJsonWrapper.GetBoolean
bool LitJson::JsonData::LitJson_IJsonWrapper_GetBoolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::LitJson.IJsonWrapper.GetBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 11));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.LitJson.IJsonWrapper.GetDouble
double LitJson::JsonData::LitJson_IJsonWrapper_GetDouble() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::LitJson.IJsonWrapper.GetDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 12));
  return ::il2cpp_utils::RunMethodRethrow<double, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.LitJson.IJsonWrapper.GetInt
int LitJson::JsonData::LitJson_IJsonWrapper_GetInt() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::LitJson.IJsonWrapper.GetInt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 13));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.LitJson.IJsonWrapper.GetLong
int64_t LitJson::JsonData::LitJson_IJsonWrapper_GetLong() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::LitJson.IJsonWrapper.GetLong");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 15));
  return ::il2cpp_utils::RunMethodRethrow<int64_t, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.LitJson.IJsonWrapper.GetString
::StringW LitJson::JsonData::LitJson_IJsonWrapper_GetString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::LitJson.IJsonWrapper.GetString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 16));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.LitJson.IJsonWrapper.SetBoolean
void LitJson::JsonData::LitJson_IJsonWrapper_SetBoolean(bool val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::LitJson.IJsonWrapper.SetBoolean");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 17));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: LitJson.JsonData.LitJson.IJsonWrapper.SetDouble
void LitJson::JsonData::LitJson_IJsonWrapper_SetDouble(double val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::LitJson.IJsonWrapper.SetDouble");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 18));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: LitJson.JsonData.LitJson.IJsonWrapper.SetInt
void LitJson::JsonData::LitJson_IJsonWrapper_SetInt(int val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::LitJson.IJsonWrapper.SetInt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 19));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: LitJson.JsonData.LitJson.IJsonWrapper.SetLong
void LitJson::JsonData::LitJson_IJsonWrapper_SetLong(int64_t val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::LitJson.IJsonWrapper.SetLong");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 21));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: LitJson.JsonData.LitJson.IJsonWrapper.SetString
void LitJson::JsonData::LitJson_IJsonWrapper_SetString(::StringW val) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::LitJson.IJsonWrapper.SetString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 22));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, val);
}
// Autogenerated method: LitJson.JsonData.LitJson.IJsonWrapper.ToJson
::StringW LitJson::JsonData::LitJson_IJsonWrapper_ToJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::LitJson.IJsonWrapper.ToJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 23));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.LitJson.IJsonWrapper.ToJson
void LitJson::JsonData::LitJson_IJsonWrapper_ToJson(::LitJson::JsonWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::LitJson.IJsonWrapper.ToJson");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 24));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: LitJson.JsonData.System.Collections.IList.Add
int LitJson::JsonData::System_Collections_IList_Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.IList.Add");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 27));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: LitJson.JsonData.System.Collections.IList.Clear
void LitJson::JsonData::System_Collections_IList_Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.IList.Clear");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 29));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.System.Collections.IList.Contains
bool LitJson::JsonData::System_Collections_IList_Contains(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.IList.Contains");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 28));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, value);
}
// Autogenerated method: LitJson.JsonData.System.Collections.IList.IndexOf
int LitJson::JsonData::System_Collections_IList_IndexOf(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.IList.IndexOf");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 32));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: LitJson.JsonData.System.Collections.IList.Insert
void LitJson::JsonData::System_Collections_IList_Insert(int index, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.IList.Insert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 33));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index, value);
}
// Autogenerated method: LitJson.JsonData.System.Collections.IList.Remove
void LitJson::JsonData::System_Collections_IList_Remove(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.IList.Remove");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 34));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LitJson.JsonData.System.Collections.IList.RemoveAt
void LitJson::JsonData::System_Collections_IList_RemoveAt(int index) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.IList.RemoveAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 35));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, index);
}
// Autogenerated method: LitJson.JsonData.System.Collections.Specialized.IOrderedDictionary.GetEnumerator
::System::Collections::IDictionaryEnumerator* LitJson::JsonData::System_Collections_Specialized_IOrderedDictionary_GetEnumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.Specialized.IOrderedDictionary.GetEnumerator");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 43));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionaryEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.System.Collections.Specialized.IOrderedDictionary.Insert
void LitJson::JsonData::System_Collections_Specialized_IOrderedDictionary_Insert(int idx, ::Il2CppObject* key, ::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.Specialized.IOrderedDictionary.Insert");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 44));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx, key, value);
}
// Autogenerated method: LitJson.JsonData.System.Collections.Specialized.IOrderedDictionary.RemoveAt
void LitJson::JsonData::System_Collections_Specialized_IOrderedDictionary_RemoveAt(int idx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::System.Collections.Specialized.IOrderedDictionary.RemoveAt");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 45));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, idx);
}
// Autogenerated method: LitJson.JsonData.EnsureCollection
::System::Collections::ICollection* LitJson::JsonData::EnsureCollection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::EnsureCollection");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureCollection", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::ICollection*, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.EnsureDictionary
::System::Collections::IDictionary* LitJson::JsonData::EnsureDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::EnsureDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IDictionary*, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.EnsureList
::System::Collections::IList* LitJson::JsonData::EnsureList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::EnsureList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IList*, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.ToJsonData
::LitJson::JsonData* LitJson::JsonData::ToJsonData(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::ToJsonData");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToJsonData", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::LitJson::JsonData*, false>(this, ___internal__method, obj);
}
// Autogenerated method: LitJson.JsonData.WriteJson
void LitJson::JsonData::WriteJson(::LitJson::IJsonWrapper* obj, ::LitJson::JsonWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::WriteJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonData", "WriteJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, writer);
}
// Autogenerated method: LitJson.JsonData.Add
int LitJson::JsonData::Add(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::Add");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Add", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, value);
}
// Autogenerated method: LitJson.JsonData.Clear
void LitJson::JsonData::Clear() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::Clear");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Clear", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.Equals
bool LitJson::JsonData::Equals(::LitJson::JsonData* x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::Equals");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 57));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: LitJson.JsonData.GetJsonType
::LitJson::JsonType LitJson::JsonData::GetJsonType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::GetJsonType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::LitJson::JsonType, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.SetJsonType
void LitJson::JsonData::SetJsonType(::LitJson::JsonType type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::SetJsonType");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::JsonData*), 20));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, type);
}
// Autogenerated method: LitJson.JsonData.ToJson
::StringW LitJson::JsonData::ToJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::ToJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonData.ToJson
void LitJson::JsonData::ToJson(::LitJson::JsonWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::ToJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ToJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, writer);
}
// Autogenerated method: LitJson.JsonData.ToString
::StringW LitJson::JsonData::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonData::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LitJson.OrderedDictionaryEnumerator
#include "LitJson/OrderedDictionaryEnumerator.hpp"
// Including type: System.Collections.Generic.IEnumerator`1
#include "System/Collections/Generic/IEnumerator_1.hpp"
// Including type: LitJson.JsonData
#include "LitJson/JsonData.hpp"
// Including type: System.Collections.DictionaryEntry
#include "System/Collections/DictionaryEntry.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IEnumerator`1<System.Collections.Generic.KeyValuePair`2<System.String,LitJson.JsonData>> list_enumerator
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::LitJson::JsonData*>>*& LitJson::OrderedDictionaryEnumerator::dyn_list_enumerator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::OrderedDictionaryEnumerator::dyn_list_enumerator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "list_enumerator"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IEnumerator_1<::System::Collections::Generic::KeyValuePair_2<::StringW, ::LitJson::JsonData*>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LitJson.OrderedDictionaryEnumerator.get_Current
::Il2CppObject* LitJson::OrderedDictionaryEnumerator::get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::OrderedDictionaryEnumerator::get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::OrderedDictionaryEnumerator*), 8));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.OrderedDictionaryEnumerator.get_Entry
::System::Collections::DictionaryEntry LitJson::OrderedDictionaryEnumerator::get_Entry() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::OrderedDictionaryEnumerator::get_Entry");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::OrderedDictionaryEnumerator*), 6));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::DictionaryEntry, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.OrderedDictionaryEnumerator.get_Key
::Il2CppObject* LitJson::OrderedDictionaryEnumerator::get_Key() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::OrderedDictionaryEnumerator::get_Key");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::OrderedDictionaryEnumerator*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.OrderedDictionaryEnumerator.get_Value
::Il2CppObject* LitJson::OrderedDictionaryEnumerator::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::OrderedDictionaryEnumerator::get_Value");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::OrderedDictionaryEnumerator*), 5));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.OrderedDictionaryEnumerator.MoveNext
bool LitJson::OrderedDictionaryEnumerator::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::OrderedDictionaryEnumerator::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::OrderedDictionaryEnumerator*), 7));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.OrderedDictionaryEnumerator.Reset
void LitJson::OrderedDictionaryEnumerator::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::OrderedDictionaryEnumerator::Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::OrderedDictionaryEnumerator*), 9));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LitJson.JsonException
#include "LitJson/JsonException.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LitJson.ArrayMetadata
#include "LitJson/ArrayMetadata.hpp"
// Including type: System.Type
#include "System/Type.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type element_type
[[deprecated("Use field access instead!")]] ::System::Type*& LitJson::ArrayMetadata::dyn_element_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ArrayMetadata::dyn_element_type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "element_type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean is_array
[[deprecated("Use field access instead!")]] bool& LitJson::ArrayMetadata::dyn_is_array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ArrayMetadata::dyn_is_array");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "is_array"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean is_list
[[deprecated("Use field access instead!")]] bool& LitJson::ArrayMetadata::dyn_is_list() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ArrayMetadata::dyn_is_list");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "is_list"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LitJson.ArrayMetadata.get_ElementType
::System::Type* LitJson::ArrayMetadata::get_ElementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ArrayMetadata::get_ElementType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ElementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.ArrayMetadata.set_ElementType
void LitJson::ArrayMetadata::set_ElementType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ArrayMetadata::set_ElementType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_ElementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LitJson.ArrayMetadata.get_IsArray
bool LitJson::ArrayMetadata::get_IsArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ArrayMetadata::get_IsArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.ArrayMetadata.set_IsArray
void LitJson::ArrayMetadata::set_IsArray(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ArrayMetadata::set_IsArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_IsArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LitJson.ArrayMetadata.get_IsList
bool LitJson::ArrayMetadata::get_IsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ArrayMetadata::get_IsList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.ArrayMetadata.set_IsList
void LitJson::ArrayMetadata::set_IsList(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ArrayMetadata::set_IsList");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_IsList", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LitJson.ObjectMetadata
#include "LitJson/ObjectMetadata.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Type element_type
[[deprecated("Use field access instead!")]] ::System::Type*& LitJson::ObjectMetadata::dyn_element_type() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ObjectMetadata::dyn_element_type");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "element_type"))->offset;
  return *reinterpret_cast<::System::Type**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean is_dictionary
[[deprecated("Use field access instead!")]] bool& LitJson::ObjectMetadata::dyn_is_dictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ObjectMetadata::dyn_is_dictionary");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "is_dictionary"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.IDictionary`2<System.String,LitJson.PropertyMetadata> properties
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::IDictionary_2<::StringW, ::LitJson::PropertyMetadata>*& LitJson::ObjectMetadata::dyn_properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ObjectMetadata::dyn_properties");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "properties"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::IDictionary_2<::StringW, ::LitJson::PropertyMetadata>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LitJson.ObjectMetadata.get_ElementType
::System::Type* LitJson::ObjectMetadata::get_ElementType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ObjectMetadata::get_ElementType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_ElementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Type*, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.ObjectMetadata.set_ElementType
void LitJson::ObjectMetadata::set_ElementType(::System::Type* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ObjectMetadata::set_ElementType");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_ElementType", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LitJson.ObjectMetadata.get_IsDictionary
bool LitJson::ObjectMetadata::get_IsDictionary() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ObjectMetadata::get_IsDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_IsDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.ObjectMetadata.set_IsDictionary
void LitJson::ObjectMetadata::set_IsDictionary(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ObjectMetadata::set_IsDictionary");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_IsDictionary", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LitJson.ObjectMetadata.get_Properties
::System::Collections::Generic::IDictionary_2<::StringW, ::LitJson::PropertyMetadata>* LitJson::ObjectMetadata::get_Properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ObjectMetadata::get_Properties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "get_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::IDictionary_2<::StringW, ::LitJson::PropertyMetadata>*, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.ObjectMetadata.set_Properties
void LitJson::ObjectMetadata::set_Properties(::System::Collections::Generic::IDictionary_2<::StringW, ::LitJson::PropertyMetadata>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ObjectMetadata::set_Properties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(*this, "set_Properties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LitJson.ExporterFunc
#include "LitJson/ExporterFunc.hpp"
// Including type: LitJson.JsonWriter
#include "LitJson/JsonWriter.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LitJson.ExporterFunc.Invoke
void LitJson::ExporterFunc::Invoke(::Il2CppObject* obj, ::LitJson::JsonWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ExporterFunc::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::ExporterFunc*), 12));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, writer);
}
// Autogenerated method: LitJson.ExporterFunc.BeginInvoke
::System::IAsyncResult* LitJson::ExporterFunc::BeginInvoke(::Il2CppObject* obj, ::LitJson::JsonWriter* writer, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ExporterFunc::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::ExporterFunc*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, obj, writer, callback, object);
}
// Autogenerated method: LitJson.ExporterFunc.EndInvoke
void LitJson::ExporterFunc::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ExporterFunc::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::ExporterFunc*), 14));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LitJson.ImporterFunc
#include "LitJson/ImporterFunc.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LitJson.ImporterFunc.Invoke
::Il2CppObject* LitJson::ImporterFunc::Invoke(::Il2CppObject* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ImporterFunc::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::ImporterFunc*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, input);
}
// Autogenerated method: LitJson.ImporterFunc.BeginInvoke
::System::IAsyncResult* LitJson::ImporterFunc::BeginInvoke(::Il2CppObject* input, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ImporterFunc::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::ImporterFunc*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, input, callback, object);
}
// Autogenerated method: LitJson.ImporterFunc.EndInvoke
::Il2CppObject* LitJson::ImporterFunc::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ImporterFunc::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::ImporterFunc*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LitJson.WrapperFactory
#include "LitJson/WrapperFactory.hpp"
// Including type: LitJson.IJsonWrapper
#include "LitJson/IJsonWrapper.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LitJson.WrapperFactory.Invoke
::LitJson::IJsonWrapper* LitJson::WrapperFactory::Invoke() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::WrapperFactory::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::WrapperFactory*), 12));
  return ::il2cpp_utils::RunMethodRethrow<::LitJson::IJsonWrapper*, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.WrapperFactory.BeginInvoke
::System::IAsyncResult* LitJson::WrapperFactory::BeginInvoke(::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::WrapperFactory::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::WrapperFactory*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, callback, object);
}
// Autogenerated method: LitJson.WrapperFactory.EndInvoke
::LitJson::IJsonWrapper* LitJson::WrapperFactory::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::WrapperFactory::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::WrapperFactory*), 14));
  return ::il2cpp_utils::RunMethodRethrow<::LitJson::IJsonWrapper*, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LitJson.JsonMapper
#include "LitJson/JsonMapper.hpp"
// Including type: LitJson.JsonMapper/<>c
#include "LitJson/JsonMapper_--c.hpp"
// Including type: LitJson.JsonMapper/<>c__DisplayClass37_0`1
#include "LitJson/JsonMapper_--c__DisplayClass37_0_1.hpp"
// Including type: LitJson.JsonMapper/<>c__DisplayClass38_0`2
#include "LitJson/JsonMapper_--c__DisplayClass38_0_2.hpp"
// Including type: System.IFormatProvider
#include "System/IFormatProvider.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
// Including type: System.Type
#include "System/Type.hpp"
// Including type: LitJson.ExporterFunc
#include "LitJson/ExporterFunc.hpp"
// Including type: LitJson.ImporterFunc
#include "LitJson/ImporterFunc.hpp"
// Including type: System.Reflection.MethodInfo
#include "System/Reflection/MethodInfo.hpp"
// Including type: System.Collections.Generic.IList`1
#include "System/Collections/Generic/IList_1.hpp"
// Including type: LitJson.JsonWriter
#include "LitJson/JsonWriter.hpp"
// Including type: LitJson.JsonReader
#include "LitJson/JsonReader.hpp"
// Including type: LitJson.IJsonWrapper
#include "LitJson/IJsonWrapper.hpp"
// Including type: LitJson.WrapperFactory
#include "LitJson/WrapperFactory.hpp"
// Including type: LitJson.JsonData
#include "LitJson/JsonData.hpp"
// Including type: System.IO.TextReader
#include "System/IO/TextReader.hpp"
// Including type: LitJson.ExporterFunc`1
#include "LitJson/ExporterFunc_1.hpp"
// Including type: LitJson.ImporterFunc`2
#include "LitJson/ImporterFunc_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32 max_nesting_depth
int LitJson::JsonMapper::_get_max_nesting_depth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_get_max_nesting_depth");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<int>("LitJson", "JsonMapper", "max_nesting_depth"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32 max_nesting_depth
void LitJson::JsonMapper::_set_max_nesting_depth(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_set_max_nesting_depth");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonMapper", "max_nesting_depth", value));
}
// Autogenerated static field getter
// Get static field: static private System.IFormatProvider datetime_format
::System::IFormatProvider* LitJson::JsonMapper::_get_datetime_format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_get_datetime_format");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::IFormatProvider*>("LitJson", "JsonMapper", "datetime_format"));
}
// Autogenerated static field setter
// Set static field: static private System.IFormatProvider datetime_format
void LitJson::JsonMapper::_set_datetime_format(::System::IFormatProvider* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_set_datetime_format");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonMapper", "datetime_format", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.IDictionary`2<System.Type,LitJson.ExporterFunc> base_exporters_table
::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ExporterFunc*>* LitJson::JsonMapper::_get_base_exporters_table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_get_base_exporters_table");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ExporterFunc*>*>("LitJson", "JsonMapper", "base_exporters_table")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.IDictionary`2<System.Type,LitJson.ExporterFunc> base_exporters_table
void LitJson::JsonMapper::_set_base_exporters_table(::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ExporterFunc*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_set_base_exporters_table");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonMapper", "base_exporters_table", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.IDictionary`2<System.Type,LitJson.ExporterFunc> custom_exporters_table
::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ExporterFunc*>* LitJson::JsonMapper::_get_custom_exporters_table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_get_custom_exporters_table");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ExporterFunc*>*>("LitJson", "JsonMapper", "custom_exporters_table")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.IDictionary`2<System.Type,LitJson.ExporterFunc> custom_exporters_table
void LitJson::JsonMapper::_set_custom_exporters_table(::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ExporterFunc*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_set_custom_exporters_table");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonMapper", "custom_exporters_table", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.IDictionary`2<System.Type,System.Collections.Generic.IDictionary`2<System.Type,LitJson.ImporterFunc>> base_importers_table
::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ImporterFunc*>*>* LitJson::JsonMapper::_get_base_importers_table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_get_base_importers_table");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ImporterFunc*>*>*>("LitJson", "JsonMapper", "base_importers_table")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.IDictionary`2<System.Type,System.Collections.Generic.IDictionary`2<System.Type,LitJson.ImporterFunc>> base_importers_table
void LitJson::JsonMapper::_set_base_importers_table(::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ImporterFunc*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_set_base_importers_table");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonMapper", "base_importers_table", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.IDictionary`2<System.Type,System.Collections.Generic.IDictionary`2<System.Type,LitJson.ImporterFunc>> custom_importers_table
::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ImporterFunc*>*>* LitJson::JsonMapper::_get_custom_importers_table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_get_custom_importers_table");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ImporterFunc*>*>*>("LitJson", "JsonMapper", "custom_importers_table")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.IDictionary`2<System.Type,System.Collections.Generic.IDictionary`2<System.Type,LitJson.ImporterFunc>> custom_importers_table
void LitJson::JsonMapper::_set_custom_importers_table(::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ImporterFunc*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_set_custom_importers_table");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonMapper", "custom_importers_table", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.IDictionary`2<System.Type,LitJson.ArrayMetadata> array_metadata
::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ArrayMetadata>* LitJson::JsonMapper::_get_array_metadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_get_array_metadata");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ArrayMetadata>*>("LitJson", "JsonMapper", "array_metadata")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.IDictionary`2<System.Type,LitJson.ArrayMetadata> array_metadata
void LitJson::JsonMapper::_set_array_metadata(::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ArrayMetadata>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_set_array_metadata");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonMapper", "array_metadata", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object array_metadata_lock
::Il2CppObject* LitJson::JsonMapper::_get_array_metadata_lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_get_array_metadata_lock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("LitJson", "JsonMapper", "array_metadata_lock"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object array_metadata_lock
void LitJson::JsonMapper::_set_array_metadata_lock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_set_array_metadata_lock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonMapper", "array_metadata_lock", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.IDictionary`2<System.Type,System.Collections.Generic.IDictionary`2<System.Type,System.Reflection.MethodInfo>> conv_ops
::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Reflection::MethodInfo*>*>* LitJson::JsonMapper::_get_conv_ops() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_get_conv_ops");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Reflection::MethodInfo*>*>*>("LitJson", "JsonMapper", "conv_ops")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.IDictionary`2<System.Type,System.Collections.Generic.IDictionary`2<System.Type,System.Reflection.MethodInfo>> conv_ops
void LitJson::JsonMapper::_set_conv_ops(::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Reflection::MethodInfo*>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_set_conv_ops");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonMapper", "conv_ops", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object conv_ops_lock
::Il2CppObject* LitJson::JsonMapper::_get_conv_ops_lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_get_conv_ops_lock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("LitJson", "JsonMapper", "conv_ops_lock"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object conv_ops_lock
void LitJson::JsonMapper::_set_conv_ops_lock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_set_conv_ops_lock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonMapper", "conv_ops_lock", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.IDictionary`2<System.Type,LitJson.ObjectMetadata> object_metadata
::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ObjectMetadata>* LitJson::JsonMapper::_get_object_metadata() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_get_object_metadata");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ObjectMetadata>*>("LitJson", "JsonMapper", "object_metadata")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.IDictionary`2<System.Type,LitJson.ObjectMetadata> object_metadata
void LitJson::JsonMapper::_set_object_metadata(::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ObjectMetadata>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_set_object_metadata");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonMapper", "object_metadata", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object object_metadata_lock
::Il2CppObject* LitJson::JsonMapper::_get_object_metadata_lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_get_object_metadata_lock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("LitJson", "JsonMapper", "object_metadata_lock"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object object_metadata_lock
void LitJson::JsonMapper::_set_object_metadata_lock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_set_object_metadata_lock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonMapper", "object_metadata_lock", value));
}
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.IDictionary`2<System.Type,System.Collections.Generic.IList`1<LitJson.PropertyMetadata>> type_properties
::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IList_1<::LitJson::PropertyMetadata>*>* LitJson::JsonMapper::_get_type_properties() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_get_type_properties");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IList_1<::LitJson::PropertyMetadata>*>*>("LitJson", "JsonMapper", "type_properties")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.IDictionary`2<System.Type,System.Collections.Generic.IList`1<LitJson.PropertyMetadata>> type_properties
void LitJson::JsonMapper::_set_type_properties(::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IList_1<::LitJson::PropertyMetadata>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_set_type_properties");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonMapper", "type_properties", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object type_properties_lock
::Il2CppObject* LitJson::JsonMapper::_get_type_properties_lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_get_type_properties_lock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("LitJson", "JsonMapper", "type_properties_lock"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object type_properties_lock
void LitJson::JsonMapper::_set_type_properties_lock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_set_type_properties_lock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonMapper", "type_properties_lock", value));
}
// Autogenerated static field getter
// Get static field: static private LitJson.JsonWriter static_writer
::LitJson::JsonWriter* LitJson::JsonMapper::_get_static_writer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_get_static_writer");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::JsonWriter*>("LitJson", "JsonMapper", "static_writer"));
}
// Autogenerated static field setter
// Set static field: static private LitJson.JsonWriter static_writer
void LitJson::JsonMapper::_set_static_writer(::LitJson::JsonWriter* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_set_static_writer");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonMapper", "static_writer", value));
}
// Autogenerated static field getter
// Get static field: static private readonly System.Object static_writer_lock
::Il2CppObject* LitJson::JsonMapper::_get_static_writer_lock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_get_static_writer_lock");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::Il2CppObject*>("LitJson", "JsonMapper", "static_writer_lock"));
}
// Autogenerated static field setter
// Set static field: static private readonly System.Object static_writer_lock
void LitJson::JsonMapper::_set_static_writer_lock(::Il2CppObject* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::_set_static_writer_lock");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonMapper", "static_writer_lock", value));
}
// Autogenerated method: LitJson.JsonMapper..cctor
void LitJson::JsonMapper::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LitJson.JsonMapper.AddArrayMetadata
void LitJson::JsonMapper::AddArrayMetadata(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::AddArrayMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "AddArrayMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: LitJson.JsonMapper.AddObjectMetadata
void LitJson::JsonMapper::AddObjectMetadata(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::AddObjectMetadata");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "AddObjectMetadata", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: LitJson.JsonMapper.AddTypeProperties
void LitJson::JsonMapper::AddTypeProperties(::System::Type* type) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::AddTypeProperties");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "AddTypeProperties", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(type)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, type);
}
// Autogenerated method: LitJson.JsonMapper.GetConvOp
::System::Reflection::MethodInfo* LitJson::JsonMapper::GetConvOp(::System::Type* t1, ::System::Type* t2) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::GetConvOp");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "GetConvOp", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(t1), ::il2cpp_utils::ExtractType(t2)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Reflection::MethodInfo*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, t1, t2);
}
// Autogenerated method: LitJson.JsonMapper.ReadValue
::Il2CppObject* LitJson::JsonMapper::ReadValue(::System::Type* inst_type, ::LitJson::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::ReadValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "ReadValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(inst_type), ::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, inst_type, reader);
}
// Autogenerated method: LitJson.JsonMapper.ReadValue
::LitJson::IJsonWrapper* LitJson::JsonMapper::ReadValue(::LitJson::WrapperFactory* factory, ::LitJson::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::ReadValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "ReadValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(factory), ::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::LitJson::IJsonWrapper*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, factory, reader);
}
// Autogenerated method: LitJson.JsonMapper.RegisterBaseExporters
void LitJson::JsonMapper::RegisterBaseExporters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::RegisterBaseExporters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "RegisterBaseExporters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LitJson.JsonMapper.RegisterBaseImporters
void LitJson::JsonMapper::RegisterBaseImporters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::RegisterBaseImporters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "RegisterBaseImporters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LitJson.JsonMapper.RegisterImporter
void LitJson::JsonMapper::RegisterImporter(::System::Collections::Generic::IDictionary_2<::System::Type*, ::System::Collections::Generic::IDictionary_2<::System::Type*, ::LitJson::ImporterFunc*>*>* table, ::System::Type* json_type, ::System::Type* value_type, ::LitJson::ImporterFunc* importer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::RegisterImporter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "RegisterImporter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(table), ::il2cpp_utils::ExtractType(json_type), ::il2cpp_utils::ExtractType(value_type), ::il2cpp_utils::ExtractType(importer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, table, json_type, value_type, importer);
}
// Autogenerated method: LitJson.JsonMapper.WriteValue
void LitJson::JsonMapper::WriteValue(::Il2CppObject* obj, ::LitJson::JsonWriter* writer, bool writer_is_private, int depth) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::WriteValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "WriteValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(writer), ::il2cpp_utils::ExtractType(writer_is_private), ::il2cpp_utils::ExtractType(depth)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, writer, writer_is_private, depth);
}
// Autogenerated method: LitJson.JsonMapper.ToJson
::StringW LitJson::JsonMapper::ToJson(::Il2CppObject* obj) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::ToJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "ToJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj);
}
// Autogenerated method: LitJson.JsonMapper.ToJson
void LitJson::JsonMapper::ToJson(::Il2CppObject* obj, ::LitJson::JsonWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::ToJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "ToJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, obj, writer);
}
// Autogenerated method: LitJson.JsonMapper.ToObject
::LitJson::JsonData* LitJson::JsonMapper::ToObject(::LitJson::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::ToObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "ToObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::LitJson::JsonData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: LitJson.JsonMapper.ToObject
::LitJson::JsonData* LitJson::JsonMapper::ToObject(::System::IO::TextReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::ToObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "ToObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::LitJson::JsonData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, reader);
}
// Autogenerated method: LitJson.JsonMapper.ToObject
::LitJson::JsonData* LitJson::JsonMapper::ToObject(::StringW json) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::ToObject");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "ToObject", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(json)})));
  return ::il2cpp_utils::RunMethodRethrow<::LitJson::JsonData*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, json);
}
// Autogenerated method: LitJson.JsonMapper.ToWrapper
::LitJson::IJsonWrapper* LitJson::JsonMapper::ToWrapper(::LitJson::WrapperFactory* factory, ::LitJson::JsonReader* reader) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::ToWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "ToWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(factory), ::il2cpp_utils::ExtractType(reader)})));
  return ::il2cpp_utils::RunMethodRethrow<::LitJson::IJsonWrapper*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, factory, reader);
}
// Autogenerated method: LitJson.JsonMapper.ToWrapper
::LitJson::IJsonWrapper* LitJson::JsonMapper::ToWrapper(::LitJson::WrapperFactory* factory, ::StringW json) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::ToWrapper");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "ToWrapper", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(factory), ::il2cpp_utils::ExtractType(json)})));
  return ::il2cpp_utils::RunMethodRethrow<::LitJson::IJsonWrapper*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, factory, json);
}
// Autogenerated method: LitJson.JsonMapper.UnregisterExporters
void LitJson::JsonMapper::UnregisterExporters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::UnregisterExporters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "UnregisterExporters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LitJson.JsonMapper.UnregisterImporters
void LitJson::JsonMapper::UnregisterImporters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::UnregisterImporters");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper", "UnregisterImporters", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LitJson.JsonMapper/<>c
#include "LitJson/JsonMapper_--c.hpp"
// Including type: LitJson.ExporterFunc
#include "LitJson/ExporterFunc.hpp"
// Including type: LitJson.ImporterFunc
#include "LitJson/ImporterFunc.hpp"
// Including type: LitJson.WrapperFactory
#include "LitJson/WrapperFactory.hpp"
// Including type: LitJson.JsonWriter
#include "LitJson/JsonWriter.hpp"
// Including type: LitJson.IJsonWrapper
#include "LitJson/IJsonWrapper.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public readonly LitJson.JsonMapper/<>c <>9
::LitJson::JsonMapper::$$c* LitJson::JsonMapper::$$c::_get_$$9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_get_$$9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::JsonMapper::$$c*>("LitJson", "JsonMapper/<>c", "<>9")));
}
// Autogenerated static field setter
// Set static field: static public readonly LitJson.JsonMapper/<>c <>9
void LitJson::JsonMapper::$$c::_set_$$9(::LitJson::JsonMapper::$$c* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_set_$$9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "JsonMapper/<>c", "<>9", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ExporterFunc <>9__23_0
::LitJson::ExporterFunc* LitJson::JsonMapper::$$c::_get_$$9__23_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_get_$$9__23_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ExporterFunc*>("LitJson", "JsonMapper/<>c", "<>9__23_0")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ExporterFunc <>9__23_0
void LitJson::JsonMapper::$$c::_set_$$9__23_0(::LitJson::ExporterFunc* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_set_$$9__23_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "JsonMapper/<>c", "<>9__23_0", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ExporterFunc <>9__23_1
::LitJson::ExporterFunc* LitJson::JsonMapper::$$c::_get_$$9__23_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_get_$$9__23_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ExporterFunc*>("LitJson", "JsonMapper/<>c", "<>9__23_1")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ExporterFunc <>9__23_1
void LitJson::JsonMapper::$$c::_set_$$9__23_1(::LitJson::ExporterFunc* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_set_$$9__23_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "JsonMapper/<>c", "<>9__23_1", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ExporterFunc <>9__23_2
::LitJson::ExporterFunc* LitJson::JsonMapper::$$c::_get_$$9__23_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_get_$$9__23_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ExporterFunc*>("LitJson", "JsonMapper/<>c", "<>9__23_2")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ExporterFunc <>9__23_2
void LitJson::JsonMapper::$$c::_set_$$9__23_2(::LitJson::ExporterFunc* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_set_$$9__23_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "JsonMapper/<>c", "<>9__23_2", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ExporterFunc <>9__23_3
::LitJson::ExporterFunc* LitJson::JsonMapper::$$c::_get_$$9__23_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_get_$$9__23_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ExporterFunc*>("LitJson", "JsonMapper/<>c", "<>9__23_3")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ExporterFunc <>9__23_3
void LitJson::JsonMapper::$$c::_set_$$9__23_3(::LitJson::ExporterFunc* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_set_$$9__23_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "JsonMapper/<>c", "<>9__23_3", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ExporterFunc <>9__23_4
::LitJson::ExporterFunc* LitJson::JsonMapper::$$c::_get_$$9__23_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_get_$$9__23_4");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ExporterFunc*>("LitJson", "JsonMapper/<>c", "<>9__23_4")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ExporterFunc <>9__23_4
void LitJson::JsonMapper::$$c::_set_$$9__23_4(::LitJson::ExporterFunc* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_set_$$9__23_4");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "JsonMapper/<>c", "<>9__23_4", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ExporterFunc <>9__23_5
::LitJson::ExporterFunc* LitJson::JsonMapper::$$c::_get_$$9__23_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_get_$$9__23_5");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ExporterFunc*>("LitJson", "JsonMapper/<>c", "<>9__23_5")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ExporterFunc <>9__23_5
void LitJson::JsonMapper::$$c::_set_$$9__23_5(::LitJson::ExporterFunc* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_set_$$9__23_5");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "JsonMapper/<>c", "<>9__23_5", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ExporterFunc <>9__23_6
::LitJson::ExporterFunc* LitJson::JsonMapper::$$c::_get_$$9__23_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_get_$$9__23_6");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ExporterFunc*>("LitJson", "JsonMapper/<>c", "<>9__23_6")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ExporterFunc <>9__23_6
void LitJson::JsonMapper::$$c::_set_$$9__23_6(::LitJson::ExporterFunc* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_set_$$9__23_6");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "JsonMapper/<>c", "<>9__23_6", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ExporterFunc <>9__23_7
::LitJson::ExporterFunc* LitJson::JsonMapper::$$c::_get_$$9__23_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_get_$$9__23_7");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ExporterFunc*>("LitJson", "JsonMapper/<>c", "<>9__23_7")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ExporterFunc <>9__23_7
void LitJson::JsonMapper::$$c::_set_$$9__23_7(::LitJson::ExporterFunc* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_set_$$9__23_7");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "JsonMapper/<>c", "<>9__23_7", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ExporterFunc <>9__23_8
::LitJson::ExporterFunc* LitJson::JsonMapper::$$c::_get_$$9__23_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_get_$$9__23_8");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ExporterFunc*>("LitJson", "JsonMapper/<>c", "<>9__23_8")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ExporterFunc <>9__23_8
void LitJson::JsonMapper::$$c::_set_$$9__23_8(::LitJson::ExporterFunc* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_set_$$9__23_8");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "JsonMapper/<>c", "<>9__23_8", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ExporterFunc <>9__23_9
::LitJson::ExporterFunc* LitJson::JsonMapper::$$c::_get_$$9__23_9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_get_$$9__23_9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ExporterFunc*>("LitJson", "JsonMapper/<>c", "<>9__23_9")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ExporterFunc <>9__23_9
void LitJson::JsonMapper::$$c::_set_$$9__23_9(::LitJson::ExporterFunc* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_set_$$9__23_9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "JsonMapper/<>c", "<>9__23_9", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ImporterFunc <>9__24_0
::LitJson::ImporterFunc* LitJson::JsonMapper::$$c::_get_$$9__24_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_get_$$9__24_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ImporterFunc*>("LitJson", "JsonMapper/<>c", "<>9__24_0")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ImporterFunc <>9__24_0
void LitJson::JsonMapper::$$c::_set_$$9__24_0(::LitJson::ImporterFunc* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_set_$$9__24_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "JsonMapper/<>c", "<>9__24_0", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ImporterFunc <>9__24_1
::LitJson::ImporterFunc* LitJson::JsonMapper::$$c::_get_$$9__24_1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_get_$$9__24_1");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ImporterFunc*>("LitJson", "JsonMapper/<>c", "<>9__24_1")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ImporterFunc <>9__24_1
void LitJson::JsonMapper::$$c::_set_$$9__24_1(::LitJson::ImporterFunc* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_set_$$9__24_1");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "JsonMapper/<>c", "<>9__24_1", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ImporterFunc <>9__24_2
::LitJson::ImporterFunc* LitJson::JsonMapper::$$c::_get_$$9__24_2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_get_$$9__24_2");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ImporterFunc*>("LitJson", "JsonMapper/<>c", "<>9__24_2")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ImporterFunc <>9__24_2
void LitJson::JsonMapper::$$c::_set_$$9__24_2(::LitJson::ImporterFunc* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_set_$$9__24_2");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "JsonMapper/<>c", "<>9__24_2", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ImporterFunc <>9__24_3
::LitJson::ImporterFunc* LitJson::JsonMapper::$$c::_get_$$9__24_3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_get_$$9__24_3");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ImporterFunc*>("LitJson", "JsonMapper/<>c", "<>9__24_3")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ImporterFunc <>9__24_3
void LitJson::JsonMapper::$$c::_set_$$9__24_3(::LitJson::ImporterFunc* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_set_$$9__24_3");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "JsonMapper/<>c", "<>9__24_3", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ImporterFunc <>9__24_4
::LitJson::ImporterFunc* LitJson::JsonMapper::$$c::_get_$$9__24_4() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_get_$$9__24_4");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ImporterFunc*>("LitJson", "JsonMapper/<>c", "<>9__24_4")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ImporterFunc <>9__24_4
void LitJson::JsonMapper::$$c::_set_$$9__24_4(::LitJson::ImporterFunc* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_set_$$9__24_4");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "JsonMapper/<>c", "<>9__24_4", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ImporterFunc <>9__24_5
::LitJson::ImporterFunc* LitJson::JsonMapper::$$c::_get_$$9__24_5() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_get_$$9__24_5");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ImporterFunc*>("LitJson", "JsonMapper/<>c", "<>9__24_5")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ImporterFunc <>9__24_5
void LitJson::JsonMapper::$$c::_set_$$9__24_5(::LitJson::ImporterFunc* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_set_$$9__24_5");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "JsonMapper/<>c", "<>9__24_5", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ImporterFunc <>9__24_6
::LitJson::ImporterFunc* LitJson::JsonMapper::$$c::_get_$$9__24_6() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_get_$$9__24_6");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ImporterFunc*>("LitJson", "JsonMapper/<>c", "<>9__24_6")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ImporterFunc <>9__24_6
void LitJson::JsonMapper::$$c::_set_$$9__24_6(::LitJson::ImporterFunc* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_set_$$9__24_6");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "JsonMapper/<>c", "<>9__24_6", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ImporterFunc <>9__24_7
::LitJson::ImporterFunc* LitJson::JsonMapper::$$c::_get_$$9__24_7() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_get_$$9__24_7");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ImporterFunc*>("LitJson", "JsonMapper/<>c", "<>9__24_7")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ImporterFunc <>9__24_7
void LitJson::JsonMapper::$$c::_set_$$9__24_7(::LitJson::ImporterFunc* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_set_$$9__24_7");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "JsonMapper/<>c", "<>9__24_7", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ImporterFunc <>9__24_8
::LitJson::ImporterFunc* LitJson::JsonMapper::$$c::_get_$$9__24_8() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_get_$$9__24_8");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ImporterFunc*>("LitJson", "JsonMapper/<>c", "<>9__24_8")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ImporterFunc <>9__24_8
void LitJson::JsonMapper::$$c::_set_$$9__24_8(::LitJson::ImporterFunc* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_set_$$9__24_8");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "JsonMapper/<>c", "<>9__24_8", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ImporterFunc <>9__24_9
::LitJson::ImporterFunc* LitJson::JsonMapper::$$c::_get_$$9__24_9() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_get_$$9__24_9");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ImporterFunc*>("LitJson", "JsonMapper/<>c", "<>9__24_9")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ImporterFunc <>9__24_9
void LitJson::JsonMapper::$$c::_set_$$9__24_9(::LitJson::ImporterFunc* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_set_$$9__24_9");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "JsonMapper/<>c", "<>9__24_9", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ImporterFunc <>9__24_10
::LitJson::ImporterFunc* LitJson::JsonMapper::$$c::_get_$$9__24_10() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_get_$$9__24_10");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ImporterFunc*>("LitJson", "JsonMapper/<>c", "<>9__24_10")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ImporterFunc <>9__24_10
void LitJson::JsonMapper::$$c::_set_$$9__24_10(::LitJson::ImporterFunc* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_set_$$9__24_10");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "JsonMapper/<>c", "<>9__24_10", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ImporterFunc <>9__24_11
::LitJson::ImporterFunc* LitJson::JsonMapper::$$c::_get_$$9__24_11() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_get_$$9__24_11");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ImporterFunc*>("LitJson", "JsonMapper/<>c", "<>9__24_11")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ImporterFunc <>9__24_11
void LitJson::JsonMapper::$$c::_set_$$9__24_11(::LitJson::ImporterFunc* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_set_$$9__24_11");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "JsonMapper/<>c", "<>9__24_11", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ImporterFunc <>9__24_12
::LitJson::ImporterFunc* LitJson::JsonMapper::$$c::_get_$$9__24_12() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_get_$$9__24_12");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::ImporterFunc*>("LitJson", "JsonMapper/<>c", "<>9__24_12")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ImporterFunc <>9__24_12
void LitJson::JsonMapper::$$c::_set_$$9__24_12(::LitJson::ImporterFunc* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_set_$$9__24_12");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "JsonMapper/<>c", "<>9__24_12", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.WrapperFactory <>9__29_0
::LitJson::WrapperFactory* LitJson::JsonMapper::$$c::_get_$$9__29_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_get_$$9__29_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::WrapperFactory*>("LitJson", "JsonMapper/<>c", "<>9__29_0")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.WrapperFactory <>9__29_0
void LitJson::JsonMapper::$$c::_set_$$9__29_0(::LitJson::WrapperFactory* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_set_$$9__29_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "JsonMapper/<>c", "<>9__29_0", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.WrapperFactory <>9__30_0
::LitJson::WrapperFactory* LitJson::JsonMapper::$$c::_get_$$9__30_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_get_$$9__30_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::WrapperFactory*>("LitJson", "JsonMapper/<>c", "<>9__30_0")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.WrapperFactory <>9__30_0
void LitJson::JsonMapper::$$c::_set_$$9__30_0(::LitJson::WrapperFactory* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_set_$$9__30_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "JsonMapper/<>c", "<>9__30_0", value)));
}
// Autogenerated static field getter
// Get static field: static public LitJson.WrapperFactory <>9__31_0
::LitJson::WrapperFactory* LitJson::JsonMapper::$$c::_get_$$9__31_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_get_$$9__31_0");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::LitJson::WrapperFactory*>("LitJson", "JsonMapper/<>c", "<>9__31_0")));
}
// Autogenerated static field setter
// Set static field: static public LitJson.WrapperFactory <>9__31_0
void LitJson::JsonMapper::$$c::_set_$$9__31_0(::LitJson::WrapperFactory* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::_set_$$9__31_0");
  THROW_UNLESS((il2cpp_utils::SetFieldValue("LitJson", "JsonMapper/<>c", "<>9__31_0", value)));
}
// Autogenerated method: LitJson.JsonMapper/<>c..cctor
void LitJson::JsonMapper::$$c::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonMapper/<>c", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LitJson.JsonMapper/<>c.<RegisterBaseExporters>b__23_0
void LitJson::JsonMapper::$$c::$RegisterBaseExporters$b__23_0(::Il2CppObject* obj, ::LitJson::JsonWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::<RegisterBaseExporters>b__23_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterBaseExporters>b__23_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, writer);
}
// Autogenerated method: LitJson.JsonMapper/<>c.<RegisterBaseExporters>b__23_1
void LitJson::JsonMapper::$$c::$RegisterBaseExporters$b__23_1(::Il2CppObject* obj, ::LitJson::JsonWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::<RegisterBaseExporters>b__23_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterBaseExporters>b__23_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, writer);
}
// Autogenerated method: LitJson.JsonMapper/<>c.<RegisterBaseExporters>b__23_2
void LitJson::JsonMapper::$$c::$RegisterBaseExporters$b__23_2(::Il2CppObject* obj, ::LitJson::JsonWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::<RegisterBaseExporters>b__23_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterBaseExporters>b__23_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, writer);
}
// Autogenerated method: LitJson.JsonMapper/<>c.<RegisterBaseExporters>b__23_3
void LitJson::JsonMapper::$$c::$RegisterBaseExporters$b__23_3(::Il2CppObject* obj, ::LitJson::JsonWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::<RegisterBaseExporters>b__23_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterBaseExporters>b__23_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, writer);
}
// Autogenerated method: LitJson.JsonMapper/<>c.<RegisterBaseExporters>b__23_4
void LitJson::JsonMapper::$$c::$RegisterBaseExporters$b__23_4(::Il2CppObject* obj, ::LitJson::JsonWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::<RegisterBaseExporters>b__23_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterBaseExporters>b__23_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, writer);
}
// Autogenerated method: LitJson.JsonMapper/<>c.<RegisterBaseExporters>b__23_5
void LitJson::JsonMapper::$$c::$RegisterBaseExporters$b__23_5(::Il2CppObject* obj, ::LitJson::JsonWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::<RegisterBaseExporters>b__23_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterBaseExporters>b__23_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, writer);
}
// Autogenerated method: LitJson.JsonMapper/<>c.<RegisterBaseExporters>b__23_6
void LitJson::JsonMapper::$$c::$RegisterBaseExporters$b__23_6(::Il2CppObject* obj, ::LitJson::JsonWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::<RegisterBaseExporters>b__23_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterBaseExporters>b__23_6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, writer);
}
// Autogenerated method: LitJson.JsonMapper/<>c.<RegisterBaseExporters>b__23_7
void LitJson::JsonMapper::$$c::$RegisterBaseExporters$b__23_7(::Il2CppObject* obj, ::LitJson::JsonWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::<RegisterBaseExporters>b__23_7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterBaseExporters>b__23_7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, writer);
}
// Autogenerated method: LitJson.JsonMapper/<>c.<RegisterBaseExporters>b__23_8
void LitJson::JsonMapper::$$c::$RegisterBaseExporters$b__23_8(::Il2CppObject* obj, ::LitJson::JsonWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::<RegisterBaseExporters>b__23_8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterBaseExporters>b__23_8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, writer);
}
// Autogenerated method: LitJson.JsonMapper/<>c.<RegisterBaseExporters>b__23_9
void LitJson::JsonMapper::$$c::$RegisterBaseExporters$b__23_9(::Il2CppObject* obj, ::LitJson::JsonWriter* writer) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::<RegisterBaseExporters>b__23_9");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterBaseExporters>b__23_9", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(obj), ::il2cpp_utils::ExtractType(writer)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, obj, writer);
}
// Autogenerated method: LitJson.JsonMapper/<>c.<RegisterBaseImporters>b__24_0
::Il2CppObject* LitJson::JsonMapper::$$c::$RegisterBaseImporters$b__24_0(::Il2CppObject* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::<RegisterBaseImporters>b__24_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterBaseImporters>b__24_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, input);
}
// Autogenerated method: LitJson.JsonMapper/<>c.<RegisterBaseImporters>b__24_1
::Il2CppObject* LitJson::JsonMapper::$$c::$RegisterBaseImporters$b__24_1(::Il2CppObject* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::<RegisterBaseImporters>b__24_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterBaseImporters>b__24_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, input);
}
// Autogenerated method: LitJson.JsonMapper/<>c.<RegisterBaseImporters>b__24_2
::Il2CppObject* LitJson::JsonMapper::$$c::$RegisterBaseImporters$b__24_2(::Il2CppObject* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::<RegisterBaseImporters>b__24_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterBaseImporters>b__24_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, input);
}
// Autogenerated method: LitJson.JsonMapper/<>c.<RegisterBaseImporters>b__24_3
::Il2CppObject* LitJson::JsonMapper::$$c::$RegisterBaseImporters$b__24_3(::Il2CppObject* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::<RegisterBaseImporters>b__24_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterBaseImporters>b__24_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, input);
}
// Autogenerated method: LitJson.JsonMapper/<>c.<RegisterBaseImporters>b__24_4
::Il2CppObject* LitJson::JsonMapper::$$c::$RegisterBaseImporters$b__24_4(::Il2CppObject* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::<RegisterBaseImporters>b__24_4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterBaseImporters>b__24_4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, input);
}
// Autogenerated method: LitJson.JsonMapper/<>c.<RegisterBaseImporters>b__24_5
::Il2CppObject* LitJson::JsonMapper::$$c::$RegisterBaseImporters$b__24_5(::Il2CppObject* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::<RegisterBaseImporters>b__24_5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterBaseImporters>b__24_5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, input);
}
// Autogenerated method: LitJson.JsonMapper/<>c.<RegisterBaseImporters>b__24_6
::Il2CppObject* LitJson::JsonMapper::$$c::$RegisterBaseImporters$b__24_6(::Il2CppObject* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::<RegisterBaseImporters>b__24_6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterBaseImporters>b__24_6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, input);
}
// Autogenerated method: LitJson.JsonMapper/<>c.<RegisterBaseImporters>b__24_7
::Il2CppObject* LitJson::JsonMapper::$$c::$RegisterBaseImporters$b__24_7(::Il2CppObject* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::<RegisterBaseImporters>b__24_7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterBaseImporters>b__24_7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, input);
}
// Autogenerated method: LitJson.JsonMapper/<>c.<RegisterBaseImporters>b__24_8
::Il2CppObject* LitJson::JsonMapper::$$c::$RegisterBaseImporters$b__24_8(::Il2CppObject* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::<RegisterBaseImporters>b__24_8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterBaseImporters>b__24_8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, input);
}
// Autogenerated method: LitJson.JsonMapper/<>c.<RegisterBaseImporters>b__24_9
::Il2CppObject* LitJson::JsonMapper::$$c::$RegisterBaseImporters$b__24_9(::Il2CppObject* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::<RegisterBaseImporters>b__24_9");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterBaseImporters>b__24_9", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, input);
}
// Autogenerated method: LitJson.JsonMapper/<>c.<RegisterBaseImporters>b__24_10
::Il2CppObject* LitJson::JsonMapper::$$c::$RegisterBaseImporters$b__24_10(::Il2CppObject* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::<RegisterBaseImporters>b__24_10");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterBaseImporters>b__24_10", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, input);
}
// Autogenerated method: LitJson.JsonMapper/<>c.<RegisterBaseImporters>b__24_11
::Il2CppObject* LitJson::JsonMapper::$$c::$RegisterBaseImporters$b__24_11(::Il2CppObject* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::<RegisterBaseImporters>b__24_11");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterBaseImporters>b__24_11", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, input);
}
// Autogenerated method: LitJson.JsonMapper/<>c.<RegisterBaseImporters>b__24_12
::Il2CppObject* LitJson::JsonMapper::$$c::$RegisterBaseImporters$b__24_12(::Il2CppObject* input) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::<RegisterBaseImporters>b__24_12");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<RegisterBaseImporters>b__24_12", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(input)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method, input);
}
// Autogenerated method: LitJson.JsonMapper/<>c.<ToObject>b__29_0
::LitJson::IJsonWrapper* LitJson::JsonMapper::$$c::$ToObject$b__29_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::<ToObject>b__29_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ToObject>b__29_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LitJson::IJsonWrapper*, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonMapper/<>c.<ToObject>b__30_0
::LitJson::IJsonWrapper* LitJson::JsonMapper::$$c::$ToObject$b__30_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::<ToObject>b__30_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ToObject>b__30_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LitJson::IJsonWrapper*, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonMapper/<>c.<ToObject>b__31_0
::LitJson::IJsonWrapper* LitJson::JsonMapper::$$c::$ToObject$b__31_0() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonMapper::$$c::<ToObject>b__31_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ToObject>b__31_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LitJson::IJsonWrapper*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LitJson.JsonToken
#include "LitJson/JsonToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LitJson.JsonToken None
::LitJson::JsonToken LitJson::JsonToken::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonToken::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::JsonToken>("LitJson", "JsonToken", "None"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.JsonToken None
void LitJson::JsonToken::_set_None(::LitJson::JsonToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonToken::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonToken", "None", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.JsonToken ObjectStart
::LitJson::JsonToken LitJson::JsonToken::_get_ObjectStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonToken::_get_ObjectStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::JsonToken>("LitJson", "JsonToken", "ObjectStart"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.JsonToken ObjectStart
void LitJson::JsonToken::_set_ObjectStart(::LitJson::JsonToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonToken::_set_ObjectStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonToken", "ObjectStart", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.JsonToken PropertyName
::LitJson::JsonToken LitJson::JsonToken::_get_PropertyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonToken::_get_PropertyName");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::JsonToken>("LitJson", "JsonToken", "PropertyName"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.JsonToken PropertyName
void LitJson::JsonToken::_set_PropertyName(::LitJson::JsonToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonToken::_set_PropertyName");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonToken", "PropertyName", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.JsonToken ObjectEnd
::LitJson::JsonToken LitJson::JsonToken::_get_ObjectEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonToken::_get_ObjectEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::JsonToken>("LitJson", "JsonToken", "ObjectEnd"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.JsonToken ObjectEnd
void LitJson::JsonToken::_set_ObjectEnd(::LitJson::JsonToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonToken::_set_ObjectEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonToken", "ObjectEnd", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.JsonToken ArrayStart
::LitJson::JsonToken LitJson::JsonToken::_get_ArrayStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonToken::_get_ArrayStart");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::JsonToken>("LitJson", "JsonToken", "ArrayStart"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.JsonToken ArrayStart
void LitJson::JsonToken::_set_ArrayStart(::LitJson::JsonToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonToken::_set_ArrayStart");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonToken", "ArrayStart", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.JsonToken ArrayEnd
::LitJson::JsonToken LitJson::JsonToken::_get_ArrayEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonToken::_get_ArrayEnd");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::JsonToken>("LitJson", "JsonToken", "ArrayEnd"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.JsonToken ArrayEnd
void LitJson::JsonToken::_set_ArrayEnd(::LitJson::JsonToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonToken::_set_ArrayEnd");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonToken", "ArrayEnd", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.JsonToken Int
::LitJson::JsonToken LitJson::JsonToken::_get_Int() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonToken::_get_Int");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::JsonToken>("LitJson", "JsonToken", "Int"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.JsonToken Int
void LitJson::JsonToken::_set_Int(::LitJson::JsonToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonToken::_set_Int");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonToken", "Int", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.JsonToken Long
::LitJson::JsonToken LitJson::JsonToken::_get_Long() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonToken::_get_Long");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::JsonToken>("LitJson", "JsonToken", "Long"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.JsonToken Long
void LitJson::JsonToken::_set_Long(::LitJson::JsonToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonToken::_set_Long");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonToken", "Long", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.JsonToken Double
::LitJson::JsonToken LitJson::JsonToken::_get_Double() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonToken::_get_Double");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::JsonToken>("LitJson", "JsonToken", "Double"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.JsonToken Double
void LitJson::JsonToken::_set_Double(::LitJson::JsonToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonToken::_set_Double");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonToken", "Double", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.JsonToken String
::LitJson::JsonToken LitJson::JsonToken::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonToken::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::JsonToken>("LitJson", "JsonToken", "String"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.JsonToken String
void LitJson::JsonToken::_set_String(::LitJson::JsonToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonToken::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonToken", "String", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.JsonToken Boolean
::LitJson::JsonToken LitJson::JsonToken::_get_Boolean() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonToken::_get_Boolean");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::JsonToken>("LitJson", "JsonToken", "Boolean"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.JsonToken Boolean
void LitJson::JsonToken::_set_Boolean(::LitJson::JsonToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonToken::_set_Boolean");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonToken", "Boolean", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.JsonToken Null
::LitJson::JsonToken LitJson::JsonToken::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonToken::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::JsonToken>("LitJson", "JsonToken", "Null"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.JsonToken Null
void LitJson::JsonToken::_set_Null(::LitJson::JsonToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonToken::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonToken", "Null", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& LitJson::JsonToken::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonToken::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LitJson.JsonReader
#include "LitJson/JsonReader.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: LitJson.Lexer
#include "LitJson/Lexer.hpp"
// Including type: System.IO.TextReader
#include "System/IO/TextReader.hpp"
// Including type: System.Collections.Generic.IDictionary`2
#include "System/Collections/Generic/IDictionary_2.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Collections.Generic.IDictionary`2<System.Int32,System.Collections.Generic.IDictionary`2<System.Int32,System.Int32[]>> parse_table
::System::Collections::Generic::IDictionary_2<int, ::System::Collections::Generic::IDictionary_2<int, ::ArrayW<int>>*>* LitJson::JsonReader::_get_parse_table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::_get_parse_table");
  return THROW_UNLESS((il2cpp_utils::GetFieldValue<::System::Collections::Generic::IDictionary_2<int, ::System::Collections::Generic::IDictionary_2<int, ::ArrayW<int>>*>*>("LitJson", "JsonReader", "parse_table")));
}
// Autogenerated static field setter
// Set static field: static private System.Collections.Generic.IDictionary`2<System.Int32,System.Collections.Generic.IDictionary`2<System.Int32,System.Int32[]>> parse_table
void LitJson::JsonReader::_set_parse_table(::System::Collections::Generic::IDictionary_2<int, ::System::Collections::Generic::IDictionary_2<int, ::ArrayW<int>>*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::_set_parse_table");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonReader", "parse_table", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Stack`1<System.Int32> automaton_stack
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Stack_1<int>*& LitJson::JsonReader::dyn_automaton_stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::dyn_automaton_stack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "automaton_stack"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Stack_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 current_input
[[deprecated("Use field access instead!")]] int& LitJson::JsonReader::dyn_current_input() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::dyn_current_input");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "current_input"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 current_symbol
[[deprecated("Use field access instead!")]] int& LitJson::JsonReader::dyn_current_symbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::dyn_current_symbol");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "current_symbol"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean end_of_json
[[deprecated("Use field access instead!")]] bool& LitJson::JsonReader::dyn_end_of_json() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::dyn_end_of_json");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "end_of_json"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean end_of_input
[[deprecated("Use field access instead!")]] bool& LitJson::JsonReader::dyn_end_of_input() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::dyn_end_of_input");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "end_of_input"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LitJson.Lexer lexer
[[deprecated("Use field access instead!")]] ::LitJson::Lexer*& LitJson::JsonReader::dyn_lexer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::dyn_lexer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lexer"))->offset;
  return *reinterpret_cast<::LitJson::Lexer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean parser_in_string
[[deprecated("Use field access instead!")]] bool& LitJson::JsonReader::dyn_parser_in_string() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::dyn_parser_in_string");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parser_in_string"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean parser_return
[[deprecated("Use field access instead!")]] bool& LitJson::JsonReader::dyn_parser_return() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::dyn_parser_return");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "parser_return"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean read_started
[[deprecated("Use field access instead!")]] bool& LitJson::JsonReader::dyn_read_started() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::dyn_read_started");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "read_started"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.TextReader reader
[[deprecated("Use field access instead!")]] ::System::IO::TextReader*& LitJson::JsonReader::dyn_reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::dyn_reader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reader"))->offset;
  return *reinterpret_cast<::System::IO::TextReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean reader_is_owned
[[deprecated("Use field access instead!")]] bool& LitJson::JsonReader::dyn_reader_is_owned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::dyn_reader_is_owned");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reader_is_owned"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object token_value
[[deprecated("Use field access instead!")]] ::Il2CppObject*& LitJson::JsonReader::dyn_token_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::dyn_token_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token_value"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LitJson.JsonToken token
[[deprecated("Use field access instead!")]] ::LitJson::JsonToken& LitJson::JsonReader::dyn_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::dyn_token");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token"))->offset;
  return *reinterpret_cast<::LitJson::JsonToken*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LitJson.JsonReader.get_AllowComments
bool LitJson::JsonReader::get_AllowComments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::get_AllowComments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowComments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonReader.set_AllowComments
void LitJson::JsonReader::set_AllowComments(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::set_AllowComments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AllowComments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LitJson.JsonReader.get_AllowSingleQuotedStrings
bool LitJson::JsonReader::get_AllowSingleQuotedStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::get_AllowSingleQuotedStrings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowSingleQuotedStrings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonReader.set_AllowSingleQuotedStrings
void LitJson::JsonReader::set_AllowSingleQuotedStrings(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::set_AllowSingleQuotedStrings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AllowSingleQuotedStrings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LitJson.JsonReader.get_EndOfInput
bool LitJson::JsonReader::get_EndOfInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::get_EndOfInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndOfInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonReader.get_EndOfJson
bool LitJson::JsonReader::get_EndOfJson() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::get_EndOfJson");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndOfJson", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonReader.get_Token
::LitJson::JsonToken LitJson::JsonReader::get_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::get_Token");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Token", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::LitJson::JsonToken, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonReader.get_Value
::Il2CppObject* LitJson::JsonReader::get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::get_Value");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Value", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonReader..cctor
void LitJson::JsonReader::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonReader", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LitJson.JsonReader.PopulateParseTable
void LitJson::JsonReader::PopulateParseTable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::PopulateParseTable");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonReader", "PopulateParseTable", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LitJson.JsonReader.TableAddCol
void LitJson::JsonReader::TableAddCol(::LitJson::ParserToken row, int col, ::ArrayW<int> symbols) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::TableAddCol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonReader", "TableAddCol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(row), ::il2cpp_utils::ExtractType(col), ::il2cpp_utils::ExtractType(symbols)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, row, col, symbols);
}
// Autogenerated method: LitJson.JsonReader.TableAddRow
void LitJson::JsonReader::TableAddRow(::LitJson::ParserToken rule) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::TableAddRow");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonReader", "TableAddRow", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(rule)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, rule);
}
// Autogenerated method: LitJson.JsonReader.ProcessNumber
void LitJson::JsonReader::ProcessNumber(::StringW number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::ProcessNumber");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessNumber", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, number);
}
// Autogenerated method: LitJson.JsonReader.ProcessSymbol
void LitJson::JsonReader::ProcessSymbol() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::ProcessSymbol");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessSymbol", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonReader.ReadToken
bool LitJson::JsonReader::ReadToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::ReadToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ReadToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonReader.Close
void LitJson::JsonReader::Close() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::Close");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Close", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonReader.Read
bool LitJson::JsonReader::Read() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonReader::Read");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Read", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LitJson.Condition
#include "LitJson/Condition.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LitJson.Condition InArray
::LitJson::Condition LitJson::Condition::_get_InArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Condition::_get_InArray");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::Condition>("LitJson", "Condition", "InArray"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.Condition InArray
void LitJson::Condition::_set_InArray(::LitJson::Condition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Condition::_set_InArray");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "Condition", "InArray", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.Condition InObject
::LitJson::Condition LitJson::Condition::_get_InObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Condition::_get_InObject");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::Condition>("LitJson", "Condition", "InObject"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.Condition InObject
void LitJson::Condition::_set_InObject(::LitJson::Condition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Condition::_set_InObject");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "Condition", "InObject", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.Condition NotAProperty
::LitJson::Condition LitJson::Condition::_get_NotAProperty() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Condition::_get_NotAProperty");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::Condition>("LitJson", "Condition", "NotAProperty"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.Condition NotAProperty
void LitJson::Condition::_set_NotAProperty(::LitJson::Condition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Condition::_set_NotAProperty");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "Condition", "NotAProperty", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.Condition Property
::LitJson::Condition LitJson::Condition::_get_Property() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Condition::_get_Property");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::Condition>("LitJson", "Condition", "Property"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.Condition Property
void LitJson::Condition::_set_Property(::LitJson::Condition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Condition::_set_Property");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "Condition", "Property", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.Condition Value
::LitJson::Condition LitJson::Condition::_get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Condition::_get_Value");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::Condition>("LitJson", "Condition", "Value"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.Condition Value
void LitJson::Condition::_set_Value(::LitJson::Condition value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Condition::_set_Value");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "Condition", "Value", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& LitJson::Condition::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Condition::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LitJson.WriterContext
#include "LitJson/WriterContext.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Int32 Count
[[deprecated("Use field access instead!")]] int& LitJson::WriterContext::dyn_Count() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::WriterContext::dyn_Count");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Count"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean InArray
[[deprecated("Use field access instead!")]] bool& LitJson::WriterContext::dyn_InArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::WriterContext::dyn_InArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InArray"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean InObject
[[deprecated("Use field access instead!")]] bool& LitJson::WriterContext::dyn_InObject() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::WriterContext::dyn_InObject");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "InObject"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean ExpectingValue
[[deprecated("Use field access instead!")]] bool& LitJson::WriterContext::dyn_ExpectingValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::WriterContext::dyn_ExpectingValue");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ExpectingValue"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 Padding
[[deprecated("Use field access instead!")]] int& LitJson::WriterContext::dyn_Padding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::WriterContext::dyn_Padding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Padding"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LitJson.JsonWriter
#include "LitJson/JsonWriter.hpp"
// Including type: LitJson.WriterContext
#include "LitJson/WriterContext.hpp"
// Including type: System.Collections.Generic.Stack`1
#include "System/Collections/Generic/Stack_1.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
// Including type: System.IO.TextWriter
#include "System/IO/TextWriter.hpp"
// Including type: System.Globalization.NumberFormatInfo
#include "System/Globalization/NumberFormatInfo.hpp"
// Including type: LitJson.Condition
#include "LitJson/Condition.hpp"
// Including type: System.Decimal
#include "System/Decimal.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Globalization.NumberFormatInfo number_format
::System::Globalization::NumberFormatInfo* LitJson::JsonWriter::_get_number_format() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::_get_number_format");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::System::Globalization::NumberFormatInfo*>("LitJson", "JsonWriter", "number_format"));
}
// Autogenerated static field setter
// Set static field: static private System.Globalization.NumberFormatInfo number_format
void LitJson::JsonWriter::_set_number_format(::System::Globalization::NumberFormatInfo* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::_set_number_format");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "JsonWriter", "number_format", value));
}
// Autogenerated instance field getter
// Get instance field: private LitJson.WriterContext context
[[deprecated("Use field access instead!")]] ::LitJson::WriterContext*& LitJson::JsonWriter::dyn_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::dyn_context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "context"))->offset;
  return *reinterpret_cast<::LitJson::WriterContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Stack`1<LitJson.WriterContext> ctx_stack
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Stack_1<::LitJson::WriterContext*>*& LitJson::JsonWriter::dyn_ctx_stack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::dyn_ctx_stack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "ctx_stack"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Stack_1<::LitJson::WriterContext*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean has_reached_end
[[deprecated("Use field access instead!")]] bool& LitJson::JsonWriter::dyn_has_reached_end() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::dyn_has_reached_end");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "has_reached_end"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Char[] hex_seq
[[deprecated("Use field access instead!")]] ::ArrayW<::Il2CppChar>& LitJson::JsonWriter::dyn_hex_seq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::dyn_hex_seq");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hex_seq"))->offset;
  return *reinterpret_cast<::ArrayW<::Il2CppChar>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 indentation
[[deprecated("Use field access instead!")]] int& LitJson::JsonWriter::dyn_indentation() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::dyn_indentation");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indentation"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 indent_value
[[deprecated("Use field access instead!")]] int& LitJson::JsonWriter::dyn_indent_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::dyn_indent_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "indent_value"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder inst_string_builder
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& LitJson::JsonWriter::dyn_inst_string_builder() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::dyn_inst_string_builder");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inst_string_builder"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean pretty_print
[[deprecated("Use field access instead!")]] bool& LitJson::JsonWriter::dyn_pretty_print() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::dyn_pretty_print");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "pretty_print"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean validate
[[deprecated("Use field access instead!")]] bool& LitJson::JsonWriter::dyn_validate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::dyn_validate");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "validate"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.TextWriter writer
[[deprecated("Use field access instead!")]] ::System::IO::TextWriter*& LitJson::JsonWriter::dyn_writer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::dyn_writer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "writer"))->offset;
  return *reinterpret_cast<::System::IO::TextWriter**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LitJson.JsonWriter.get_IndentValue
int LitJson::JsonWriter::get_IndentValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::get_IndentValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_IndentValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonWriter.set_IndentValue
void LitJson::JsonWriter::set_IndentValue(int value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::set_IndentValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_IndentValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LitJson.JsonWriter.get_PrettyPrint
bool LitJson::JsonWriter::get_PrettyPrint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::get_PrettyPrint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_PrettyPrint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonWriter.set_PrettyPrint
void LitJson::JsonWriter::set_PrettyPrint(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::set_PrettyPrint");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_PrettyPrint", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LitJson.JsonWriter.get_TextWriter
::System::IO::TextWriter* LitJson::JsonWriter::get_TextWriter() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::get_TextWriter");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_TextWriter", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::IO::TextWriter*, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonWriter.get_Validate
bool LitJson::JsonWriter::get_Validate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::get_Validate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonWriter.set_Validate
void LitJson::JsonWriter::set_Validate(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::set_Validate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_Validate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LitJson.JsonWriter..cctor
void LitJson::JsonWriter::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonWriter", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LitJson.JsonWriter.DoValidation
void LitJson::JsonWriter::DoValidation(::LitJson::Condition cond) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::DoValidation");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "DoValidation", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cond)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cond);
}
// Autogenerated method: LitJson.JsonWriter.Init
void LitJson::JsonWriter::Init() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::Init");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Init", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonWriter.IntToHex
void LitJson::JsonWriter::IntToHex(int n, ::ArrayW<::Il2CppChar> hex) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::IntToHex");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "JsonWriter", "IntToHex", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(n), ::il2cpp_utils::ExtractType(hex)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, n, hex);
}
// Autogenerated method: LitJson.JsonWriter.Indent
void LitJson::JsonWriter::Indent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::Indent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Indent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonWriter.Put
void LitJson::JsonWriter::Put(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::Put");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Put", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, str);
}
// Autogenerated method: LitJson.JsonWriter.PutNewline
void LitJson::JsonWriter::PutNewline() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::PutNewline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutNewline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonWriter.PutNewline
void LitJson::JsonWriter::PutNewline(bool add_comma) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::PutNewline");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutNewline", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(add_comma)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, add_comma);
}
// Autogenerated method: LitJson.JsonWriter.PutString
void LitJson::JsonWriter::PutString(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::PutString");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PutString", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, str);
}
// Autogenerated method: LitJson.JsonWriter.Unindent
void LitJson::JsonWriter::Unindent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::Unindent");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Unindent", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonWriter.Reset
void LitJson::JsonWriter::Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::Reset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Reset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonWriter.Write
void LitJson::JsonWriter::Write(bool boolean) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(boolean)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, boolean);
}
// Autogenerated method: LitJson.JsonWriter.Write
void LitJson::JsonWriter::Write(::System::Decimal number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, number);
}
// Autogenerated method: LitJson.JsonWriter.Write
void LitJson::JsonWriter::Write(double number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, number);
}
// Autogenerated method: LitJson.JsonWriter.Write
void LitJson::JsonWriter::Write(int number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, number);
}
// Autogenerated method: LitJson.JsonWriter.Write
void LitJson::JsonWriter::Write(int64_t number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, number);
}
// Autogenerated method: LitJson.JsonWriter.Write
void LitJson::JsonWriter::Write(::StringW str) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(str)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, str);
}
// Autogenerated method: LitJson.JsonWriter.Write
void LitJson::JsonWriter::Write(uint64_t number) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::Write");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Write", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(number)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, number);
}
// Autogenerated method: LitJson.JsonWriter.WriteArrayEnd
void LitJson::JsonWriter::WriteArrayEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::WriteArrayEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteArrayEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonWriter.WriteArrayStart
void LitJson::JsonWriter::WriteArrayStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::WriteArrayStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteArrayStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonWriter.WriteObjectEnd
void LitJson::JsonWriter::WriteObjectEnd() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::WriteObjectEnd");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteObjectEnd", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonWriter.WriteObjectStart
void LitJson::JsonWriter::WriteObjectStart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::WriteObjectStart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WriteObjectStart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.JsonWriter.WritePropertyName
void LitJson::JsonWriter::WritePropertyName(::StringW property_name) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::WritePropertyName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "WritePropertyName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(property_name)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, property_name);
}
// Autogenerated method: LitJson.JsonWriter.ToString
::StringW LitJson::JsonWriter::ToString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::JsonWriter::ToString");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::Il2CppObject*), 3));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LitJson.FsmContext
#include "LitJson/FsmContext.hpp"
// Including type: LitJson.Lexer
#include "LitJson/Lexer.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Boolean Return
[[deprecated("Use field access instead!")]] bool& LitJson::FsmContext::dyn_Return() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::FsmContext::dyn_Return");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "Return"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 NextState
[[deprecated("Use field access instead!")]] int& LitJson::FsmContext::dyn_NextState() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::FsmContext::dyn_NextState");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "NextState"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public LitJson.Lexer L
[[deprecated("Use field access instead!")]] ::LitJson::Lexer*& LitJson::FsmContext::dyn_L() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::FsmContext::dyn_L");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "L"))->offset;
  return *reinterpret_cast<::LitJson::Lexer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 StateStack
[[deprecated("Use field access instead!")]] int& LitJson::FsmContext::dyn_StateStack() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::FsmContext::dyn_StateStack");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "StateStack"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LitJson.Lexer
#include "LitJson/Lexer.hpp"
// Including type: LitJson.Lexer/StateHandler
#include "LitJson/Lexer_StateHandler.hpp"
// Including type: LitJson.FsmContext
#include "LitJson/FsmContext.hpp"
// Including type: System.IO.TextReader
#include "System/IO/TextReader.hpp"
// Including type: System.Text.StringBuilder
#include "System/Text/StringBuilder.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private System.Int32[] fsm_return_table
::ArrayW<int> LitJson::Lexer::_get_fsm_return_table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::_get_fsm_return_table");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<int>>("LitJson", "Lexer", "fsm_return_table"));
}
// Autogenerated static field setter
// Set static field: static private System.Int32[] fsm_return_table
void LitJson::Lexer::_set_fsm_return_table(::ArrayW<int> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::_set_fsm_return_table");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "Lexer", "fsm_return_table", value));
}
// Autogenerated static field getter
// Get static field: static private LitJson.Lexer/StateHandler[] fsm_handler_table
::ArrayW<::LitJson::Lexer::StateHandler*> LitJson::Lexer::_get_fsm_handler_table() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::_get_fsm_handler_table");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::LitJson::Lexer::StateHandler*>>("LitJson", "Lexer", "fsm_handler_table"));
}
// Autogenerated static field setter
// Set static field: static private LitJson.Lexer/StateHandler[] fsm_handler_table
void LitJson::Lexer::_set_fsm_handler_table(::ArrayW<::LitJson::Lexer::StateHandler*> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::_set_fsm_handler_table");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "Lexer", "fsm_handler_table", value));
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean allow_comments
[[deprecated("Use field access instead!")]] bool& LitJson::Lexer::dyn_allow_comments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::dyn_allow_comments");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allow_comments"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean allow_single_quoted_strings
[[deprecated("Use field access instead!")]] bool& LitJson::Lexer::dyn_allow_single_quoted_strings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::dyn_allow_single_quoted_strings");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allow_single_quoted_strings"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean end_of_input
[[deprecated("Use field access instead!")]] bool& LitJson::Lexer::dyn_end_of_input() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::dyn_end_of_input");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "end_of_input"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private LitJson.FsmContext fsm_context
[[deprecated("Use field access instead!")]] ::LitJson::FsmContext*& LitJson::Lexer::dyn_fsm_context() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::dyn_fsm_context");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fsm_context"))->offset;
  return *reinterpret_cast<::LitJson::FsmContext**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 input_buffer
[[deprecated("Use field access instead!")]] int& LitJson::Lexer::dyn_input_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::dyn_input_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "input_buffer"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 input_char
[[deprecated("Use field access instead!")]] int& LitJson::Lexer::dyn_input_char() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::dyn_input_char");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "input_char"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.IO.TextReader reader
[[deprecated("Use field access instead!")]] ::System::IO::TextReader*& LitJson::Lexer::dyn_reader() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::dyn_reader");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "reader"))->offset;
  return *reinterpret_cast<::System::IO::TextReader**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 state
[[deprecated("Use field access instead!")]] int& LitJson::Lexer::dyn_state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::dyn_state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Text.StringBuilder string_buffer
[[deprecated("Use field access instead!")]] ::System::Text::StringBuilder*& LitJson::Lexer::dyn_string_buffer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::dyn_string_buffer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "string_buffer"))->offset;
  return *reinterpret_cast<::System::Text::StringBuilder**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String string_value
[[deprecated("Use field access instead!")]] ::StringW& LitJson::Lexer::dyn_string_value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::dyn_string_value");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "string_value"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 token
[[deprecated("Use field access instead!")]] int& LitJson::Lexer::dyn_token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::dyn_token");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "token"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 unichar
[[deprecated("Use field access instead!")]] int& LitJson::Lexer::dyn_unichar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::dyn_unichar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unichar"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: LitJson.Lexer.get_AllowComments
bool LitJson::Lexer::get_AllowComments() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::get_AllowComments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowComments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.Lexer.set_AllowComments
void LitJson::Lexer::set_AllowComments(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::set_AllowComments");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AllowComments", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LitJson.Lexer.get_AllowSingleQuotedStrings
bool LitJson::Lexer::get_AllowSingleQuotedStrings() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::get_AllowSingleQuotedStrings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_AllowSingleQuotedStrings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.Lexer.set_AllowSingleQuotedStrings
void LitJson::Lexer::set_AllowSingleQuotedStrings(bool value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::set_AllowSingleQuotedStrings");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_AllowSingleQuotedStrings", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: LitJson.Lexer.get_EndOfInput
bool LitJson::Lexer::get_EndOfInput() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::get_EndOfInput");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_EndOfInput", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.Lexer.get_Token
int LitJson::Lexer::get_Token() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::get_Token");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_Token", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.Lexer.get_StringValue
::StringW LitJson::Lexer::get_StringValue() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::get_StringValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_StringValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.Lexer..cctor
void LitJson::Lexer::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LitJson.Lexer.HexValue
int LitJson::Lexer::HexValue(int digit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::HexValue");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "HexValue", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(digit)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, digit);
}
// Autogenerated method: LitJson.Lexer.PopulateFsmTables
void LitJson::Lexer::PopulateFsmTables() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::PopulateFsmTables");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "PopulateFsmTables", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: LitJson.Lexer.ProcessEscChar
::Il2CppChar LitJson::Lexer::ProcessEscChar(int esc_char) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::ProcessEscChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "ProcessEscChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(esc_char)})));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppChar, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, esc_char);
}
// Autogenerated method: LitJson.Lexer.State1
bool LitJson::Lexer::State1(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State2
bool LitJson::Lexer::State2(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State3
bool LitJson::Lexer::State3(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State4
bool LitJson::Lexer::State4(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State4");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State4", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State5
bool LitJson::Lexer::State5(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State5");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State5", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State6
bool LitJson::Lexer::State6(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State6");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State6", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State7
bool LitJson::Lexer::State7(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State7");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State7", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State8
bool LitJson::Lexer::State8(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State8");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State8", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State9
bool LitJson::Lexer::State9(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State9");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State9", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State10
bool LitJson::Lexer::State10(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State10");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State10", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State11
bool LitJson::Lexer::State11(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State11");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State11", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State12
bool LitJson::Lexer::State12(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State12");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State12", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State13
bool LitJson::Lexer::State13(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State13");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State13", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State14
bool LitJson::Lexer::State14(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State14");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State14", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State15
bool LitJson::Lexer::State15(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State15");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State15", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State16
bool LitJson::Lexer::State16(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State16");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State16", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State17
bool LitJson::Lexer::State17(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State17");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State17", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State18
bool LitJson::Lexer::State18(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State18");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State18", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State19
bool LitJson::Lexer::State19(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State19");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State19", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State20
bool LitJson::Lexer::State20(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State20");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State20", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State21
bool LitJson::Lexer::State21(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State21");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State21", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State22
bool LitJson::Lexer::State22(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State22");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State22", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State23
bool LitJson::Lexer::State23(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State23");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State23", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State24
bool LitJson::Lexer::State24(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State24");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State24", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State25
bool LitJson::Lexer::State25(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State25");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State25", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State26
bool LitJson::Lexer::State26(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State26");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State26", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State27
bool LitJson::Lexer::State27(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State27");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State27", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.State28
bool LitJson::Lexer::State28(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::State28");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("LitJson", "Lexer", "State28", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(ctx)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer.GetChar
bool LitJson::Lexer::GetChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::GetChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.Lexer.NextChar
int LitJson::Lexer::NextChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::NextChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.Lexer.NextToken
bool LitJson::Lexer::NextToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::NextToken");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NextToken", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: LitJson.Lexer.UngetChar
void LitJson::Lexer::UngetChar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::UngetChar");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UngetChar", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: LitJson.Lexer/StateHandler
#include "LitJson/Lexer_StateHandler.hpp"
// Including type: LitJson.FsmContext
#include "LitJson/FsmContext.hpp"
// Including type: System.IAsyncResult
#include "System/IAsyncResult.hpp"
// Including type: System.AsyncCallback
#include "System/AsyncCallback.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated method: LitJson.Lexer/StateHandler.Invoke
bool LitJson::Lexer::StateHandler::Invoke(::LitJson::FsmContext* ctx) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::StateHandler::Invoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::Lexer::StateHandler*), 12));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, ctx);
}
// Autogenerated method: LitJson.Lexer/StateHandler.BeginInvoke
::System::IAsyncResult* LitJson::Lexer::StateHandler::BeginInvoke(::LitJson::FsmContext* ctx, ::System::AsyncCallback* callback, ::Il2CppObject* object) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::StateHandler::BeginInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::Lexer::StateHandler*), 13));
  return ::il2cpp_utils::RunMethodRethrow<::System::IAsyncResult*, false>(this, ___internal__method, ctx, callback, object);
}
// Autogenerated method: LitJson.Lexer/StateHandler.EndInvoke
bool LitJson::Lexer::StateHandler::EndInvoke(::System::IAsyncResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::Lexer::StateHandler::EndInvoke");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::LitJson::Lexer::StateHandler*), 14));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, result);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: LitJson.ParserToken
#include "LitJson/ParserToken.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken None
::LitJson::ParserToken LitJson::ParserToken::_get_None() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_None");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "None"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken None
void LitJson::ParserToken::_set_None(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_None");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "None", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken Number
::LitJson::ParserToken LitJson::ParserToken::_get_Number() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_Number");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "Number"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken Number
void LitJson::ParserToken::_set_Number(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_Number");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "Number", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken True
::LitJson::ParserToken LitJson::ParserToken::_get_True() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_True");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "True"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken True
void LitJson::ParserToken::_set_True(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_True");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "True", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken False
::LitJson::ParserToken LitJson::ParserToken::_get_False() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_False");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "False"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken False
void LitJson::ParserToken::_set_False(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_False");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "False", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken Null
::LitJson::ParserToken LitJson::ParserToken::_get_Null() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_Null");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "Null"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken Null
void LitJson::ParserToken::_set_Null(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_Null");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "Null", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken CharSeq
::LitJson::ParserToken LitJson::ParserToken::_get_CharSeq() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_CharSeq");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "CharSeq"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken CharSeq
void LitJson::ParserToken::_set_CharSeq(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_CharSeq");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "CharSeq", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken Char
::LitJson::ParserToken LitJson::ParserToken::_get_Char() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_Char");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "Char"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken Char
void LitJson::ParserToken::_set_Char(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_Char");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "Char", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken Text
::LitJson::ParserToken LitJson::ParserToken::_get_Text() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_Text");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "Text"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken Text
void LitJson::ParserToken::_set_Text(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_Text");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "Text", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken Object
::LitJson::ParserToken LitJson::ParserToken::_get_Object() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_Object");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "Object"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken Object
void LitJson::ParserToken::_set_Object(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_Object");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "Object", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken ObjectPrime
::LitJson::ParserToken LitJson::ParserToken::_get_ObjectPrime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_ObjectPrime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "ObjectPrime"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken ObjectPrime
void LitJson::ParserToken::_set_ObjectPrime(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_ObjectPrime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "ObjectPrime", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken Pair
::LitJson::ParserToken LitJson::ParserToken::_get_Pair() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_Pair");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "Pair"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken Pair
void LitJson::ParserToken::_set_Pair(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_Pair");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "Pair", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken PairRest
::LitJson::ParserToken LitJson::ParserToken::_get_PairRest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_PairRest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "PairRest"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken PairRest
void LitJson::ParserToken::_set_PairRest(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_PairRest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "PairRest", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken Array
::LitJson::ParserToken LitJson::ParserToken::_get_Array() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_Array");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "Array"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken Array
void LitJson::ParserToken::_set_Array(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_Array");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "Array", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken ArrayPrime
::LitJson::ParserToken LitJson::ParserToken::_get_ArrayPrime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_ArrayPrime");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "ArrayPrime"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken ArrayPrime
void LitJson::ParserToken::_set_ArrayPrime(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_ArrayPrime");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "ArrayPrime", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken Value
::LitJson::ParserToken LitJson::ParserToken::_get_Value() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_Value");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "Value"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken Value
void LitJson::ParserToken::_set_Value(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_Value");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "Value", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken ValueRest
::LitJson::ParserToken LitJson::ParserToken::_get_ValueRest() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_ValueRest");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "ValueRest"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken ValueRest
void LitJson::ParserToken::_set_ValueRest(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_ValueRest");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "ValueRest", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken String
::LitJson::ParserToken LitJson::ParserToken::_get_String() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_String");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "String"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken String
void LitJson::ParserToken::_set_String(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_String");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "String", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken End
::LitJson::ParserToken LitJson::ParserToken::_get_End() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_End");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "End"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken End
void LitJson::ParserToken::_set_End(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_End");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "End", value));
}
// Autogenerated static field getter
// Get static field: static public LitJson.ParserToken Epsilon
::LitJson::ParserToken LitJson::ParserToken::_get_Epsilon() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_get_Epsilon");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::LitJson::ParserToken>("LitJson", "ParserToken", "Epsilon"));
}
// Autogenerated static field setter
// Set static field: static public LitJson.ParserToken Epsilon
void LitJson::ParserToken::_set_Epsilon(::LitJson::ParserToken value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::_set_Epsilon");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("LitJson", "ParserToken", "Epsilon", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& LitJson::ParserToken::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::LitJson::ParserToken::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Player
#include "GorillaLocomotion/Player.hpp"
// Including type: UnityEngine.MeshCollider
#include "UnityEngine/MeshCollider.hpp"
// Including type: UnityEngine.SphereCollider
#include "UnityEngine/SphereCollider.hpp"
// Including type: UnityEngine.CapsuleCollider
#include "UnityEngine/CapsuleCollider.hpp"
// Including type: UnityEngine.Transform
#include "UnityEngine/Transform.hpp"
// Including type: UnityEngine.Rigidbody
#include "UnityEngine/Rigidbody.hpp"
// Including type: UnityEngine.GameObject
#include "UnityEngine/GameObject.hpp"
// Including type: GorillaSurfaceOverride
#include "GlobalNamespace/GorillaSurfaceOverride.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.Mesh
#include "UnityEngine/Mesh.hpp"
// Including type: UnityEngine.Material
#include "UnityEngine/Material.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: UnityEngine.Collider
#include "UnityEngine/Collider.hpp"
// Including type: UnityEngine.Renderer
#include "UnityEngine/Renderer.hpp"
// Including type: UnityEngine.AudioClip
#include "UnityEngine/AudioClip.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private GorillaLocomotion.Player _instance
::GorillaLocomotion::Player* GorillaLocomotion::Player::_get__instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::_get__instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaLocomotion::Player*>("GorillaLocomotion", "Player", "_instance"));
}
// Autogenerated static field setter
// Set static field: static private GorillaLocomotion.Player _instance
void GorillaLocomotion::Player::_set__instance(::GorillaLocomotion::Player* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::_set__instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaLocomotion", "Player", "_instance", value));
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.SphereCollider headCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::SphereCollider*& GorillaLocomotion::Player::dyn_headCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_headCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::SphereCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.CapsuleCollider bodyCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::CapsuleCollider*& GorillaLocomotion::Player::dyn_bodyCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_bodyCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::CapsuleCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single bodyInitialRadius
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_bodyInitialRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_bodyInitialRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyInitialRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single bodyInitialHeight
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_bodyInitialHeight() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_bodyInitialHeight");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyInitialHeight"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit bodyHitInfo
[[deprecated("Use field access instead!")]] ::UnityEngine::RaycastHit& GorillaLocomotion::Player::dyn_bodyHitInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_bodyHitInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyHitInfo"))->offset;
  return *reinterpret_cast<::UnityEngine::RaycastHit*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftHandFollower
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GorillaLocomotion::Player::dyn_leftHandFollower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_leftHandFollower");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandFollower"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightHandFollower
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GorillaLocomotion::Player::dyn_rightHandFollower() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_rightHandFollower");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandFollower"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform rightHandTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GorillaLocomotion::Player::dyn_rightHandTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_rightHandTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Transform leftHandTransform
[[deprecated("Use field access instead!")]] ::UnityEngine::Transform*& GorillaLocomotion::Player::dyn_leftHandTransform() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_leftHandTransform");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandTransform"))->offset;
  return *reinterpret_cast<::UnityEngine::Transform**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastLeftHandPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_lastLeftHandPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_lastLeftHandPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastLeftHandPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastRightHandPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_lastRightHandPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_lastRightHandPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastRightHandPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 lastHeadPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_lastHeadPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_lastHeadPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastHeadPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Rigidbody playerRigidBody
[[deprecated("Use field access instead!")]] ::UnityEngine::Rigidbody*& GorillaLocomotion::Player::dyn_playerRigidBody() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_playerRigidBody");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerRigidBody"))->offset;
  return *reinterpret_cast<::UnityEngine::Rigidbody**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 velocityHistorySize
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Player::dyn_velocityHistorySize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_velocityHistorySize");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocityHistorySize"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxArmLength
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_maxArmLength() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_maxArmLength");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxArmLength"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single unStickDistance
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_unStickDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_unStickDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unStickDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single velocityLimit
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_velocityLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_velocityLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocityLimit"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single slideVelocityLimit
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_slideVelocityLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_slideVelocityLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slideVelocityLimit"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single maxJumpSpeed
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_maxJumpSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_maxJumpSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxJumpSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single jumpMultiplier
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_jumpMultiplier() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_jumpMultiplier");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "jumpMultiplier"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single minimumRaycastDistance
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_minimumRaycastDistance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_minimumRaycastDistance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "minimumRaycastDistance"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single defaultSlideFactor
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_defaultSlideFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_defaultSlideFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultSlideFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single slidingMinimum
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_slidingMinimum() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_slidingMinimum");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slidingMinimum"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single defaultPrecision
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_defaultPrecision() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_defaultPrecision");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "defaultPrecision"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single teleportThresholdNoVel
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_teleportThresholdNoVel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_teleportThresholdNoVel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "teleportThresholdNoVel"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single frictionConstant
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_frictionConstant() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_frictionConstant");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "frictionConstant"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single slideControl
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_slideControl() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_slideControl");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slideControl"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single stickDepth
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_stickDepth() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_stickDepth");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "stickDepth"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] velocityHistory
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GorillaLocomotion::Player::dyn_velocityHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_velocityHistory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocityHistory"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] slideAverageHistory
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GorillaLocomotion::Player::dyn_slideAverageHistory() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_slideAverageHistory");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slideAverageHistory"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 velocityIndex
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Player::dyn_velocityIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_velocityIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "velocityIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 currentVelocity
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_currentVelocity() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_currentVelocity");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentVelocity"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 denormalizedVelocityAverage
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_denormalizedVelocityAverage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_denormalizedVelocityAverage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "denormalizedVelocityAverage"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_lastPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_lastPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 rightHandOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_rightHandOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_rightHandOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 leftHandOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_leftHandOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_leftHandOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 bodyOffset
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_bodyOffset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_bodyOffset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyOffset"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.LayerMask locomotionEnabledLayers
[[deprecated("Use field access instead!")]] ::UnityEngine::LayerMask& GorillaLocomotion::Player::dyn_locomotionEnabledLayers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_locomotionEnabledLayers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "locomotionEnabledLayers"))->offset;
  return *reinterpret_cast<::UnityEngine::LayerMask*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean wasLeftHandTouching
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Player::dyn_wasLeftHandTouching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_wasLeftHandTouching");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wasLeftHandTouching"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean wasRightHandTouching
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Player::dyn_wasRightHandTouching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_wasRightHandTouching");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wasRightHandTouching"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean wasHeadTouching
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Player::dyn_wasHeadTouching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_wasHeadTouching");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wasHeadTouching"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currentMaterialIndex
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Player::dyn_currentMaterialIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_currentMaterialIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentMaterialIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean leftHandSlide
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Player::dyn_leftHandSlide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_leftHandSlide");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandSlide"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 leftHandSlideNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_leftHandSlideNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_leftHandSlideNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandSlideNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean rightHandSlide
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Player::dyn_rightHandSlide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_rightHandSlide");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandSlide"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 rightHandSlideNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_rightHandSlideNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_rightHandSlideNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandSlideNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 headSlideNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_headSlideNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_headSlideNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headSlideNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single rightHandSlipPercentage
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_rightHandSlipPercentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_rightHandSlipPercentage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandSlipPercentage"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single leftHandSlipPercentage
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_leftHandSlipPercentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_leftHandSlipPercentage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandSlipPercentage"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single headSlipPercentage
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_headSlipPercentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_headSlipPercentage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headSlipPercentage"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean wasLeftHandSlide
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Player::dyn_wasLeftHandSlide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_wasLeftHandSlide");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wasLeftHandSlide"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean wasRightHandSlide
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Player::dyn_wasRightHandSlide() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_wasRightHandSlide");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wasRightHandSlide"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 rightHandHitPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_rightHandHitPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_rightHandHitPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandHitPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.Vector3 leftHandHitPoint
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_leftHandHitPoint() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_leftHandHitPoint");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandHitPoint"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean debugMovement
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Player::dyn_debugMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_debugMovement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugMovement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean disableMovement
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Player::dyn_disableMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_disableMovement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "disableMovement"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean inOverlay
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Player::dyn_inOverlay() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_inOverlay");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "inOverlay"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean didATurn
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Player::dyn_didATurn() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_didATurn");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didATurn"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.GameObject turnParent
[[deprecated("Use field access instead!")]] ::UnityEngine::GameObject*& GorillaLocomotion::Player::dyn_turnParent() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_turnParent");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "turnParent"))->offset;
  return *reinterpret_cast<::UnityEngine::GameObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 leftHandMaterialTouchIndex
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Player::dyn_leftHandMaterialTouchIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_leftHandMaterialTouchIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandMaterialTouchIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaSurfaceOverride leftHandSurfaceOverride
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaSurfaceOverride*& GorillaLocomotion::Player::dyn_leftHandSurfaceOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_leftHandSurfaceOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandSurfaceOverride"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaSurfaceOverride**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 rightHandMaterialTouchIndex
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Player::dyn_rightHandMaterialTouchIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_rightHandMaterialTouchIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandMaterialTouchIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaSurfaceOverride rightHandSurfaceOverride
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaSurfaceOverride*& GorillaLocomotion::Player::dyn_rightHandSurfaceOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_rightHandSurfaceOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandSurfaceOverride"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaSurfaceOverride**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaSurfaceOverride currentOverride
[[deprecated("Use field access instead!")]] ::GlobalNamespace::GorillaSurfaceOverride*& GorillaLocomotion::Player::dyn_currentOverride() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_currentOverride");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentOverride"))->offset;
  return *reinterpret_cast<::GlobalNamespace::GorillaSurfaceOverride**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GorillaLocomotion.Player/MaterialData> materialData
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaLocomotion::Player::MaterialData>*& GorillaLocomotion::Player::dyn_materialData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_materialData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialData"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaLocomotion::Player::MaterialData>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean leftHandColliding
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Player::dyn_leftHandColliding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_leftHandColliding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftHandColliding"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean rightHandColliding
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Player::dyn_rightHandColliding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_rightHandColliding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightHandColliding"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean headColliding
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Player::dyn_headColliding() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_headColliding");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "headColliding"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 finalPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_finalPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_finalPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finalPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 rigidBodyMovement
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_rigidBodyMovement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_rigidBodyMovement");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rigidBodyMovement"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 firstIterationLeftHand
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_firstIterationLeftHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_firstIterationLeftHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstIterationLeftHand"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 firstIterationRightHand
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_firstIterationRightHand() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_firstIterationRightHand");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstIterationRightHand"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 firstIterationHead
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_firstIterationHead() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_firstIterationHead");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstIterationHead"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit hitInfo
[[deprecated("Use field access instead!")]] ::UnityEngine::RaycastHit& GorillaLocomotion::Player::dyn_hitInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_hitInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hitInfo"))->offset;
  return *reinterpret_cast<::UnityEngine::RaycastHit*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit iterativeHitInfo
[[deprecated("Use field access instead!")]] ::UnityEngine::RaycastHit& GorillaLocomotion::Player::dyn_iterativeHitInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_iterativeHitInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iterativeHitInfo"))->offset;
  return *reinterpret_cast<::UnityEngine::RaycastHit*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit collisionsInnerHit
[[deprecated("Use field access instead!")]] ::UnityEngine::RaycastHit& GorillaLocomotion::Player::dyn_collisionsInnerHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_collisionsInnerHit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collisionsInnerHit"))->offset;
  return *reinterpret_cast<::UnityEngine::RaycastHit*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single slipPercentage
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_slipPercentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_slipPercentage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slipPercentage"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 bodyOffsetVector
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_bodyOffsetVector() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_bodyOffsetVector");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyOffsetVector"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 distanceTraveled
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_distanceTraveled() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_distanceTraveled");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "distanceTraveled"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 movementToProjectedAboveCollisionPlane
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_movementToProjectedAboveCollisionPlane() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_movementToProjectedAboveCollisionPlane");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "movementToProjectedAboveCollisionPlane"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.MeshCollider meshCollider
[[deprecated("Use field access instead!")]] ::UnityEngine::MeshCollider*& GorillaLocomotion::Player::dyn_meshCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_meshCollider");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meshCollider"))->offset;
  return *reinterpret_cast<::UnityEngine::MeshCollider**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Mesh collidedMesh
[[deprecated("Use field access instead!")]] ::UnityEngine::Mesh*& GorillaLocomotion::Player::dyn_collidedMesh() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_collidedMesh");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collidedMesh"))->offset;
  return *reinterpret_cast<::UnityEngine::Mesh**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaLocomotion.Player/MaterialData foundMatData
[[deprecated("Use field access instead!")]] ::GorillaLocomotion::Player::MaterialData& GorillaLocomotion::Player::dyn_foundMatData() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_foundMatData");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "foundMatData"))->offset;
  return *reinterpret_cast<::GorillaLocomotion::Player::MaterialData*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String findMatName
[[deprecated("Use field access instead!")]] ::StringW& GorillaLocomotion::Player::dyn_findMatName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_findMatName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "findMatName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 vertex1
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Player::dyn_vertex1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_vertex1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vertex1"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 vertex2
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Player::dyn_vertex2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_vertex2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vertex2"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 vertex3
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Player::dyn_vertex3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_vertex3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "vertex3"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Int32> trianglesList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<int>*& GorillaLocomotion::Player::dyn_trianglesList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_trianglesList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "trianglesList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<int>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Material> materialsList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Material*>*& GorillaLocomotion::Player::dyn_materialsList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_materialsList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "materialsList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Material*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.Dictionary`2<UnityEngine.Mesh,System.Int32[]> meshTrianglesDict
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::UnityEngine::Mesh*, ::ArrayW<int>>*& GorillaLocomotion::Player::dyn_meshTrianglesDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_meshTrianglesDict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "meshTrianglesDict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::UnityEngine::Mesh*, ::ArrayW<int>>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32[] sharedMeshTris
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GorillaLocomotion::Player::dyn_sharedMeshTris() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_sharedMeshTris");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "sharedMeshTris"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single lastRealTime
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_lastRealTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_lastRealTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastRealTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single calcDeltaTime
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_calcDeltaTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_calcDeltaTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "calcDeltaTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single tempRealTime
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_tempRealTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_tempRealTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempRealTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 junkNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_junkNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_junkNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "junkNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 slideAverage
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_slideAverage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_slideAverage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slideAverage"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 slideAverageNormal
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_slideAverageNormal() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_slideAverageNormal");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slideAverageNormal"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 tempVector3
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_tempVector3() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_tempVector3");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempVector3"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit tempHitInfo
[[deprecated("Use field access instead!")]] ::UnityEngine::RaycastHit& GorillaLocomotion::Player::dyn_tempHitInfo() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_tempHitInfo");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempHitInfo"))->offset;
  return *reinterpret_cast<::UnityEngine::RaycastHit*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit junkHit
[[deprecated("Use field access instead!")]] ::UnityEngine::RaycastHit& GorillaLocomotion::Player::dyn_junkHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_junkHit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "junkHit"))->offset;
  return *reinterpret_cast<::UnityEngine::RaycastHit*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 firstPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_firstPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_firstPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit tempIterativeHit
[[deprecated("Use field access instead!")]] ::UnityEngine::RaycastHit& GorillaLocomotion::Player::dyn_tempIterativeHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_tempIterativeHit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempIterativeHit"))->offset;
  return *reinterpret_cast<::UnityEngine::RaycastHit*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean collisionsReturnBool
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Player::dyn_collisionsReturnBool() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_collisionsReturnBool");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "collisionsReturnBool"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single overlapRadiusFunction
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_overlapRadiusFunction() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_overlapRadiusFunction");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overlapRadiusFunction"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single maxSphereSize1
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_maxSphereSize1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_maxSphereSize1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSphereSize1"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single maxSphereSize2
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_maxSphereSize2() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_maxSphereSize2");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "maxSphereSize2"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] overlapColliders
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& GorillaLocomotion::Player::dyn_overlapColliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_overlapColliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overlapColliders"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 overlapAttempts
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Player::dyn_overlapAttempts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_overlapAttempts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "overlapAttempts"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 touchPoints
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Player::dyn_touchPoints() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_touchPoints");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "touchPoints"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single averageSlipPercentage
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_averageSlipPercentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_averageSlipPercentage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "averageSlipPercentage"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 surfaceDirection
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_surfaceDirection() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_surfaceDirection");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "surfaceDirection"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single debugMagnitude
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_debugMagnitude() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_debugMagnitude");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugMagnitude"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single iceThreshold
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_iceThreshold() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_iceThreshold");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iceThreshold"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single bodyMaxRadius
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_bodyMaxRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_bodyMaxRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyMaxRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single bodyLerp
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_bodyLerp() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_bodyLerp");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bodyLerp"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean areBothTouching
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Player::dyn_areBothTouching() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_areBothTouching");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "areBothTouching"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single slideFactor
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_slideFactor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_slideFactor");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slideFactor"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean didAJump
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Player::dyn_didAJump() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_didAJump");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "didAJump"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Renderer slideRenderer
[[deprecated("Use field access instead!")]] ::UnityEngine::Renderer*& GorillaLocomotion::Player::dyn_slideRenderer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_slideRenderer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slideRenderer"))->offset;
  return *reinterpret_cast<::UnityEngine::Renderer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean iterativeIsRoom
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Player::dyn_iterativeIsRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_iterativeIsRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iterativeIsRoom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean finalIsRoom
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Player::dyn_finalIsRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_finalIsRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finalIsRoom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean firstIsRoom
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Player::dyn_firstIsRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_firstIsRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "firstIsRoom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean mainIsRoom
[[deprecated("Use field access instead!")]] bool& GorillaLocomotion::Player::dyn_mainIsRoom() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_mainIsRoom");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "mainIsRoom"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single iterativeSphereRadius
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Player::dyn_iterativeSphereRadius() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_iterativeSphereRadius");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iterativeSphereRadius"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit[] rayCastNonAllocColliders
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::RaycastHit>& GorillaLocomotion::Player::dyn_rayCastNonAllocColliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_rayCastNonAllocColliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rayCastNonAllocColliders"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::RaycastHit>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Collider[] rayCastNonAllocActuallyColliders
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Collider*>& GorillaLocomotion::Player::dyn_rayCastNonAllocActuallyColliders() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_rayCastNonAllocActuallyColliders");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rayCastNonAllocActuallyColliders"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Collider*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 tempVel
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_tempVel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_tempVel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempVel"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3[] crazyCheckVectors
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::Vector3>& GorillaLocomotion::Player::dyn_crazyCheckVectors() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_crazyCheckVectors");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "crazyCheckVectors"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::Vector3>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.RaycastHit emptyHit
[[deprecated("Use field access instead!")]] ::UnityEngine::RaycastHit& GorillaLocomotion::Player::dyn_emptyHit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_emptyHit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "emptyHit"))->offset;
  return *reinterpret_cast<::UnityEngine::RaycastHit*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 bufferCount
[[deprecated("Use field access instead!")]] int& GorillaLocomotion::Player::dyn_bufferCount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_bufferCount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "bufferCount"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.Vector3 lastOpenHeadPosition
[[deprecated("Use field access instead!")]] ::UnityEngine::Vector3& GorillaLocomotion::Player::dyn_lastOpenHeadPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_lastOpenHeadPosition");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastOpenHeadPosition"))->offset;
  return *reinterpret_cast<::UnityEngine::Vector3*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.Material> tempMaterialArray
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::Material*>*& GorillaLocomotion::Player::dyn_tempMaterialArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::dyn_tempMaterialArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempMaterialArray"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::Material*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaLocomotion.Player.get_Instance
::GorillaLocomotion::Player* GorillaLocomotion::Player::get_Instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::get_Instance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("GorillaLocomotion", "Player", "get_Instance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaLocomotion::Player*, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Player.Awake
void GorillaLocomotion::Player::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Player.InitializeValues
void GorillaLocomotion::Player::InitializeValues() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::InitializeValues");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "InitializeValues", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Player.FixedUpdate
void GorillaLocomotion::Player::FixedUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::FixedUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FixedUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Player.BodyCollider
void GorillaLocomotion::Player::BodyCollider() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::BodyCollider");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "BodyCollider", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Player.CurrentHandPosition
::UnityEngine::Vector3 GorillaLocomotion::Player::CurrentHandPosition(::UnityEngine::Transform* handTransform, ::UnityEngine::Vector3 handOffset) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::CurrentHandPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CurrentHandPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handTransform), ::il2cpp_utils::ExtractType(handOffset)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, handTransform, handOffset);
}
// Autogenerated method: GorillaLocomotion.Player.CurrentLeftHandPosition
::UnityEngine::Vector3 GorillaLocomotion::Player::CurrentLeftHandPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::CurrentLeftHandPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CurrentLeftHandPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Player.CurrentRightHandPosition
::UnityEngine::Vector3 GorillaLocomotion::Player::CurrentRightHandPosition() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::CurrentRightHandPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CurrentRightHandPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Player.PositionWithOffset
::UnityEngine::Vector3 GorillaLocomotion::Player::PositionWithOffset(::UnityEngine::Transform* transformToModify, ::UnityEngine::Vector3 offsetVector) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::PositionWithOffset");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PositionWithOffset", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(transformToModify), ::il2cpp_utils::ExtractType(offsetVector)})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, transformToModify, offsetVector);
}
// Autogenerated method: GorillaLocomotion.Player.LateUpdate
void GorillaLocomotion::Player::LateUpdate() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::LateUpdate");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LateUpdate", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Player.FirstHandIteration
void GorillaLocomotion::Player::FirstHandIteration(::UnityEngine::Transform* handTransform, ::UnityEngine::Vector3 handOffset, ::UnityEngine::Vector3 lastHandPosition, bool wasHandSlide, bool wasHandTouching, ByRef<::UnityEngine::Vector3> firstIteration, ByRef<float> handSlipPercentage, ByRef<bool> handSlide, ByRef<::UnityEngine::Vector3> slideNormal, ByRef<bool> handColliding, ByRef<int> materialTouchIndex, ByRef<::GlobalNamespace::GorillaSurfaceOverride*> touchedOverride) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::FirstHandIteration");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FirstHandIteration", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handTransform), ::il2cpp_utils::ExtractType(handOffset), ::il2cpp_utils::ExtractType(lastHandPosition), ::il2cpp_utils::ExtractType(wasHandSlide), ::il2cpp_utils::ExtractType(wasHandTouching), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractType(handSlipPercentage), ::il2cpp_utils::ExtractType(handSlide), ::il2cpp_utils::ExtractType(slideNormal), ::il2cpp_utils::ExtractType(handColliding), ::il2cpp_utils::ExtractType(materialTouchIndex), ::il2cpp_utils::ExtractType(touchedOverride)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, handTransform, handOffset, lastHandPosition, wasHandSlide, wasHandTouching, byref(firstIteration), byref(handSlipPercentage), byref(handSlide), byref(slideNormal), byref(handColliding), byref(materialTouchIndex), byref(touchedOverride));
}
// Autogenerated method: GorillaLocomotion.Player.FinalHandPosition
::UnityEngine::Vector3 GorillaLocomotion::Player::FinalHandPosition(::UnityEngine::Transform* handTransform, ::UnityEngine::Vector3 handOffset, ::UnityEngine::Vector3 lastHandPosition, bool bothTouching, bool isHandTouching, ByRef<bool> handColliding, bool isHandSlide, ByRef<bool> handSlide, int currentMaterialTouchIndex, ByRef<int> materialTouchIndex, ::GlobalNamespace::GorillaSurfaceOverride* currentSurface, ByRef<::GlobalNamespace::GorillaSurfaceOverride*> touchedOverride) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::FinalHandPosition");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FinalHandPosition", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(handTransform), ::il2cpp_utils::ExtractType(handOffset), ::il2cpp_utils::ExtractType(lastHandPosition), ::il2cpp_utils::ExtractType(bothTouching), ::il2cpp_utils::ExtractType(isHandTouching), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractType(isHandSlide), ::il2cpp_utils::ExtractIndependentType<bool&>(), ::il2cpp_utils::ExtractType(currentMaterialTouchIndex), ::il2cpp_utils::ExtractIndependentType<int&>(), ::il2cpp_utils::ExtractType(currentSurface), ::il2cpp_utils::ExtractIndependentType<::GlobalNamespace::GorillaSurfaceOverride*&>()})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::Vector3, false>(this, ___internal__method, handTransform, handOffset, lastHandPosition, bothTouching, isHandTouching, byref(handColliding), isHandSlide, byref(handSlide), currentMaterialTouchIndex, byref(materialTouchIndex), currentSurface, byref(touchedOverride));
}
// Autogenerated method: GorillaLocomotion.Player.IterativeCollisionSphereCast
bool GorillaLocomotion::Player::IterativeCollisionSphereCast(::UnityEngine::Vector3 startPosition, float sphereRadius, ::UnityEngine::Vector3 movementVector, ByRef<::UnityEngine::Vector3> endPosition, bool singleHand, ByRef<float> slipPercentage, ByRef<::UnityEngine::RaycastHit> iterativeHitInfo, bool fullSlide) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::IterativeCollisionSphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IterativeCollisionSphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(sphereRadius), ::il2cpp_utils::ExtractType(movementVector), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractType(singleHand), ::il2cpp_utils::ExtractIndependentType<float&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>(), ::il2cpp_utils::ExtractType(fullSlide)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, startPosition, sphereRadius, movementVector, byref(endPosition), singleHand, byref(slipPercentage), byref(iterativeHitInfo), fullSlide);
}
// Autogenerated method: GorillaLocomotion.Player.CollisionsSphereCast
bool GorillaLocomotion::Player::CollisionsSphereCast(::UnityEngine::Vector3 startPosition, float sphereRadius, ::UnityEngine::Vector3 movementVector, ByRef<::UnityEngine::Vector3> finalPosition, ByRef<::UnityEngine::RaycastHit> collisionsHitInfo) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::CollisionsSphereCast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CollisionsSphereCast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(sphereRadius), ::il2cpp_utils::ExtractType(movementVector), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::Vector3&>(), ::il2cpp_utils::ExtractIndependentType<::UnityEngine::RaycastHit&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, startPosition, sphereRadius, movementVector, byref(finalPosition), byref(collisionsHitInfo));
}
// Autogenerated method: GorillaLocomotion.Player.IsHandTouching
bool GorillaLocomotion::Player::IsHandTouching(bool forLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::IsHandTouching");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsHandTouching", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forLeftHand)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, forLeftHand);
}
// Autogenerated method: GorillaLocomotion.Player.IsHandSliding
bool GorillaLocomotion::Player::IsHandSliding(bool forLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::IsHandSliding");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "IsHandSliding", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(forLeftHand)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, forLeftHand);
}
// Autogenerated method: GorillaLocomotion.Player.GetSlidePercentage
float GorillaLocomotion::Player::GetSlidePercentage(::UnityEngine::RaycastHit raycastHit) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::GetSlidePercentage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetSlidePercentage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(raycastHit)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, raycastHit);
}
// Autogenerated method: GorillaLocomotion.Player.Turn
void GorillaLocomotion::Player::Turn(float degrees) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::Turn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Turn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(degrees)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, degrees);
}
// Autogenerated method: GorillaLocomotion.Player.StoreVelocities
void GorillaLocomotion::Player::StoreVelocities() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::StoreVelocities");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StoreVelocities", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Player.AntiTeleportTechnology
void GorillaLocomotion::Player::AntiTeleportTechnology() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::AntiTeleportTechnology");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AntiTeleportTechnology", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaLocomotion.Player.MaxSphereSizeForNoOverlap
bool GorillaLocomotion::Player::MaxSphereSizeForNoOverlap(float testRadius, ::UnityEngine::Vector3 checkPosition, ByRef<float> overlapRadiusTest) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::MaxSphereSizeForNoOverlap");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "MaxSphereSizeForNoOverlap", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(testRadius), ::il2cpp_utils::ExtractType(checkPosition), ::il2cpp_utils::ExtractIndependentType<float&>()})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, testRadius, checkPosition, byref(overlapRadiusTest));
}
// Autogenerated method: GorillaLocomotion.Player.CrazyCheck2
bool GorillaLocomotion::Player::CrazyCheck2(float sphereSize, ::UnityEngine::Vector3 startPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::CrazyCheck2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CrazyCheck2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(sphereSize), ::il2cpp_utils::ExtractType(startPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, sphereSize, startPosition);
}
// Autogenerated method: GorillaLocomotion.Player.NonAllocRaycast
int GorillaLocomotion::Player::NonAllocRaycast(::UnityEngine::Vector3 startPosition, ::UnityEngine::Vector3 endPosition) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::NonAllocRaycast");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "NonAllocRaycast", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(startPosition), ::il2cpp_utils::ExtractType(endPosition)})));
  return ::il2cpp_utils::RunMethodRethrow<int, false>(this, ___internal__method, startPosition, endPosition);
}
// Autogenerated method: GorillaLocomotion.Player.ClearColliderBuffer
void GorillaLocomotion::Player::ClearColliderBuffer(ByRef<::ArrayW<::UnityEngine::Collider*>> colliders) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::ClearColliderBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearColliderBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(colliders)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(colliders));
}
// Autogenerated method: GorillaLocomotion.Player.ClearRaycasthitBuffer
void GorillaLocomotion::Player::ClearRaycasthitBuffer(ByRef<::ArrayW<::UnityEngine::RaycastHit>> raycastHits) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::ClearRaycasthitBuffer");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearRaycasthitBuffer", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(raycastHits)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, byref(raycastHits));
}
// Autogenerated method: GorillaLocomotion.Player.<GetSlidePercentage>b__151_2
bool GorillaLocomotion::Player::$GetSlidePercentage$b__151_2(::GorillaLocomotion::Player::MaterialData matData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::<GetSlidePercentage>b__151_2");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetSlidePercentage>b__151_2", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, matData);
}
// Autogenerated method: GorillaLocomotion.Player.<GetSlidePercentage>b__151_3
bool GorillaLocomotion::Player::$GetSlidePercentage$b__151_3(::GorillaLocomotion::Player::MaterialData matData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::<GetSlidePercentage>b__151_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetSlidePercentage>b__151_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, matData);
}
// Autogenerated method: GorillaLocomotion.Player.<GetSlidePercentage>b__151_0
bool GorillaLocomotion::Player::$GetSlidePercentage$b__151_0(::GorillaLocomotion::Player::MaterialData matData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::<GetSlidePercentage>b__151_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetSlidePercentage>b__151_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, matData);
}
// Autogenerated method: GorillaLocomotion.Player.<GetSlidePercentage>b__151_1
bool GorillaLocomotion::Player::$GetSlidePercentage$b__151_1(::GorillaLocomotion::Player::MaterialData matData) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Player::<GetSlidePercentage>b__151_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetSlidePercentage>b__151_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(matData)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, matData);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaLocomotion.Surface
#include "GorillaLocomotion/Surface.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.Single slipPercentage
[[deprecated("Use field access instead!")]] float& GorillaLocomotion::Surface::dyn_slipPercentage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaLocomotion::Surface::dyn_slipPercentage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "slipPercentage"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn
#include "UnityEngine/XR/Interaction/Toolkit/GorillaSnapTurn.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: UnityEngine.XR.Interaction.Toolkit.XRController
#include "UnityEngine/XR/Interaction/Toolkit/XRController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static private readonly UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2>[] m_Vec2UsageList
::ArrayW<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2>> UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::_get_m_Vec2UsageList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::_get_m_Vec2UsageList");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::ArrayW<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2>>>("UnityEngine.XR.Interaction.Toolkit", "GorillaSnapTurn", "m_Vec2UsageList"));
}
// Autogenerated static field setter
// Set static field: static private readonly UnityEngine.XR.InputFeatureUsage`1<UnityEngine.Vector2>[] m_Vec2UsageList
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::_set_m_Vec2UsageList(::ArrayW<::UnityEngine::XR::InputFeatureUsage_1<::UnityEngine::Vector2>> value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::_set_m_Vec2UsageList");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "GorillaSnapTurn", "m_Vec2UsageList", value));
}
// Autogenerated instance field getter
// Get instance field: private UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn/InputAxes m_TurnUsage
[[deprecated("Use field access instead!")]] ::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes& UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_TurnUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_TurnUsage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TurnUsage"))->offset;
  return *reinterpret_cast<::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<UnityEngine.XR.Interaction.Toolkit.XRController> m_Controllers
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRController*>*& UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_Controllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_Controllers");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_Controllers"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRController*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TurnAmount
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_TurnAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_TurnAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TurnAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_DebounceTime
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_DebounceTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_DebounceTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DebounceTime"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_DeadZone
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_DeadZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_DeadZone");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_DeadZone"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_CurrentTurnAmount
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_CurrentTurnAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_CurrentTurnAmount");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_CurrentTurnAmount"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Single m_TimeStarted
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_TimeStarted() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_TimeStarted");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_TimeStarted"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean m_AxisReset
[[deprecated("Use field access instead!")]] bool& UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_AxisReset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_AxisReset");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_AxisReset"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single turnSpeed
[[deprecated("Use field access instead!")]] float& UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_turnSpeed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_turnSpeed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "turnSpeed"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.Boolean> m_ControllersWereActive
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<bool>*& UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_ControllersWereActive() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::dyn_m_ControllersWereActive");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "m_ControllersWereActive"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<bool>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.get_turnUsage
::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::get_turnUsage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::get_turnUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_turnUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.set_turnUsage
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::set_turnUsage(::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::set_turnUsage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_turnUsage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.get_controllers
::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRController*>* UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::get_controllers() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::get_controllers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_controllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRController*>*, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.set_controllers
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::set_controllers(::System::Collections::Generic::List_1<::UnityEngine::XR::Interaction::Toolkit::XRController*>* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::set_controllers");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_controllers", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.get_turnAmount
float UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::get_turnAmount() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::get_turnAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_turnAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.set_turnAmount
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::set_turnAmount(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::set_turnAmount");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_turnAmount", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.get_debounceTime
float UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::get_debounceTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::get_debounceTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_debounceTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.set_debounceTime
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::set_debounceTime(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::set_debounceTime");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_debounceTime", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.get_deadZone
float UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::get_deadZone() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::get_deadZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "get_deadZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.set_deadZone
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::set_deadZone(float value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::set_deadZone");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "set_deadZone", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(value)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, value);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.Update
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.EnsureControllerDataListSize
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::EnsureControllerDataListSize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::EnsureControllerDataListSize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "EnsureControllerDataListSize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.FakeStartTurn
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::FakeStartTurn(bool isLeft) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::FakeStartTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FakeStartTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(isLeft)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, isLeft);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.StartTurn
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::StartTurn(float amount) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::StartTurn");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "StartTurn", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(amount)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, amount);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.ChangeTurnMode
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::ChangeTurnMode(::StringW turnMode, int turnSpeedFactor) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::ChangeTurnMode");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ChangeTurnMode", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(turnMode), ::il2cpp_utils::ExtractType(turnSpeedFactor)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, turnMode, turnSpeedFactor);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn.ConvertedTurnFactor
float UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::ConvertedTurnFactor(float newTurnSpeed) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::ConvertedTurnFactor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ConvertedTurnFactor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newTurnSpeed)})));
  return ::il2cpp_utils::RunMethodRethrow<float, false>(this, ___internal__method, newTurnSpeed);
}
// Autogenerated method: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn..cctor
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::_cctor() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::.cctor");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod("UnityEngine.XR.Interaction.Toolkit", "GorillaSnapTurn", ".cctor", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(static_cast<Il2CppObject*>(nullptr), ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn/InputAxes
#include "UnityEngine/XR/Interaction/Toolkit/GorillaSnapTurn.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn/InputAxes Primary2DAxis
::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes::_get_Primary2DAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes::_get_Primary2DAxis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes>("UnityEngine.XR.Interaction.Toolkit", "GorillaSnapTurn/InputAxes", "Primary2DAxis"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn/InputAxes Primary2DAxis
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes::_set_Primary2DAxis(::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes::_set_Primary2DAxis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "GorillaSnapTurn/InputAxes", "Primary2DAxis", value));
}
// Autogenerated static field getter
// Get static field: static public UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn/InputAxes Secondary2DAxis
::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes::_get_Secondary2DAxis() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes::_get_Secondary2DAxis");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes>("UnityEngine.XR.Interaction.Toolkit", "GorillaSnapTurn/InputAxes", "Secondary2DAxis"));
}
// Autogenerated static field setter
// Set static field: static public UnityEngine.XR.Interaction.Toolkit.GorillaSnapTurn/InputAxes Secondary2DAxis
void UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes::_set_Secondary2DAxis(::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes::_set_Secondary2DAxis");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("UnityEngine.XR.Interaction.Toolkit", "GorillaSnapTurn/InputAxes", "Secondary2DAxis", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::UnityEngine::XR::Interaction::Toolkit::GorillaSnapTurn::InputAxes::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaNetworking.CosmeticsController
#include "GorillaNetworking/CosmeticsController.hpp"
// Including type: CheckoutCartButton
#include "GlobalNamespace/CheckoutCartButton.hpp"
// Including type: EarlyAccessButton
#include "GlobalNamespace/EarlyAccessButton.hpp"
// Including type: PurchaseCurrencyButton
#include "GlobalNamespace/PurchaseCurrencyButton.hpp"
// Including type: FittingRoomButton
#include "GlobalNamespace/FittingRoomButton.hpp"
// Including type: System.Collections.Generic.Dictionary`2
#include "System/Collections/Generic/Dictionary_2.hpp"
// Including type: GorillaNetworking.CosmeticsController/<>c__DisplayClass102_0
#include "GorillaNetworking/CosmeticsController_--c__DisplayClass102_0.hpp"
// Including type: GorillaNetworking.CosmeticsController/<>c__DisplayClass103_0
#include "GorillaNetworking/CosmeticsController_--c__DisplayClass103_0.hpp"
// Including type: GorillaNetworking.CosmeticsController/<CheckIfMyCosmeticsUpdated>d__103
#include "GorillaNetworking/CosmeticsController_-CheckIfMyCosmeticsUpdated-d__103.hpp"
// Including type: GorillaNetworking.CosmeticsController/<>c__DisplayClass112_0
#include "GorillaNetworking/CosmeticsController_--c__DisplayClass112_0.hpp"
// Including type: GorillaNetworking.CosmeticsController/<>c__DisplayClass113_0
#include "GorillaNetworking/CosmeticsController_--c__DisplayClass113_0.hpp"
// Including type: GorillaNetworking.CosmeticsController/<>c
#include "GorillaNetworking/CosmeticsController_--c.hpp"
// Including type: GorillaNetworking.CosmeticsController/<CheckCanGetDaily>d__114
#include "GorillaNetworking/CosmeticsController_-CheckCanGetDaily-d__114.hpp"
// Including type: GorillaNetworking.CosmeticsController/<GetMyDaily>d__115
#include "GorillaNetworking/CosmeticsController_-GetMyDaily-d__115.hpp"
// Including type: GorillaNetworking.CosmeticsController/<>c__DisplayClass116_0
#include "GorillaNetworking/CosmeticsController_--c__DisplayClass116_0.hpp"
// Including type: GorillaNetworking.CosmeticsController/<>c__DisplayClass116_1
#include "GorillaNetworking/CosmeticsController_--c__DisplayClass116_1.hpp"
// Including type: GorillaNetworking.CosmeticsController/<>c__DisplayClass116_2
#include "GorillaNetworking/CosmeticsController_--c__DisplayClass116_2.hpp"
// Including type: GorillaNetworking.CosmeticsController/<>c__DisplayClass116_3
#include "GorillaNetworking/CosmeticsController_--c__DisplayClass116_3.hpp"
// Including type: GorillaNetworking.CosmeticsController/<CheckIfQuitPurchase>d__124
#include "GorillaNetworking/CosmeticsController_-CheckIfQuitPurchase-d__124.hpp"
// Including type: System.Collections.Generic.List`1
#include "System/Collections/Generic/List_1.hpp"
// Including type: GorillaNetworking.GorillaComputer
#include "GorillaNetworking/GorillaComputer.hpp"
// Including type: PlayFab.ClientModels.CatalogItem
#include "PlayFab/ClientModels/CatalogItem.hpp"
// Including type: CosmeticStand
#include "GlobalNamespace/CosmeticStand.hpp"
// Including type: PurchaseItemButton
#include "GlobalNamespace/PurchaseItemButton.hpp"
// Including type: UnityEngine.UI.Text
#include "UnityEngine/UI/Text.hpp"
// Including type: HeadModel
#include "GlobalNamespace/HeadModel.hpp"
// Including type: PlayFab.ClientModels.UserDataRecord
#include "PlayFab/ClientModels/UserDataRecord.hpp"
// Including type: System.Collections.IEnumerator
#include "System/Collections/IEnumerator.hpp"
// Including type: Oculus.Platform.Message
#include "Oculus/Platform/Message.hpp"
// Including type: Oculus.Platform.Message`1
#include "Oculus/Platform/Message_1.hpp"
// Including type: Oculus.Platform.Models.Purchase
#include "Oculus/Platform/Models/Purchase.hpp"
// Including type: PlayFab.ClientModels.PurchaseItemResult
#include "PlayFab/ClientModels/PurchaseItemResult.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
// Including type: PlayFab.ClientModels.GetUserDataResult
#include "PlayFab/ClientModels/GetUserDataResult.hpp"
// Including type: PlayFab.ClientModels.ExecuteCloudScriptResult
#include "PlayFab/ClientModels/ExecuteCloudScriptResult.hpp"
// Including type: PlayFab.ClientModels.GetUserInventoryResult
#include "PlayFab/ClientModels/GetUserInventoryResult.hpp"
// Including type: WardrobeItemButton
#include "GlobalNamespace/WardrobeItemButton.hpp"
// Including type: UnityEngine.Sprite
#include "UnityEngine/Sprite.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.CosmeticsController instance
::GorillaNetworking::CosmeticsController* GorillaNetworking::CosmeticsController::_get_instance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::_get_instance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::CosmeticsController*>("GorillaNetworking", "CosmeticsController", "instance"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.CosmeticsController instance
void GorillaNetworking::CosmeticsController::_set_instance(::GorillaNetworking::CosmeticsController* value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::_set_instance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "CosmeticsController", "instance", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> allCosmetics
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*& GorillaNetworking::CosmeticsController::dyn_allCosmetics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_allCosmetics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allCosmetics"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,GorillaNetworking.CosmeticsController/CosmeticItem> allCosmeticsDict
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::GorillaNetworking::CosmeticsController::CosmeticItem>*& GorillaNetworking::CosmeticsController::dyn_allCosmeticsDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_allCosmeticsDict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allCosmeticsDict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::GorillaNetworking::CosmeticsController::CosmeticItem>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.Dictionary`2<System.String,System.String> allCosmeticsItemIDsfromDisplayNamesDict
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>*& GorillaNetworking::CosmeticsController::dyn_allCosmeticsItemIDsfromDisplayNamesDict() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_allCosmeticsItemIDsfromDisplayNamesDict");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "allCosmeticsItemIDsfromDisplayNamesDict"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::Dictionary_2<::StringW, ::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.CosmeticsController/CosmeticItem nullItem
[[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::CosmeticItem& GorillaNetworking::CosmeticsController::dyn_nullItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_nullItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "nullItem"))->offset;
  return *reinterpret_cast<::GorillaNetworking::CosmeticsController::CosmeticItem*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String catalog
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::CosmeticsController::dyn_catalog() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_catalog");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "catalog"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.GorillaComputer computer
[[deprecated("Use field access instead!")]] ::GorillaNetworking::GorillaComputer*& GorillaNetworking::CosmeticsController::dyn_computer() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_computer");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "computer"))->offset;
  return *reinterpret_cast<::GorillaNetworking::GorillaComputer**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] tempStringArray
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GorillaNetworking::CosmeticsController::dyn_tempStringArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_tempStringArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempStringArray"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaNetworking.CosmeticsController/CosmeticItem tempItem
[[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::CosmeticItem& GorillaNetworking::CosmeticsController::dyn_tempItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_tempItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tempItem"))->offset;
  return *reinterpret_cast<::GorillaNetworking::CosmeticsController::CosmeticItem*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<PlayFab.ClientModels.CatalogItem> catalogItems
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::PlayFab::ClientModels::CatalogItem*>*& GorillaNetworking::CosmeticsController::dyn_catalogItems() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_catalogItems");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "catalogItems"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::PlayFab::ClientModels::CatalogItem*>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean tryTwice
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::CosmeticsController::dyn_tryTwice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_tryTwice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tryTwice"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.CosmeticsController/CosmeticSet tryOnSet
[[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::CosmeticSet& GorillaNetworking::CosmeticsController::dyn_tryOnSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_tryOnSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tryOnSet"))->offset;
  return *reinterpret_cast<::GorillaNetworking::CosmeticsController::CosmeticSet*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public FittingRoomButton[] fittingRoomButtons
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::FittingRoomButton*>& GorillaNetworking::CosmeticsController::dyn_fittingRoomButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_fittingRoomButtons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "fittingRoomButtons"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::FittingRoomButton*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CosmeticStand[] cosmeticStands
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::CosmeticStand*>& GorillaNetworking::CosmeticsController::dyn_cosmeticStands() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_cosmeticStands");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cosmeticStands"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::CosmeticStand*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> currentCart
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*& GorillaNetworking::CosmeticsController::dyn_currentCart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_currentCart");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentCart"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.CosmeticsController/PurchaseItemStages currentPurchaseItemStage
[[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::PurchaseItemStages& GorillaNetworking::CosmeticsController::dyn_currentPurchaseItemStage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_currentPurchaseItemStage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentPurchaseItemStage"))->offset;
  return *reinterpret_cast<::GorillaNetworking::CosmeticsController::PurchaseItemStages*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public CheckoutCartButton[] checkoutCartButtons
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::CheckoutCartButton*>& GorillaNetworking::CosmeticsController::dyn_checkoutCartButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_checkoutCartButtons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkoutCartButtons"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::CheckoutCartButton*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PurchaseItemButton leftPurchaseButton
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PurchaseItemButton*& GorillaNetworking::CosmeticsController::dyn_leftPurchaseButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_leftPurchaseButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "leftPurchaseButton"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PurchaseItemButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PurchaseItemButton rightPurchaseButton
[[deprecated("Use field access instead!")]] ::GlobalNamespace::PurchaseItemButton*& GorillaNetworking::CosmeticsController::dyn_rightPurchaseButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_rightPurchaseButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "rightPurchaseButton"))->offset;
  return *reinterpret_cast<::GlobalNamespace::PurchaseItemButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text purchaseText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GorillaNetworking::CosmeticsController::dyn_purchaseText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_purchaseText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "purchaseText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.CosmeticsController/CosmeticItem itemToBuy
[[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::CosmeticItem& GorillaNetworking::CosmeticsController::dyn_itemToBuy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_itemToBuy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemToBuy"))->offset;
  return *reinterpret_cast<::GorillaNetworking::CosmeticsController::CosmeticItem*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public HeadModel checkoutHeadModel
[[deprecated("Use field access instead!")]] ::GlobalNamespace::HeadModel*& GorillaNetworking::CosmeticsController::dyn_checkoutHeadModel() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_checkoutHeadModel");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkoutHeadModel"))->offset;
  return *reinterpret_cast<::GlobalNamespace::HeadModel**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<System.String> playerIDList
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::StringW>*& GorillaNetworking::CosmeticsController::dyn_playerIDList() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_playerIDList");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playerIDList"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::StringW>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean foundCosmetic
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::CosmeticsController::dyn_foundCosmetic() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_foundCosmetic");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "foundCosmetic"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 attempts
[[deprecated("Use field access instead!")]] int& GorillaNetworking::CosmeticsController::dyn_attempts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_attempts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attempts"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String finalLine
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::CosmeticsController::dyn_finalLine() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_finalLine");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "finalLine"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean purchaseLocked
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::CosmeticsController::dyn_purchaseLocked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_purchaseLocked");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "purchaseLocked"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Boolean isLastHandTouchedLeft
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::CosmeticsController::dyn_isLastHandTouchedLeft() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_isLastHandTouchedLeft");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "isLastHandTouchedLeft"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.CosmeticsController/Wardrobe[] wardrobes
[[deprecated("Use field access instead!")]] ::ArrayW<::GorillaNetworking::CosmeticsController::Wardrobe>& GorillaNetworking::CosmeticsController::dyn_wardrobes() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_wardrobes");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wardrobes"))->offset;
  return *reinterpret_cast<::ArrayW<::GorillaNetworking::CosmeticsController::Wardrobe>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> unlockedCosmetics
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*& GorillaNetworking::CosmeticsController::dyn_unlockedCosmetics() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_unlockedCosmetics");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unlockedCosmetics"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> unlockedHats
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*& GorillaNetworking::CosmeticsController::dyn_unlockedHats() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_unlockedHats");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unlockedHats"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> unlockedFaces
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*& GorillaNetworking::CosmeticsController::dyn_unlockedFaces() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_unlockedFaces");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unlockedFaces"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> unlockedBadges
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*& GorillaNetworking::CosmeticsController::dyn_unlockedBadges() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_unlockedBadges");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unlockedBadges"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem> unlockedHoldable
[[deprecated("Use field access instead!")]] ::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*& GorillaNetworking::CosmeticsController::dyn_unlockedHoldable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_unlockedHoldable");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "unlockedHoldable"))->offset;
  return *reinterpret_cast<::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32[] cosmeticsPages
[[deprecated("Use field access instead!")]] ::ArrayW<int>& GorillaNetworking::CosmeticsController::dyn_cosmeticsPages() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_cosmeticsPages");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cosmeticsPages"))->offset;
  return *reinterpret_cast<::ArrayW<int>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Collections.Generic.List`1<GorillaNetworking.CosmeticsController/CosmeticItem>[] itemLists
[[deprecated("Use field access instead!")]] ::ArrayW<::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*>& GorillaNetworking::CosmeticsController::dyn_itemLists() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_itemLists");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemLists"))->offset;
  return *reinterpret_cast<::ArrayW<::System::Collections::Generic::List_1<::GorillaNetworking::CosmeticsController::CosmeticItem>*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 wardrobeType
[[deprecated("Use field access instead!")]] int& GorillaNetworking::CosmeticsController::dyn_wardrobeType() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_wardrobeType");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "wardrobeType"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.CosmeticsController/CosmeticSet currentWornSet
[[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::CosmeticSet& GorillaNetworking::CosmeticsController::dyn_currentWornSet() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_currentWornSet");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentWornSet"))->offset;
  return *reinterpret_cast<::GorillaNetworking::CosmeticsController::CosmeticSet*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String concatStringCosmeticsAllowed
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::CosmeticsController::dyn_concatStringCosmeticsAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_concatStringCosmeticsAllowed");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "concatStringCosmeticsAllowed"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text atmText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GorillaNetworking::CosmeticsController::dyn_atmText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_atmText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "atmText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String currentAtmString
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::CosmeticsController::dyn_currentAtmString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_currentAtmString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentAtmString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text infoText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GorillaNetworking::CosmeticsController::dyn_infoText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_infoText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "infoText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text earlyAccessText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GorillaNetworking::CosmeticsController::dyn_earlyAccessText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_earlyAccessText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "earlyAccessText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text[] purchaseButtonText
[[deprecated("Use field access instead!")]] ::ArrayW<::UnityEngine::UI::Text*>& GorillaNetworking::CosmeticsController::dyn_purchaseButtonText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_purchaseButtonText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "purchaseButtonText"))->offset;
  return *reinterpret_cast<::ArrayW<::UnityEngine::UI::Text*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text dailyText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GorillaNetworking::CosmeticsController::dyn_dailyText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_dailyText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "dailyText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.CosmeticsController/ATMStages currentATMStage
[[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::ATMStages& GorillaNetworking::CosmeticsController::dyn_currentATMStage() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_currentATMStage");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentATMStage"))->offset;
  return *reinterpret_cast<::GorillaNetworking::CosmeticsController::ATMStages*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text atmButtonsText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GorillaNetworking::CosmeticsController::dyn_atmButtonsText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_atmButtonsText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "atmButtonsText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 currencyBalance
[[deprecated("Use field access instead!")]] int& GorillaNetworking::CosmeticsController::dyn_currencyBalance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_currencyBalance");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currencyBalance"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String currencyName
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::CosmeticsController::dyn_currencyName() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_currencyName");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currencyName"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PurchaseCurrencyButton[] purchaseCurrencyButtons
[[deprecated("Use field access instead!")]] ::ArrayW<::GlobalNamespace::PurchaseCurrencyButton*>& GorillaNetworking::CosmeticsController::dyn_purchaseCurrencyButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_purchaseCurrencyButtons");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "purchaseCurrencyButtons"))->offset;
  return *reinterpret_cast<::ArrayW<::GlobalNamespace::PurchaseCurrencyButton*>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text currencyBoardText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GorillaNetworking::CosmeticsController::dyn_currencyBoardText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_currencyBoardText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currencyBoardText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public UnityEngine.UI.Text currencyBoxText
[[deprecated("Use field access instead!")]] ::UnityEngine::UI::Text*& GorillaNetworking::CosmeticsController::dyn_currencyBoxText() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_currencyBoxText");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currencyBoxText"))->offset;
  return *reinterpret_cast<::UnityEngine::UI::Text**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String startingCurrencyBoxTextString
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::CosmeticsController::dyn_startingCurrencyBoxTextString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_startingCurrencyBoxTextString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startingCurrencyBoxTextString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String successfulCurrencyPurchaseTextString
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::CosmeticsController::dyn_successfulCurrencyPurchaseTextString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_successfulCurrencyPurchaseTextString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "successfulCurrencyPurchaseTextString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 numShinyRocksToBuy
[[deprecated("Use field access instead!")]] int& GorillaNetworking::CosmeticsController::dyn_numShinyRocksToBuy() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_numShinyRocksToBuy");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "numShinyRocksToBuy"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single shinyRocksCost
[[deprecated("Use field access instead!")]] float& GorillaNetworking::CosmeticsController::dyn_shinyRocksCost() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_shinyRocksCost");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "shinyRocksCost"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String itemToPurchase
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::CosmeticsController::dyn_itemToPurchase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_itemToPurchase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemToPurchase"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean confirmedDidntPlayInBeta
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::CosmeticsController::dyn_confirmedDidntPlayInBeta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_confirmedDidntPlayInBeta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "confirmedDidntPlayInBeta"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean playedInBeta
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::CosmeticsController::dyn_playedInBeta() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_playedInBeta");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "playedInBeta"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean gotMyDaily
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::CosmeticsController::dyn_gotMyDaily() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_gotMyDaily");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "gotMyDaily"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean checkedDaily
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::CosmeticsController::dyn_checkedDaily() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_checkedDaily");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "checkedDaily"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String currentPurchaseID
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::CosmeticsController::dyn_currentPurchaseID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_currentPurchaseID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentPurchaseID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean hasPrice
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::CosmeticsController::dyn_hasPrice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_hasPrice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasPrice"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 searchIndex
[[deprecated("Use field access instead!")]] int& GorillaNetworking::CosmeticsController::dyn_searchIndex() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_searchIndex");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "searchIndex"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Int32 iterator
[[deprecated("Use field access instead!")]] int& GorillaNetworking::CosmeticsController::dyn_iterator() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_iterator");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "iterator"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaNetworking.CosmeticsController/CosmeticItem cosmeticItemVar
[[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::CosmeticItem& GorillaNetworking::CosmeticsController::dyn_cosmeticItemVar() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_cosmeticItemVar");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cosmeticItemVar"))->offset;
  return *reinterpret_cast<::GorillaNetworking::CosmeticsController::CosmeticItem*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public EarlyAccessButton earlyAccessButton
[[deprecated("Use field access instead!")]] ::GlobalNamespace::EarlyAccessButton*& GorillaNetworking::CosmeticsController::dyn_earlyAccessButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_earlyAccessButton");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "earlyAccessButton"))->offset;
  return *reinterpret_cast<::GlobalNamespace::EarlyAccessButton**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String userToken
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::CosmeticsController::dyn_userToken() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_userToken");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userToken"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean triggerAPI
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::CosmeticsController::dyn_triggerAPI() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_triggerAPI");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "triggerAPI"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 cloudscriptAttempts
[[deprecated("Use field access instead!")]] int& GorillaNetworking::CosmeticsController::dyn_cloudscriptAttempts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_cloudscriptAttempts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "cloudscriptAttempts"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 userLockAttempts
[[deprecated("Use field access instead!")]] int& GorillaNetworking::CosmeticsController::dyn_userLockAttempts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_userLockAttempts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userLockAttempts"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 attemptsLimit
[[deprecated("Use field access instead!")]] int& GorillaNetworking::CosmeticsController::dyn_attemptsLimit() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_attemptsLimit");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attemptsLimit"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean tryGetPurchasesTwice
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::CosmeticsController::dyn_tryGetPurchasesTwice() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_tryGetPurchasesTwice");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "tryGetPurchasesTwice"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String startupSKU
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::CosmeticsController::dyn_startupSKU() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_startupSKU");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startupSKU"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 startupAttempts
[[deprecated("Use field access instead!")]] int& GorillaNetworking::CosmeticsController::dyn_startupAttempts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_startupAttempts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "startupAttempts"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean oculusAttemptingToPurchase
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::CosmeticsController::dyn_oculusAttemptingToPurchase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_oculusAttemptingToPurchase");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "oculusAttemptingToPurchase"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean[] debugParameters
[[deprecated("Use field access instead!")]] ::ArrayW<bool>& GorillaNetworking::CosmeticsController::dyn_debugParameters() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_debugParameters");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "debugParameters"))->offset;
  return *reinterpret_cast<::ArrayW<bool>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean hasLockableItem
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::CosmeticsController::dyn_hasLockableItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_hasLockableItem");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "hasLockableItem"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.DateTime currentTime
[[deprecated("Use field access instead!")]] ::System::DateTime& GorillaNetworking::CosmeticsController::dyn_currentTime() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_currentTime");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "currentTime"))->offset;
  return *reinterpret_cast<::System::DateTime*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String lastDailyLogin
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::CosmeticsController::dyn_lastDailyLogin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_lastDailyLogin");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "lastDailyLogin"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public PlayFab.ClientModels.UserDataRecord userDataRecord
[[deprecated("Use field access instead!")]] ::PlayFab::ClientModels::UserDataRecord*& GorillaNetworking::CosmeticsController::dyn_userDataRecord() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_userDataRecord");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "userDataRecord"))->offset;
  return *reinterpret_cast<::PlayFab::ClientModels::UserDataRecord**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 secondsUntilTomorrow
[[deprecated("Use field access instead!")]] int& GorillaNetworking::CosmeticsController::dyn_secondsUntilTomorrow() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_secondsUntilTomorrow");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secondsUntilTomorrow"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Single secondsToWaitToCheckDaily
[[deprecated("Use field access instead!")]] float& GorillaNetworking::CosmeticsController::dyn_secondsToWaitToCheckDaily() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_secondsToWaitToCheckDaily");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "secondsToWaitToCheckDaily"))->offset;
  return *reinterpret_cast<float*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String returnString
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::CosmeticsController::dyn_returnString() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_returnString");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "returnString"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.String[] returnStringArray
[[deprecated("Use field access instead!")]] ::ArrayW<::StringW>& GorillaNetworking::CosmeticsController::dyn_returnStringArray() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::dyn_returnStringArray");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "returnStringArray"))->offset;
  return *reinterpret_cast<::ArrayW<::StringW>*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.Awake
void GorillaNetworking::CosmeticsController::Awake() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::Awake");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Awake", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.Update
void GorillaNetworking::CosmeticsController::Update() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::Update");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Update", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.PressFittingRoomButton
void GorillaNetworking::CosmeticsController::PressFittingRoomButton(::GlobalNamespace::FittingRoomButton* pressedFittingRoomButton, bool isLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::PressFittingRoomButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressFittingRoomButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pressedFittingRoomButton), ::il2cpp_utils::ExtractType(isLeftHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pressedFittingRoomButton, isLeftHand);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.PressCosmeticStandButton
void GorillaNetworking::CosmeticsController::PressCosmeticStandButton(::GlobalNamespace::CosmeticStand* pressedStand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::PressCosmeticStandButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressCosmeticStandButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pressedStand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pressedStand);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.PressWardrobeItemButton
void GorillaNetworking::CosmeticsController::PressWardrobeItemButton(::GorillaNetworking::CosmeticsController::CosmeticItem cosmeticItem, bool isLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::PressWardrobeItemButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressWardrobeItemButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(cosmeticItem), ::il2cpp_utils::ExtractType(isLeftHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, cosmeticItem, isLeftHand);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.PressWardrobeFunctionButton
void GorillaNetworking::CosmeticsController::PressWardrobeFunctionButton(::StringW function) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::PressWardrobeFunctionButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressWardrobeFunctionButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(function)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, function);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.PressCheckoutCartButton
void GorillaNetworking::CosmeticsController::PressCheckoutCartButton(::GlobalNamespace::CheckoutCartButton* pressedCheckoutCartButton, bool isLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::PressCheckoutCartButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressCheckoutCartButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pressedCheckoutCartButton), ::il2cpp_utils::ExtractType(isLeftHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pressedCheckoutCartButton, isLeftHand);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.PressPurchaseItemButton
void GorillaNetworking::CosmeticsController::PressPurchaseItemButton(::GlobalNamespace::PurchaseItemButton* pressedPurchaseItemButton, bool isLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::PressPurchaseItemButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressPurchaseItemButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(pressedPurchaseItemButton), ::il2cpp_utils::ExtractType(isLeftHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, pressedPurchaseItemButton, isLeftHand);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.PressEarlyAccessButton
void GorillaNetworking::CosmeticsController::PressEarlyAccessButton() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::PressEarlyAccessButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressEarlyAccessButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.ProcessPurchaseItemState
void GorillaNetworking::CosmeticsController::ProcessPurchaseItemState(::StringW buttonSide, bool isLeftHand) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::ProcessPurchaseItemState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessPurchaseItemState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(buttonSide), ::il2cpp_utils::ExtractType(isLeftHand)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, buttonSide, isLeftHand);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.FormattedPurchaseText
void GorillaNetworking::CosmeticsController::FormattedPurchaseText(::StringW finalLineVar) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::FormattedPurchaseText");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "FormattedPurchaseText", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(finalLineVar)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, finalLineVar);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.PurchaseItem
void GorillaNetworking::CosmeticsController::PurchaseItem() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::PurchaseItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PurchaseItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.UnlockItem
void GorillaNetworking::CosmeticsController::UnlockItem(::StringW itemIdToUnlock) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::UnlockItem");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UnlockItem", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(itemIdToUnlock)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, itemIdToUnlock);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.CheckIfMyCosmeticsUpdated
::System::Collections::IEnumerator* GorillaNetworking::CosmeticsController::CheckIfMyCosmeticsUpdated(::StringW itemToBuyID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::CheckIfMyCosmeticsUpdated");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIfMyCosmeticsUpdated", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(itemToBuyID)})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method, itemToBuyID);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.UpdateWardrobeModelsAndButtons
void GorillaNetworking::CosmeticsController::UpdateWardrobeModelsAndButtons() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::UpdateWardrobeModelsAndButtons");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateWardrobeModelsAndButtons", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.UpdateShoppingCart
void GorillaNetworking::CosmeticsController::UpdateShoppingCart() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::UpdateShoppingCart");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateShoppingCart", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.GetItemFromDict
::GorillaNetworking::CosmeticsController::CosmeticItem GorillaNetworking::CosmeticsController::GetItemFromDict(::StringW itemID) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::GetItemFromDict");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetItemFromDict", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(itemID)})));
  return ::il2cpp_utils::RunMethodRethrow<::GorillaNetworking::CosmeticsController::CosmeticItem, false>(this, ___internal__method, itemID);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.GetItemNameFromDisplayName
::StringW GorillaNetworking::CosmeticsController::GetItemNameFromDisplayName(::StringW displayName) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::GetItemNameFromDisplayName");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetItemNameFromDisplayName", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(displayName)})));
  return ::il2cpp_utils::RunMethodRethrow<::StringW, false>(this, ___internal__method, displayName);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.AnyMatch
bool GorillaNetworking::CosmeticsController::AnyMatch(::GorillaNetworking::CosmeticsController::CosmeticSet set, ::GorillaNetworking::CosmeticsController::CosmeticItem item) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::AnyMatch");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "AnyMatch", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(set), ::il2cpp_utils::ExtractType(item)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, set, item);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.Initialize
void GorillaNetworking::CosmeticsController::Initialize() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::Initialize");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "Initialize", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.GetLastDailyLogin
void GorillaNetworking::CosmeticsController::GetLastDailyLogin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::GetLastDailyLogin");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetLastDailyLogin", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.GetOculusPurchaseLock
void GorillaNetworking::CosmeticsController::GetOculusPurchaseLock(bool clearLock) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::GetOculusPurchaseLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOculusPurchaseLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clearLock)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clearLock);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.GetOculusPurchaseLockAttempt
void GorillaNetworking::CosmeticsController::GetOculusPurchaseLockAttempt(bool clearLock) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::GetOculusPurchaseLockAttempt");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetOculusPurchaseLockAttempt", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(clearLock)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, clearLock);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.ClearMyLock
void GorillaNetworking::CosmeticsController::ClearMyLock(int attempts) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::ClearMyLock");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ClearMyLock", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(attempts)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, attempts);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.CheckCanGetDaily
::System::Collections::IEnumerator* GorillaNetworking::CosmeticsController::CheckCanGetDaily() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::CheckCanGetDaily");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckCanGetDaily", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.GetMyDaily
::System::Collections::IEnumerator* GorillaNetworking::CosmeticsController::GetMyDaily() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::GetMyDaily");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetMyDaily", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.GetUserCosmeticsAllowed
void GorillaNetworking::CosmeticsController::GetUserCosmeticsAllowed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::GetUserCosmeticsAllowed");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetUserCosmeticsAllowed", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.ProcessATMState
void GorillaNetworking::CosmeticsController::ProcessATMState(::StringW currencyButton) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::ProcessATMState");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "ProcessATMState", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currencyButton)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currencyButton);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.SwitchToStage
void GorillaNetworking::CosmeticsController::SwitchToStage(::GorillaNetworking::CosmeticsController::ATMStages newStage) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::SwitchToStage");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SwitchToStage", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(newStage)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, newStage);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.PressCurrencyPurchaseButton
void GorillaNetworking::CosmeticsController::PressCurrencyPurchaseButton(::StringW currencyPurchaseSize) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::PressCurrencyPurchaseButton");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "PressCurrencyPurchaseButton", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(currencyPurchaseSize)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, currencyPurchaseSize);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.SetToStringArray
::ArrayW<::StringW> GorillaNetworking::CosmeticsController::SetToStringArray(::GorillaNetworking::CosmeticsController::CosmeticSet set) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::SetToStringArray");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "SetToStringArray", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(set)})));
  return ::il2cpp_utils::RunMethodRethrow<::ArrayW<::StringW>, false>(this, ___internal__method, set);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.UpdateCurrencyBoard
void GorillaNetworking::CosmeticsController::UpdateCurrencyBoard() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::UpdateCurrencyBoard");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "UpdateCurrencyBoard", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.GetCurrencyBalance
void GorillaNetworking::CosmeticsController::GetCurrencyBalance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::GetCurrencyBalance");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "GetCurrencyBalance", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.LeaveSystemMenu
void GorillaNetworking::CosmeticsController::LeaveSystemMenu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::LeaveSystemMenu");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LeaveSystemMenu", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.CheckIfQuitPurchase
::System::Collections::IEnumerator* GorillaNetworking::CosmeticsController::CheckIfQuitPurchase() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::CheckIfQuitPurchase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIfQuitPurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  return ::il2cpp_utils::RunMethodRethrow<::System::Collections::IEnumerator*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.CheckIAPPurchases
void GorillaNetworking::CosmeticsController::CheckIAPPurchases() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::CheckIAPPurchases");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "CheckIAPPurchases", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.OnGetViewerPurchasesStartup
void GorillaNetworking::CosmeticsController::OnGetViewerPurchasesStartup(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::OnGetViewerPurchasesStartup");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGetViewerPurchasesStartup", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.OnGetAccessTokenForStartupIAPCheck
void GorillaNetworking::CosmeticsController::OnGetAccessTokenForStartupIAPCheck(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::OnGetAccessTokenForStartupIAPCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGetAccessTokenForStartupIAPCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.OnGetNonceForStartupIAPCheck
void GorillaNetworking::CosmeticsController::OnGetNonceForStartupIAPCheck(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::OnGetNonceForStartupIAPCheck");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGetNonceForStartupIAPCheck", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.LaunchCheckoutFlowCallback
void GorillaNetworking::CosmeticsController::LaunchCheckoutFlowCallback(::Oculus::Platform::Message_1<::Oculus::Platform::Models::Purchase*>* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::LaunchCheckoutFlowCallback");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "LaunchCheckoutFlowCallback", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.OnGetAccessTokenForCurrencyPurchase
void GorillaNetworking::CosmeticsController::OnGetAccessTokenForCurrencyPurchase(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::OnGetAccessTokenForCurrencyPurchase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGetAccessTokenForCurrencyPurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.OnGetNonceForCurrencyPurchase
void GorillaNetworking::CosmeticsController::OnGetNonceForCurrencyPurchase(::Oculus::Platform::Message* msg) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::OnGetNonceForCurrencyPurchase");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "OnGetNonceForCurrencyPurchase", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(msg)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, msg);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.<ProcessPurchaseItemState>b__99_0
bool GorillaNetworking::CosmeticsController::$ProcessPurchaseItemState$b__99_0(::GorillaNetworking::CosmeticsController::CosmeticItem x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::<ProcessPurchaseItemState>b__99_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ProcessPurchaseItemState>b__99_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.<PurchaseItem>b__101_0
void GorillaNetworking::CosmeticsController::$PurchaseItem$b__101_0(::PlayFab::ClientModels::PurchaseItemResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::<PurchaseItem>b__101_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PurchaseItem>b__101_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.<PurchaseItem>b__101_1
void GorillaNetworking::CosmeticsController::$PurchaseItem$b__101_1(::PlayFab::PlayFabError* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::<PurchaseItem>b__101_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<PurchaseItem>b__101_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.<GetLastDailyLogin>b__110_0
void GorillaNetworking::CosmeticsController::$GetLastDailyLogin$b__110_0(::PlayFab::ClientModels::GetUserDataResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::<GetLastDailyLogin>b__110_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetLastDailyLogin>b__110_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.<GetLastDailyLogin>b__110_1
void GorillaNetworking::CosmeticsController::$GetLastDailyLogin$b__110_1(::PlayFab::PlayFabError* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::<GetLastDailyLogin>b__110_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetLastDailyLogin>b__110_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.<GetMyDaily>b__115_0
void GorillaNetworking::CosmeticsController::$GetMyDaily$b__115_0(::PlayFab::ClientModels::ExecuteCloudScriptResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::<GetMyDaily>b__115_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetMyDaily>b__115_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.<GetUserCosmeticsAllowed>b__116_0
void GorillaNetworking::CosmeticsController::$GetUserCosmeticsAllowed$b__116_0(::PlayFab::ClientModels::GetUserInventoryResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::<GetUserCosmeticsAllowed>b__116_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetUserCosmeticsAllowed>b__116_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.<GetUserCosmeticsAllowed>b__116_3
void GorillaNetworking::CosmeticsController::$GetUserCosmeticsAllowed$b__116_3(::PlayFab::PlayFabError* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::<GetUserCosmeticsAllowed>b__116_3");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetUserCosmeticsAllowed>b__116_3", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.<GetUserCosmeticsAllowed>b__116_1
void GorillaNetworking::CosmeticsController::$GetUserCosmeticsAllowed$b__116_1(::PlayFab::PlayFabError* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::<GetUserCosmeticsAllowed>b__116_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetUserCosmeticsAllowed>b__116_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.<GetCurrencyBalance>b__122_0
void GorillaNetworking::CosmeticsController::$GetCurrencyBalance$b__122_0(::PlayFab::ClientModels::GetUserInventoryResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::<GetCurrencyBalance>b__122_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetCurrencyBalance>b__122_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.<OnGetNonceForStartupIAPCheck>b__128_0
void GorillaNetworking::CosmeticsController::$OnGetNonceForStartupIAPCheck$b__128_0(::PlayFab::ClientModels::ExecuteCloudScriptResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::<OnGetNonceForStartupIAPCheck>b__128_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnGetNonceForStartupIAPCheck>b__128_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.<OnGetNonceForStartupIAPCheck>b__128_1
void GorillaNetworking::CosmeticsController::$OnGetNonceForStartupIAPCheck$b__128_1(::PlayFab::PlayFabError* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::<OnGetNonceForStartupIAPCheck>b__128_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnGetNonceForStartupIAPCheck>b__128_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.<OnGetNonceForCurrencyPurchase>b__131_0
void GorillaNetworking::CosmeticsController::$OnGetNonceForCurrencyPurchase$b__131_0(::PlayFab::ClientModels::ExecuteCloudScriptResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::<OnGetNonceForCurrencyPurchase>b__131_0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnGetNonceForCurrencyPurchase>b__131_0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: GorillaNetworking.CosmeticsController.<OnGetNonceForCurrencyPurchase>b__131_1
void GorillaNetworking::CosmeticsController::$OnGetNonceForCurrencyPurchase$b__131_1(::PlayFab::PlayFabError* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::<OnGetNonceForCurrencyPurchase>b__131_1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<OnGetNonceForCurrencyPurchase>b__131_1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaNetworking.CosmeticsController/PurchaseItemStages
#include "GorillaNetworking/CosmeticsController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages Start
::GorillaNetworking::CosmeticsController::PurchaseItemStages GorillaNetworking::CosmeticsController::PurchaseItemStages::_get_Start() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::PurchaseItemStages::_get_Start");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::CosmeticsController::PurchaseItemStages>("GorillaNetworking", "CosmeticsController/PurchaseItemStages", "Start"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages Start
void GorillaNetworking::CosmeticsController::PurchaseItemStages::_set_Start(::GorillaNetworking::CosmeticsController::PurchaseItemStages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::PurchaseItemStages::_set_Start");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "CosmeticsController/PurchaseItemStages", "Start", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages CheckoutButtonPressed
::GorillaNetworking::CosmeticsController::PurchaseItemStages GorillaNetworking::CosmeticsController::PurchaseItemStages::_get_CheckoutButtonPressed() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::PurchaseItemStages::_get_CheckoutButtonPressed");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::CosmeticsController::PurchaseItemStages>("GorillaNetworking", "CosmeticsController/PurchaseItemStages", "CheckoutButtonPressed"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages CheckoutButtonPressed
void GorillaNetworking::CosmeticsController::PurchaseItemStages::_set_CheckoutButtonPressed(::GorillaNetworking::CosmeticsController::PurchaseItemStages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::PurchaseItemStages::_set_CheckoutButtonPressed");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "CosmeticsController/PurchaseItemStages", "CheckoutButtonPressed", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages ItemSelected
::GorillaNetworking::CosmeticsController::PurchaseItemStages GorillaNetworking::CosmeticsController::PurchaseItemStages::_get_ItemSelected() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::PurchaseItemStages::_get_ItemSelected");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::CosmeticsController::PurchaseItemStages>("GorillaNetworking", "CosmeticsController/PurchaseItemStages", "ItemSelected"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages ItemSelected
void GorillaNetworking::CosmeticsController::PurchaseItemStages::_set_ItemSelected(::GorillaNetworking::CosmeticsController::PurchaseItemStages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::PurchaseItemStages::_set_ItemSelected");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "CosmeticsController/PurchaseItemStages", "ItemSelected", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages ItemOwned
::GorillaNetworking::CosmeticsController::PurchaseItemStages GorillaNetworking::CosmeticsController::PurchaseItemStages::_get_ItemOwned() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::PurchaseItemStages::_get_ItemOwned");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::CosmeticsController::PurchaseItemStages>("GorillaNetworking", "CosmeticsController/PurchaseItemStages", "ItemOwned"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages ItemOwned
void GorillaNetworking::CosmeticsController::PurchaseItemStages::_set_ItemOwned(::GorillaNetworking::CosmeticsController::PurchaseItemStages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::PurchaseItemStages::_set_ItemOwned");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "CosmeticsController/PurchaseItemStages", "ItemOwned", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages FinalPurchaseAcknowledgement
::GorillaNetworking::CosmeticsController::PurchaseItemStages GorillaNetworking::CosmeticsController::PurchaseItemStages::_get_FinalPurchaseAcknowledgement() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::PurchaseItemStages::_get_FinalPurchaseAcknowledgement");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::CosmeticsController::PurchaseItemStages>("GorillaNetworking", "CosmeticsController/PurchaseItemStages", "FinalPurchaseAcknowledgement"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages FinalPurchaseAcknowledgement
void GorillaNetworking::CosmeticsController::PurchaseItemStages::_set_FinalPurchaseAcknowledgement(::GorillaNetworking::CosmeticsController::PurchaseItemStages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::PurchaseItemStages::_set_FinalPurchaseAcknowledgement");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "CosmeticsController/PurchaseItemStages", "FinalPurchaseAcknowledgement", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages Buying
::GorillaNetworking::CosmeticsController::PurchaseItemStages GorillaNetworking::CosmeticsController::PurchaseItemStages::_get_Buying() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::PurchaseItemStages::_get_Buying");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::CosmeticsController::PurchaseItemStages>("GorillaNetworking", "CosmeticsController/PurchaseItemStages", "Buying"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages Buying
void GorillaNetworking::CosmeticsController::PurchaseItemStages::_set_Buying(::GorillaNetworking::CosmeticsController::PurchaseItemStages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::PurchaseItemStages::_set_Buying");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "CosmeticsController/PurchaseItemStages", "Buying", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages Success
::GorillaNetworking::CosmeticsController::PurchaseItemStages GorillaNetworking::CosmeticsController::PurchaseItemStages::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::PurchaseItemStages::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::CosmeticsController::PurchaseItemStages>("GorillaNetworking", "CosmeticsController/PurchaseItemStages", "Success"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages Success
void GorillaNetworking::CosmeticsController::PurchaseItemStages::_set_Success(::GorillaNetworking::CosmeticsController::PurchaseItemStages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::PurchaseItemStages::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "CosmeticsController/PurchaseItemStages", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages Failure
::GorillaNetworking::CosmeticsController::PurchaseItemStages GorillaNetworking::CosmeticsController::PurchaseItemStages::_get_Failure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::PurchaseItemStages::_get_Failure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::CosmeticsController::PurchaseItemStages>("GorillaNetworking", "CosmeticsController/PurchaseItemStages", "Failure"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.CosmeticsController/PurchaseItemStages Failure
void GorillaNetworking::CosmeticsController::PurchaseItemStages::_set_Failure(::GorillaNetworking::CosmeticsController::PurchaseItemStages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::PurchaseItemStages::_set_Failure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "CosmeticsController/PurchaseItemStages", "Failure", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GorillaNetworking::CosmeticsController::PurchaseItemStages::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::PurchaseItemStages::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaNetworking.CosmeticsController/ATMStages
#include "GorillaNetworking/CosmeticsController.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.CosmeticsController/ATMStages Unavailable
::GorillaNetworking::CosmeticsController::ATMStages GorillaNetworking::CosmeticsController::ATMStages::_get_Unavailable() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::ATMStages::_get_Unavailable");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::CosmeticsController::ATMStages>("GorillaNetworking", "CosmeticsController/ATMStages", "Unavailable"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.CosmeticsController/ATMStages Unavailable
void GorillaNetworking::CosmeticsController::ATMStages::_set_Unavailable(::GorillaNetworking::CosmeticsController::ATMStages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::ATMStages::_set_Unavailable");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "CosmeticsController/ATMStages", "Unavailable", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.CosmeticsController/ATMStages Begin
::GorillaNetworking::CosmeticsController::ATMStages GorillaNetworking::CosmeticsController::ATMStages::_get_Begin() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::ATMStages::_get_Begin");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::CosmeticsController::ATMStages>("GorillaNetworking", "CosmeticsController/ATMStages", "Begin"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.CosmeticsController/ATMStages Begin
void GorillaNetworking::CosmeticsController::ATMStages::_set_Begin(::GorillaNetworking::CosmeticsController::ATMStages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::ATMStages::_set_Begin");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "CosmeticsController/ATMStages", "Begin", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.CosmeticsController/ATMStages Menu
::GorillaNetworking::CosmeticsController::ATMStages GorillaNetworking::CosmeticsController::ATMStages::_get_Menu() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::ATMStages::_get_Menu");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::CosmeticsController::ATMStages>("GorillaNetworking", "CosmeticsController/ATMStages", "Menu"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.CosmeticsController/ATMStages Menu
void GorillaNetworking::CosmeticsController::ATMStages::_set_Menu(::GorillaNetworking::CosmeticsController::ATMStages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::ATMStages::_set_Menu");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "CosmeticsController/ATMStages", "Menu", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.CosmeticsController/ATMStages Balance
::GorillaNetworking::CosmeticsController::ATMStages GorillaNetworking::CosmeticsController::ATMStages::_get_Balance() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::ATMStages::_get_Balance");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::CosmeticsController::ATMStages>("GorillaNetworking", "CosmeticsController/ATMStages", "Balance"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.CosmeticsController/ATMStages Balance
void GorillaNetworking::CosmeticsController::ATMStages::_set_Balance(::GorillaNetworking::CosmeticsController::ATMStages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::ATMStages::_set_Balance");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "CosmeticsController/ATMStages", "Balance", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.CosmeticsController/ATMStages Choose
::GorillaNetworking::CosmeticsController::ATMStages GorillaNetworking::CosmeticsController::ATMStages::_get_Choose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::ATMStages::_get_Choose");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::CosmeticsController::ATMStages>("GorillaNetworking", "CosmeticsController/ATMStages", "Choose"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.CosmeticsController/ATMStages Choose
void GorillaNetworking::CosmeticsController::ATMStages::_set_Choose(::GorillaNetworking::CosmeticsController::ATMStages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::ATMStages::_set_Choose");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "CosmeticsController/ATMStages", "Choose", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.CosmeticsController/ATMStages Confirm
::GorillaNetworking::CosmeticsController::ATMStages GorillaNetworking::CosmeticsController::ATMStages::_get_Confirm() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::ATMStages::_get_Confirm");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::CosmeticsController::ATMStages>("GorillaNetworking", "CosmeticsController/ATMStages", "Confirm"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.CosmeticsController/ATMStages Confirm
void GorillaNetworking::CosmeticsController::ATMStages::_set_Confirm(::GorillaNetworking::CosmeticsController::ATMStages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::ATMStages::_set_Confirm");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "CosmeticsController/ATMStages", "Confirm", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.CosmeticsController/ATMStages Purchasing
::GorillaNetworking::CosmeticsController::ATMStages GorillaNetworking::CosmeticsController::ATMStages::_get_Purchasing() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::ATMStages::_get_Purchasing");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::CosmeticsController::ATMStages>("GorillaNetworking", "CosmeticsController/ATMStages", "Purchasing"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.CosmeticsController/ATMStages Purchasing
void GorillaNetworking::CosmeticsController::ATMStages::_set_Purchasing(::GorillaNetworking::CosmeticsController::ATMStages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::ATMStages::_set_Purchasing");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "CosmeticsController/ATMStages", "Purchasing", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.CosmeticsController/ATMStages Success
::GorillaNetworking::CosmeticsController::ATMStages GorillaNetworking::CosmeticsController::ATMStages::_get_Success() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::ATMStages::_get_Success");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::CosmeticsController::ATMStages>("GorillaNetworking", "CosmeticsController/ATMStages", "Success"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.CosmeticsController/ATMStages Success
void GorillaNetworking::CosmeticsController::ATMStages::_set_Success(::GorillaNetworking::CosmeticsController::ATMStages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::ATMStages::_set_Success");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "CosmeticsController/ATMStages", "Success", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.CosmeticsController/ATMStages Failure
::GorillaNetworking::CosmeticsController::ATMStages GorillaNetworking::CosmeticsController::ATMStages::_get_Failure() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::ATMStages::_get_Failure");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::CosmeticsController::ATMStages>("GorillaNetworking", "CosmeticsController/ATMStages", "Failure"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.CosmeticsController/ATMStages Failure
void GorillaNetworking::CosmeticsController::ATMStages::_set_Failure(::GorillaNetworking::CosmeticsController::ATMStages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::ATMStages::_set_Failure");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "CosmeticsController/ATMStages", "Failure", value));
}
// Autogenerated static field getter
// Get static field: static public GorillaNetworking.CosmeticsController/ATMStages Locked
::GorillaNetworking::CosmeticsController::ATMStages GorillaNetworking::CosmeticsController::ATMStages::_get_Locked() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::ATMStages::_get_Locked");
  return THROW_UNLESS(il2cpp_utils::GetFieldValue<::GorillaNetworking::CosmeticsController::ATMStages>("GorillaNetworking", "CosmeticsController/ATMStages", "Locked"));
}
// Autogenerated static field setter
// Set static field: static public GorillaNetworking.CosmeticsController/ATMStages Locked
void GorillaNetworking::CosmeticsController::ATMStages::_set_Locked(::GorillaNetworking::CosmeticsController::ATMStages value) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::ATMStages::_set_Locked");
  THROW_UNLESS(il2cpp_utils::SetFieldValue("GorillaNetworking", "CosmeticsController/ATMStages", "Locked", value));
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 value__
[[deprecated("Use field access instead!")]] int& GorillaNetworking::CosmeticsController::ATMStages::dyn_value__() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::ATMStages::dyn_value__");
  auto ___internal__instance = *this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "value__"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaNetworking.CosmeticsController/<>c__DisplayClass102_0
#include "GorillaNetworking/CosmeticsController_--c__DisplayClass102_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public System.String itemIdToUnlock
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::CosmeticsController::$$c__DisplayClass102_0::dyn_itemIdToUnlock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c__DisplayClass102_0::dyn_itemIdToUnlock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemIdToUnlock"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<>c__DisplayClass102_0.<UnlockItem>b__0
bool GorillaNetworking::CosmeticsController::$$c__DisplayClass102_0::$UnlockItem$b__0(::GorillaNetworking::CosmeticsController::CosmeticItem x) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c__DisplayClass102_0::<UnlockItem>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<UnlockItem>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(x)})));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method, x);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaNetworking.CosmeticsController/<>c__DisplayClass103_0
#include "GorillaNetworking/CosmeticsController_--c__DisplayClass103_0.hpp"
// Including type: PlayFab.ClientModels.GetSharedGroupDataResult
#include "PlayFab/ClientModels/GetSharedGroupDataResult.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.CosmeticsController <>4__this
[[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController*& GorillaNetworking::CosmeticsController::$$c__DisplayClass103_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c__DisplayClass103_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GorillaNetworking::CosmeticsController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String itemToBuyID
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::CosmeticsController::$$c__DisplayClass103_0::dyn_itemToBuyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c__DisplayClass103_0::dyn_itemToBuyID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemToBuyID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<>c__DisplayClass103_0.<CheckIfMyCosmeticsUpdated>b__0
void GorillaNetworking::CosmeticsController::$$c__DisplayClass103_0::$CheckIfMyCosmeticsUpdated$b__0(::PlayFab::ClientModels::GetSharedGroupDataResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c__DisplayClass103_0::<CheckIfMyCosmeticsUpdated>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CheckIfMyCosmeticsUpdated>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<>c__DisplayClass103_0.<CheckIfMyCosmeticsUpdated>b__1
void GorillaNetworking::CosmeticsController::$$c__DisplayClass103_0::$CheckIfMyCosmeticsUpdated$b__1(::PlayFab::PlayFabError* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c__DisplayClass103_0::<CheckIfMyCosmeticsUpdated>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<CheckIfMyCosmeticsUpdated>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
#include "beatsaber-hook/shared/utils/typedefs.h"
// Including type: GorillaNetworking.CosmeticsController/<CheckIfMyCosmeticsUpdated>d__103
#include "GorillaNetworking/CosmeticsController_-CheckIfMyCosmeticsUpdated-d__103.hpp"
// Including type: GorillaNetworking.CosmeticsController/<>c__DisplayClass103_0
#include "GorillaNetworking/CosmeticsController_--c__DisplayClass103_0.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: private System.Int32 <>1__state
[[deprecated("Use field access instead!")]] int& GorillaNetworking::CosmeticsController::$CheckIfMyCosmeticsUpdated$d__103::dyn_$$1__state() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$CheckIfMyCosmeticsUpdated$d__103::dyn_$$1__state");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>1__state"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private System.Object <>2__current
[[deprecated("Use field access instead!")]] ::Il2CppObject*& GorillaNetworking::CosmeticsController::$CheckIfMyCosmeticsUpdated$d__103::dyn_$$2__current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$CheckIfMyCosmeticsUpdated$d__103::dyn_$$2__current");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>2__current"))->offset;
  return *reinterpret_cast<::Il2CppObject**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.CosmeticsController <>4__this
[[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController*& GorillaNetworking::CosmeticsController::$CheckIfMyCosmeticsUpdated$d__103::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$CheckIfMyCosmeticsUpdated$d__103::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GorillaNetworking::CosmeticsController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.String itemToBuyID
[[deprecated("Use field access instead!")]] ::StringW& GorillaNetworking::CosmeticsController::$CheckIfMyCosmeticsUpdated$d__103::dyn_itemToBuyID() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$CheckIfMyCosmeticsUpdated$d__103::dyn_itemToBuyID");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "itemToBuyID"))->offset;
  return *reinterpret_cast<::StringW*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: private GorillaNetworking.CosmeticsController/<>c__DisplayClass103_0 <>8__1
[[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController::$$c__DisplayClass103_0*& GorillaNetworking::CosmeticsController::$CheckIfMyCosmeticsUpdated$d__103::dyn_$$8__1() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$CheckIfMyCosmeticsUpdated$d__103::dyn_$$8__1");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>8__1"))->offset;
  return *reinterpret_cast<::GorillaNetworking::CosmeticsController::$$c__DisplayClass103_0**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<CheckIfMyCosmeticsUpdated>d__103.System.IDisposable.Dispose
void GorillaNetworking::CosmeticsController::$CheckIfMyCosmeticsUpdated$d__103::System_IDisposable_Dispose() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$CheckIfMyCosmeticsUpdated$d__103::System.IDisposable.Dispose");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::CosmeticsController::$CheckIfMyCosmeticsUpdated$d__103*), 5));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<CheckIfMyCosmeticsUpdated>d__103.MoveNext
bool GorillaNetworking::CosmeticsController::$CheckIfMyCosmeticsUpdated$d__103::MoveNext() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$CheckIfMyCosmeticsUpdated$d__103::MoveNext");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::CosmeticsController::$CheckIfMyCosmeticsUpdated$d__103*), 6));
  return ::il2cpp_utils::RunMethodRethrow<bool, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<CheckIfMyCosmeticsUpdated>d__103.System.Collections.Generic.IEnumerator<System.Object>.get_Current
::Il2CppObject* GorillaNetworking::CosmeticsController::$CheckIfMyCosmeticsUpdated$d__103::System_Collections_Generic_IEnumerator$System_Object$_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$CheckIfMyCosmeticsUpdated$d__103::System.Collections.Generic.IEnumerator<System.Object>.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::CosmeticsController::$CheckIfMyCosmeticsUpdated$d__103*), 4));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<CheckIfMyCosmeticsUpdated>d__103.System.Collections.IEnumerator.Reset
void GorillaNetworking::CosmeticsController::$CheckIfMyCosmeticsUpdated$d__103::System_Collections_IEnumerator_Reset() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$CheckIfMyCosmeticsUpdated$d__103::System.Collections.IEnumerator.Reset");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::CosmeticsController::$CheckIfMyCosmeticsUpdated$d__103*), 8));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<CheckIfMyCosmeticsUpdated>d__103.System.Collections.IEnumerator.get_Current
::Il2CppObject* GorillaNetworking::CosmeticsController::$CheckIfMyCosmeticsUpdated$d__103::System_Collections_IEnumerator_get_Current() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$CheckIfMyCosmeticsUpdated$d__103::System.Collections.IEnumerator.get_Current");
  auto* ___internal__method = THROW_UNLESS(::il2cpp_utils::ResolveVtableSlot(this, classof(::GorillaNetworking::CosmeticsController::$CheckIfMyCosmeticsUpdated$d__103*), 7));
  return ::il2cpp_utils::RunMethodRethrow<::Il2CppObject*, false>(this, ___internal__method);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaNetworking.CosmeticsController/<>c__DisplayClass112_0
#include "GorillaNetworking/CosmeticsController_--c__DisplayClass112_0.hpp"
// Including type: PlayFab.ClientModels.GetUserDataResult
#include "PlayFab/ClientModels/GetUserDataResult.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.CosmeticsController <>4__this
[[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController*& GorillaNetworking::CosmeticsController::$$c__DisplayClass112_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c__DisplayClass112_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GorillaNetworking::CosmeticsController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Boolean clearLock
[[deprecated("Use field access instead!")]] bool& GorillaNetworking::CosmeticsController::$$c__DisplayClass112_0::dyn_clearLock() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c__DisplayClass112_0::dyn_clearLock");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "clearLock"))->offset;
  return *reinterpret_cast<bool*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<>c__DisplayClass112_0.<GetOculusPurchaseLockAttempt>b__0
void GorillaNetworking::CosmeticsController::$$c__DisplayClass112_0::$GetOculusPurchaseLockAttempt$b__0(::PlayFab::ClientModels::GetUserDataResult* result) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c__DisplayClass112_0::<GetOculusPurchaseLockAttempt>b__0");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetOculusPurchaseLockAttempt>b__0", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(result)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, result);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<>c__DisplayClass112_0.<GetOculusPurchaseLockAttempt>b__1
void GorillaNetworking::CosmeticsController::$$c__DisplayClass112_0::$GetOculusPurchaseLockAttempt$b__1(::PlayFab::PlayFabError* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c__DisplayClass112_0::<GetOculusPurchaseLockAttempt>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<GetOculusPurchaseLockAttempt>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
// Autogenerated from CppSourceCreator
// Created by Sc2ad
// =========================================================================
// Begin includes
// Including type: GorillaNetworking.CosmeticsController/<>c__DisplayClass113_0
#include "GorillaNetworking/CosmeticsController_--c__DisplayClass113_0.hpp"
// Including type: PlayFab.PlayFabError
#include "PlayFab/PlayFabError.hpp"
#include "beatsaber-hook/shared/utils/il2cpp-utils.hpp"
#include "beatsaber-hook/shared/utils/utils.h"
// Completed includes
// Autogenerated instance field getter
// Get instance field: public GorillaNetworking.CosmeticsController <>4__this
[[deprecated("Use field access instead!")]] ::GorillaNetworking::CosmeticsController*& GorillaNetworking::CosmeticsController::$$c__DisplayClass113_0::dyn_$$4__this() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c__DisplayClass113_0::dyn_$$4__this");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "<>4__this"))->offset;
  return *reinterpret_cast<::GorillaNetworking::CosmeticsController**>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated instance field getter
// Get instance field: public System.Int32 attempts
[[deprecated("Use field access instead!")]] int& GorillaNetworking::CosmeticsController::$$c__DisplayClass113_0::dyn_attempts() {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c__DisplayClass113_0::dyn_attempts");
  auto ___internal__instance = this;
  static auto ___internal__field__offset = THROW_UNLESS(il2cpp_utils::FindField(___internal__instance, "attempts"))->offset;
  return *reinterpret_cast<int*>(reinterpret_cast<char*>(this) + ___internal__field__offset);
}
// Autogenerated method: GorillaNetworking.CosmeticsController/<>c__DisplayClass113_0.<ClearMyLock>b__1
void GorillaNetworking::CosmeticsController::$$c__DisplayClass113_0::$ClearMyLock$b__1(::PlayFab::PlayFabError* error) {
  static auto ___internal__logger = ::Logger::get().WithContext("::GorillaNetworking::CosmeticsController::$$c__DisplayClass113_0::<ClearMyLock>b__1");
  static auto* ___internal__method = THROW_UNLESS((::il2cpp_utils::FindMethod(this, "<ClearMyLock>b__1", std::vector<Il2CppClass*>{}, ::std::vector<const Il2CppType*>{::il2cpp_utils::ExtractType(error)})));
  ::il2cpp_utils::RunMethodRethrow<void, false>(this, ___internal__method, error);
}
